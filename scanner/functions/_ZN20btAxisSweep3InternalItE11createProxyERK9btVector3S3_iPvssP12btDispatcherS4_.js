function _ZN20btAxisSweep3InternalItE11createProxyERK9btVector3S3_iPvssP12btDispatcherS4_(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var r7;
	var r8;
	var r9;
	var r10;
	var r11;
	var r12;
	var r13;
	var r14;
	var r15;
	var r16;
	var r17;
	var r18;
	var f0;
	var f1;
	var f2;
var __label__ = 0;
	i7 = sp + -56;var g0 = i7>>2; // save stack
	r0 = heap32[(fp+1)];
	r1 = r0 >> 2;
	f0 = heapFloat[(r1)];
	f1 = heapFloat[(r1+1)];
	f2 = heapFloat[(r1+2)];
	r1 = heap32[(fp)];
	r2 = sp + -6;
	heap32[(g0)] = r1;
	heap32[(g0+1)] = r2;
	heapFloat[(g0+2)] = f0;
	heapFloat[(g0+3)] = f1;
	heapFloat[(g0+4)] = f2;
	heap32[(g0+5)] = 0;
	r2 = heap32[(fp+2)];
	_ZNK20btAxisSweep3InternalItE8quantizeEPtRK9btVector3i(i7);
	r3 = r2 >> 2;
	f0 = heapFloat[(r3)];
	f1 = heapFloat[(r3+1)];
	f2 = heapFloat[(r3+2)];
	r3 = sp + -12;
	heap32[(g0)] = r1;
	heap32[(g0+1)] = r3;
	heapFloat[(g0+2)] = f0;
	heapFloat[(g0+3)] = f1;
	heapFloat[(g0+4)] = f2;
	heap32[(g0+5)] = 1;
	_ZNK20btAxisSweep3InternalItE8quantizeEPtRK9btVector3i(i7);
	r3 = heapU16[(r1+64)>>1];
	if(r3 !=0) //_LBB66_2
{
	r4 = heap32[(fp+4)];
	r5 = heap32[(fp+5)];
	r6 = heap32[(fp+6)];
	r7 = heap32[(fp+7)];
	r8 = heap32[(fp+8)];
	r9 = r1 >> 2;
	r10 = r3 << 6;
	r11 = heap32[(r9+15)];
	r10 = (r11 + r10)|0;
	r11 = heapU16[(r10+48)>>1];
	heap16[(r1+64)>>1] = r11;
	r11 = heapU16[(r1+56)>>1];
	r11 = (r11 + 1)|0;
	r12 = r10 >> 2;
	heap16[(r1+56)>>1] = r11;
	heap32[(r12+3)] = r3;
	heap32[(r12)] = r4;
	heap16[(r10+4)>>1] = r5;
	heap16[(r10+6)>>1] = r6;
	heap32[(r12+2)] = r8;
	r8 = heap32[(r9+15)];
	r11 = heapU16[(r1+56)>>1];
	r11 = r11 << 1;
	r12 = heapU16[(r8+54)>>1];
	r13 = r11 & 65534;
	r12 = (r12 + 2)|0;
	r14 = (r13 + -1)|0;
	heap16[(r8+54)>>1] = r12;
	r8 = r14 << 2;
	r12 = heap32[(r9+17)];
	r14 = (r12 + r8)|0;
	r15 = r13 | 1;
	r14 = heapU16[(r14+2)>>1];
	r16 = heapU16[(r12+r8)>>1];
	r15 = r15 << 2;
	r17 = (r12 + r15)|0;
	heap16[(r12+r15)>>1] = r16;
	heap16[(r17+2)>>1] = r14;
	r12 = heap32[(r9+17)];
	r14 = heapU16[(sp+-6)>>1];
	heap16[(r12+r8)>>1] = r14;
	r12 = heap32[(r9+17)];
	r12 = (r12 + r8)|0;
	heap16[(r12+2)>>1] = r3;
	r12 = heap32[(r9+17)];
	r14 = heapU16[(sp+-12)>>1];
	r13 = r13 << 2;
	heap16[(r12+r13)>>1] = r14;
	r12 = heap32[(r9+17)];
	r12 = (r12 + r13)|0;
	r14 = (r11 + -1)|0;
	heap16[(r12+2)>>1] = r3;
	heap16[(r10+48)>>1] = r14;
	heap16[(r10+54)>>1] = r11;
	r12 = heap32[(r9+15)];
	r16 = heapU16[(r12+56)>>1];
	r16 = (r16 + 2)|0;
	heap16[(r12+56)>>1] = r16;
	r12 = heap32[(r9+18)];
	r16 = (r12 + r8)|0;
	r16 = heapU16[(r16+2)>>1];
	r17 = heapU16[(r12+r8)>>1];
	r18 = (r12 + r15)|0;
	heap16[(r12+r15)>>1] = r17;
	heap16[(r18+2)>>1] = r16;
	r12 = heap32[(r9+18)];
	r16 = heapU16[(sp+-4)>>1];
	heap16[(r12+r8)>>1] = r16;
	r12 = heap32[(r9+18)];
	r12 = (r12 + r8)|0;
	heap16[(r12+2)>>1] = r3;
	r12 = heap32[(r9+18)];
	r16 = heapU16[(sp+-10)>>1];
	heap16[(r12+r13)>>1] = r16;
	r12 = heap32[(r9+18)];
	r12 = (r12 + r13)|0;
	heap16[(r12+2)>>1] = r3;
	heap16[(r10+50)>>1] = r14;
	heap16[(r10+56)>>1] = r11;
	r12 = heap32[(r9+15)];
	r16 = heapU16[(r12+58)>>1];
	r16 = (r16 + 2)|0;
	heap16[(r12+58)>>1] = r16;
	r12 = heap32[(r9+19)];
	r16 = (r12 + r8)|0;
	r16 = heapU16[(r16+2)>>1];
	r17 = heapU16[(r12+r8)>>1];
	r18 = (r12 + r15)|0;
	heap16[(r12+r15)>>1] = r17;
	heap16[(r18+2)>>1] = r16;
	r12 = heap32[(r9+19)];
	r15 = heapU16[(sp+-2)>>1];
	heap16[(r12+r8)>>1] = r15;
	r12 = heap32[(r9+19)];
	r8 = (r12 + r8)|0;
	heap16[(r8+2)>>1] = r3;
	r8 = heap32[(r9+19)];
	r12 = heapU16[(sp+-8)>>1];
	heap16[(r8+r13)>>1] = r12;
	r8 = heap32[(r9+19)];
	r8 = (r8 + r13)|0;
	heap16[(r8+2)>>1] = r3;
	heap16[(r10+52)>>1] = r14;
	heap16[(r10+58)>>1] = r11;
	r8 = heapU16[(r10+48)>>1];
	heap32[(g0)] = r1;
	heap32[(g0+1)] = 0;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = 0;
	_ZN20btAxisSweep3InternalItE11sortMinDownEitP12btDispatcherb(i7);
	r8 = heapU16[(r10+54)>>1];
	heap32[(g0)] = r1;
	heap32[(g0+1)] = 0;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = r7;
	heap32[(g0+4)] = 0;
	_ZN20btAxisSweep3InternalItE11sortMaxDownEitP12btDispatcherb(i7);
	r8 = heapU16[(r10+50)>>1];
	heap32[(g0)] = r1;
	heap32[(g0+1)] = 1;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = 0;
	_ZN20btAxisSweep3InternalItE11sortMinDownEitP12btDispatcherb(i7);
	r8 = heapU16[(r10+56)>>1];
	heap32[(g0)] = r1;
	heap32[(g0+1)] = 1;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = r7;
	heap32[(g0+4)] = 0;
	_ZN20btAxisSweep3InternalItE11sortMaxDownEitP12btDispatcherb(i7);
	r8 = heapU16[(r10+52)>>1];
	heap32[(g0)] = r1;
	heap32[(g0+1)] = 2;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = 1;
	_ZN20btAxisSweep3InternalItE11sortMinDownEitP12btDispatcherb(i7);
	r8 = heapU16[(r10+58)>>1];
	heap32[(g0)] = r1;
	heap32[(g0+1)] = 2;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = r7;
	heap32[(g0+4)] = 1;
	_ZN20btAxisSweep3InternalItE11sortMaxDownEitP12btDispatcherb(i7);
        updateMandreelStats(performance.now());
	r1 = heap32[(r9+27)];
	r8 = heap32[(r9+15)];
if(!(r1 ==0)) //_LBB66_4
{
	r9 = heap32[(fp+3)];
	r10 = r1 >> 2;
	r10 = heap32[(r10)];
	r10 = r10 >> 2;
	r10 = heap32[(r10+2)];
	r11 = r3 << 6;
	heap32[(g0)] = r1;
	heap32[(g0+1)] = r0;
	heap32[(g0+2)] = r2;
	heap32[(g0+3)] = r9;
	heap32[(g0+4)] = r4;
	heap32[(g0+5)] = r5;
	heap32[(g0+6)] = r6;
	heap32[(g0+7)] = r7;
	heap32[(g0+8)] = 0;
	r0 = (r8 + r11)|0;
	r0 = r0 >> 2;
	__FUNCTION_TABLE__[(r10)>>2](i7);
	heap32[(r0+15)] = r_g0;
}
	r0 = r3 << 6;
	r0 = (r8 + r0)|0;
	r_g0 = r0;
	return;
}
else{
	r0 = _2E_str213;
	r1 = _2E_str112;
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r1;
	heap32[(g0+2)] = 483;
	_assert(i7);
}
}