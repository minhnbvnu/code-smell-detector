function IZ(e,t){function n(n){if(t.displayCallback){for(var r=[],i=e.getRepresentationStates(),o=0;o<i.length;o++)i[o].getActive()&&r.push(n[o]);if(r.length)return void t.displayCallback(r)}t.displayCallback()}t.classHierarchy.push("vtkSphereHandleRepresentation"),t.internalPolyData=tc.newInstance({mtime:0}),t.internalArrays={points:t.internalPolyData.getPoints(),scale:Yn.newInstance({name:"scale",numberOfComponents:1,empty:!0}),color:Yn.newInstance({name:"color",numberOfComponents:1,empty:!0})},t.internalPolyData.getPointData().addArray(t.internalArrays.scale),t.internalPolyData.getPointData().addArray(t.internalArrays.color),t.displayMapper=Mx.newInstance(),t.displayActor=Mv.newInstance({parentProp:e}),t.displayActor.setMapper(t.displayMapper),t.displayMapper.setInputConnection(e.getOutputPort()),e.addActor(t.displayActor),t.alwaysVisibleActors=[t.displayActor],t.mapper=WF.newInstance({scaleArray:"scale",colorByArrayName:"color",scalarMode:gs.USE_POINT_FIELD_DATA}),t.actor=Mv.newInstance({parentProp:e}),t.glyph=ch.newInstance({phiResolution:t.glyphResolution,thetaResolution:t.glyphResolution}),t.mapper.setInputConnection(e.getOutputPort(),0),t.mapper.setInputConnection(t.glyph.getOutputPort(),1),t.actor.setMapper(t.mapper),e.addActor(t.actor),e.setGlyphResolution=Se.chain(e.setGlyphResolution,(function(e){return t.glyph.setPhiResolution(e)&&t.glyph.setThetaResolution(e)})),e.setDisplayCallback=function(e){t.displayCallback=e,t.displayMapper.setCallback(e?n:null)},e.requestData=function(n,r){var i=t.internalArrays,o=i.points,a=i.scale,s=i.color,l=e.getRepresentationStates(n[0]),u=l.length;s.getNumberOfValues()!==u&&(o.setData(new Float32Array(3*u),3),a.setData(new Float32Array(u)),s.setData(new Float32Array(u)));for(var c={points:o.getData(),scale:a.getData(),color:s.getData()},d=0;d<l.length;d++){var p=l[d],f=p.getActive(),h=f?t.activeScaleFactor:1,m=p.getOrigin();c.points[3*d+0]=m[0],c.points[3*d+1]=m[1],c.points[3*d+2]=m[2],c.scale[d]=h*(!p.isVisible||p.isVisible()?1:0)*(p.getScale1?p.getScale1():t.defaultScale),e.getScaleInPixels()&&(c.scale[d]*=e.getPixelWorldHeightAtCoord(m)),c.color[d]=t.useActiveColor&&f?t.activeColor:p.getColor()}t.internalPolyData.modified(),r[0]=t.internalPolyData}}