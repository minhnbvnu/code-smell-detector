function _ZNK17btCollisionObject9serializeEPvP12btSerializer(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
var __label__ = 0;
	i7 = sp + -8;var g0 = i7>>2; // save stack
	r0 = heap32[(fp)];
	r1 = heap32[(fp+1)];
	r2 = r0 >> 2;
	r1 = r1 >> 2;
	heap32[(r1+4)] = heap32[(r2+1)];
	heap32[(r1+5)] = heap32[(r2+2)];
	heap32[(r1+6)] = heap32[(r2+3)];
	heap32[(r1+7)] = heap32[(r2+4)];
	heap32[(r1+8)] = heap32[(r2+5)];
	heap32[(r1+9)] = heap32[(r2+6)];
	heap32[(r1+10)] = heap32[(r2+7)];
	heap32[(r1+11)] = heap32[(r2+8)];
	heap32[(r1+12)] = heap32[(r2+9)];
	heap32[(r1+13)] = heap32[(r2+10)];
	heap32[(r1+14)] = heap32[(r2+11)];
	heap32[(r1+15)] = heap32[(r2+12)];
	heap32[(r1+16)] = heap32[(r2+13)];
	heap32[(r1+17)] = heap32[(r2+14)];
	heap32[(r1+18)] = heap32[(r2+15)];
	heap32[(r1+19)] = heap32[(r2+16)];
	heap32[(r1+20)] = heap32[(r2+17)];
	heap32[(r1+21)] = heap32[(r2+18)];
	heap32[(r1+22)] = heap32[(r2+19)];
	heap32[(r1+23)] = heap32[(r2+20)];
	heap32[(r1+24)] = heap32[(r2+21)];
	heap32[(r1+25)] = heap32[(r2+22)];
	heap32[(r1+26)] = heap32[(r2+23)];
	heap32[(r1+27)] = heap32[(r2+24)];
	heap32[(r1+28)] = heap32[(r2+25)];
	heap32[(r1+29)] = heap32[(r2+26)];
	heap32[(r1+30)] = heap32[(r2+27)];
	heap32[(r1+31)] = heap32[(r2+28)];
	heap32[(r1+32)] = heap32[(r2+29)];
	heap32[(r1+33)] = heap32[(r2+30)];
	heap32[(r1+34)] = heap32[(r2+31)];
	heap32[(r1+35)] = heap32[(r2+32)];
	heap32[(r1+36)] = heap32[(r2+33)];
	heap32[(r1+37)] = heap32[(r2+34)];
	heap32[(r1+38)] = heap32[(r2+35)];
	heap32[(r1+39)] = heap32[(r2+36)];
	heap32[(r1+40)] = heap32[(r2+37)];
	heap32[(r1+41)] = heap32[(r2+38)];
	heap32[(r1+42)] = heap32[(r2+39)];
	heap32[(r1+43)] = heap32[(r2+40)];
	heap32[(r1+44)] = heap32[(r2+41)];
	heap32[(r1+45)] = heap32[(r2+42)];
	heap32[(r1+46)] = heap32[(r2+43)];
	heap32[(r1+47)] = heap32[(r2+44)];
	r3 = heap32[(r2+45)];
	heap32[(r1+55)] = r3;
	r3 = heap32[(fp+2)];
	heap32[(r1+48)] = heap32[(r2+46)];
	heap32[(r1)] = 0;
	r4 = r3 >> 2;
	r5 = heap32[(r4)];
	r5 = r5 >> 2;
	r5 = heap32[(r5+7)];
	r6 = heap32[(r2+48)];
	heap32[(g0)] = r3;
	heap32[(g0+1)] = r6;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	heap32[(r1+1)] = r_g0;
	heap32[(r1+2)] = 0;
	r5 = heap32[(r2+51)];
	heap32[(r1+56)] = r5;
	r5 = heap32[(r2+52)];
	heap32[(r1+57)] = r5;
	r5 = heap32[(r2+53)];
	heap32[(r1+58)] = r5;
	r5 = heap32[(r2+54)];
	heap32[(r1+59)] = r5;
	r5 = heap32[(r2+54)];
	heap32[(r1+59)] = r5;
	heap32[(r1+49)] = heap32[(r2+55)];
	heap32[(r1+50)] = heap32[(r2+56)];
	heap32[(r1+51)] = heap32[(r2+57)];
	r5 = heap32[(r2+58)];
	heap32[(r1+60)] = r5;
	r5 = heap32[(r4)];
	r5 = r5 >> 2;
	r5 = heap32[(r5+10)];
	heap32[(g0)] = r3;
	heap32[(g0+1)] = r0;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	r0 = r_g0;
	r5 = heap32[(r4)];
	r5 = r5 >> 2;
	r5 = heap32[(r5+7)];
	heap32[(g0)] = r3;
	heap32[(g0+1)] = r0;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	r5 = r_g0;
	heap32[(r1+3)] = r5;
if(!(r5 ==0)) //_LBB190_2
{
	r4 = heap32[(r4)];
	r4 = r4 >> 2;
	r4 = heap32[(r4+12)];
	heap32[(g0)] = r3;
	heap32[(g0+1)] = r0;
	__FUNCTION_TABLE__[(r4)>>2](i7);
}
	heap32[(r1+52)] = heap32[(r2+60)];
	heap32[(r1+53)] = heap32[(r2+61)];
	heap32[(r1+54)] = heap32[(r2+62)];
	heap32[(r1+54)] = heap32[(r2+62)];
	r0 = heap32[(r2+63)];
	heap32[(r1+61)] = r0;
	r0 = _2E_str78;
	r_g0 = r0;
	return;
}