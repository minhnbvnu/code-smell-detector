function _res0_free_look($i) {
 $i = $i|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $j$03 = 0, $j$12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($i|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($i)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(0);
 $4 = ((($i)) + 20|0);
 if ($3) {
  $24 = $2;$j$03 = 0;
  while(1) {
   $5 = HEAP32[$4>>2]|0;
   $6 = (($5) + ($j$03<<2)|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(0|0);
   if ($8) {
    $11 = $24;
   } else {
    _free($7);
    $$pre = HEAP32[$1>>2]|0;
    $11 = $$pre;
   }
   $9 = (($j$03) + 1)|0;
   $10 = ($9|0)<($11|0);
   if ($10) {
    $24 = $11;$j$03 = $9;
   } else {
    break;
   }
  }
 }
 $12 = HEAP32[$4>>2]|0;
 _free($12);
 $13 = ((($i)) + 24|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)>(0);
 $16 = ((($i)) + 28|0);
 if ($15) {
  $j$12 = 0;
  while(1) {
   $17 = HEAP32[$16>>2]|0;
   $18 = (($17) + ($j$12<<2)|0);
   $19 = HEAP32[$18>>2]|0;
   _free($19);
   $20 = (($j$12) + 1)|0;
   $21 = HEAP32[$13>>2]|0;
   $22 = ($20|0)<($21|0);
   if ($22) {
    $j$12 = $20;
   } else {
    break;
   }
  }
 }
 $23 = HEAP32[$16>>2]|0;
 _free($23);
 _free($i);
 return;
}