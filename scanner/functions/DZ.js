function DZ(n){let{inputs:t,backend:e,attrs:i}=n,{x:r,filter:o,bias:s,preluActivationWeights:a}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=i,f=[],m=u;m==null&&(m=[1,1]),R.assert(F.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let x=F.computeConv2DInfo(r.shape,o.shape,l,m,c,h,!0),g=ot().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels===1,v=p?jo(p,g):null,b=[r,o],y=s!=null,_=a!=null,S=p==="leakyrelu";if(y&&b.push(s),_&&b.push(a),S){let P=e.makeTensorInfo([],"float32",R.createScalarValue(d,"float32"));b.push(P),f.push(P)}let E;g?E=new ac(x,y,v,_,S):E=new sc(x,y,v,_,S);let M=e.runWebGLProgram(E,b,"float32");return f.forEach(P=>e.disposeIntermediateTensorInfo(P)),M}