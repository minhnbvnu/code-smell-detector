function matchGrammar(i,o,s,u,_,w){for(var P in s)if(s.hasOwnProperty(P)&&s[P]){var B=s[P];B=Array.isArray(B)?B:[B];for(var z=0;z<B.length;++z){if(w&&w.cause==P+","+z)return;var U=B[z],V=U.inside,$=!!U.lookbehind,Z=!!U.greedy,X=U.alias;if(Z&&!U.pattern.global){var Y=U.pattern.toString().match(/[imsuy]*$/)[0];U.pattern=RegExp(U.pattern.source,Y+"g")}for(var ee=U.pattern||U,ae=u.next,de=_;ae!==o.tail&&!(w&&de>=w.reach);de+=ae.value.length,ae=ae.next){var ie=ae.value;if(o.length>i.length)return;if(!(ie instanceof Token)){var le,ce=1;if(Z){if(!(le=matchPattern(ee,de,i,$))||le.index>=i.length)break;var pe=le.index,Re=le.index+le[0].length,fe=de;for(fe+=ae.value.length;pe>=fe;)fe+=(ae=ae.next).value.length;if(de=fe-=ae.value.length,ae.value instanceof Token)continue;for(var ye=ae;ye!==o.tail&&(fe<Re||"string"==typeof ye.value);ye=ye.next)ce++,fe+=ye.value.length;ce--,ie=i.slice(de,fe),le.index-=de}else if(!(le=matchPattern(ee,0,ie,$)))continue;pe=le.index;var be=le[0],xe=ie.slice(0,pe),_e=ie.slice(pe+be.length),Se=de+ie.length;w&&Se>w.reach&&(w.reach=Se);var we=ae.prev;if(xe&&(we=addAfter(o,we,xe),de+=xe.length),removeRange(o,we,ce),ae=addAfter(o,we,new Token(P,V?C.tokenize(be,V):be,X,be)),_e&&addAfter(o,ae,_e),ce>1){var Pe={cause:P+","+z,reach:Se};matchGrammar(i,o,s,ae.prev,de,Pe),w&&Pe.reach>w.reach&&(w.reach=Pe.reach)}}}}}}