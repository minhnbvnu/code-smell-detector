function __vp_psy_clear($p) {
 $p = $p|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $i$05 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = ($p|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($p)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  _free($2);
 }
 $4 = ((($p)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  _free($5);
 }
 $7 = ((($p)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  _free($8);
 }
 $10 = ((($p)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $14 = $11;$i$05 = 0;
  while(1) {
   $13 = (($14) + ($i$05<<2)|0);
   $15 = HEAP32[$13>>2]|0;
   $16 = HEAP32[$15>>2]|0;
   _free($16);
   $17 = HEAP32[$10>>2]|0;
   $18 = (($17) + ($i$05<<2)|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ((($19)) + 4|0);
   $21 = HEAP32[$20>>2]|0;
   _free($21);
   $22 = HEAP32[$10>>2]|0;
   $23 = (($22) + ($i$05<<2)|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = ((($24)) + 8|0);
   $26 = HEAP32[$25>>2]|0;
   _free($26);
   $27 = HEAP32[$10>>2]|0;
   $28 = (($27) + ($i$05<<2)|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ((($29)) + 12|0);
   $31 = HEAP32[$30>>2]|0;
   _free($31);
   $32 = HEAP32[$10>>2]|0;
   $33 = (($32) + ($i$05<<2)|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ((($34)) + 16|0);
   $36 = HEAP32[$35>>2]|0;
   _free($36);
   $37 = HEAP32[$10>>2]|0;
   $38 = (($37) + ($i$05<<2)|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($39)) + 20|0);
   $41 = HEAP32[$40>>2]|0;
   _free($41);
   $42 = HEAP32[$10>>2]|0;
   $43 = (($42) + ($i$05<<2)|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = ((($44)) + 24|0);
   $46 = HEAP32[$45>>2]|0;
   _free($46);
   $47 = HEAP32[$10>>2]|0;
   $48 = (($47) + ($i$05<<2)|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = ((($49)) + 28|0);
   $51 = HEAP32[$50>>2]|0;
   _free($51);
   $52 = HEAP32[$10>>2]|0;
   $53 = (($52) + ($i$05<<2)|0);
   $54 = HEAP32[$53>>2]|0;
   _free($54);
   $55 = (($i$05) + 1)|0;
   $exitcond = ($55|0)==(17);
   if ($exitcond) {
    break;
   }
   $$pre = HEAP32[$10>>2]|0;
   $14 = $$pre;$i$05 = $55;
  }
  $56 = HEAP32[$10>>2]|0;
  _free($56);
 }
 $57 = ((($p)) + 12|0);
 $58 = HEAP32[$57>>2]|0;
 $59 = ($58|0)==(0|0);
 if (!($59)) {
  $60 = HEAP32[$58>>2]|0;
  _free($60);
  $61 = HEAP32[$57>>2]|0;
  $62 = ((($61)) + 4|0);
  $63 = HEAP32[$62>>2]|0;
  _free($63);
  $64 = HEAP32[$57>>2]|0;
  $65 = ((($64)) + 8|0);
  $66 = HEAP32[$65>>2]|0;
  _free($66);
  $67 = HEAP32[$57>>2]|0;
  _free($67);
 }
 dest=$p; stop=dest+52|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 return;
}