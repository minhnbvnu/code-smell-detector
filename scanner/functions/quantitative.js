function quantitative(def,scale,rng,db,data){var domain,refs,interval,z;domain=[null,null];function extract(ref,min,max,z){var dat=vg.values(db[ref.data]||data);var fields=vg.array(ref.field).map(function(f){return vg.isString(f)?f:"data."+vg.accessor(f.group)(data)});fields.forEach(function(f,i){f=vg.accessor(f);if(min)domain[0]=d3.min([domain[0],d3.min(dat,f)]);if(max)domain[z]=d3.max([domain[z],d3.max(dat,f)])})}if(def.domain!==undefined){if(vg.isArray(def.domain)){domain=def.domain.slice()}else if(vg.isObject(def.domain)){refs=def.domain.fields||vg.array(def.domain);refs.forEach(function(r){extract(r,1,1,1)})}else{domain=def.domain}}z=domain.length-1;if(def.domainMin!==undefined){if(vg.isObject(def.domainMin)){domain[0]=null;refs=def.domainMin.fields||vg.array(def.domainMin);refs.forEach(function(r){extract(r,1,0,z)})}else{domain[0]=def.domainMin}}if(def.domainMax!==undefined){if(vg.isObject(def.domainMax)){domain[z]=null;refs=def.domainMax.fields||vg.array(def.domainMax);refs.forEach(function(r){extract(r,0,1,z)})}else{domain[z]=def.domainMax}}if(def.type!==LOG&&def.type!==TIME&&(def.zero||def.zero===undefined)){domain[0]=Math.min(0,domain[0]);domain[z]=Math.max(0,domain[z])}scale.domain(domain);if(def.range==="height")rng=rng.reverse();scale[def.round&&scale.rangeRound?"rangeRound":"range"](rng);if(def.exponent&&def.type===POWER)scale.exponent(def.exponent);if(def.clamp)scale.clamp(true);if(def.nice){if(def.type===TIME){interval=d3.time[def.nice];if(!interval)vg.error("Unrecognized interval: "+interval);scale.nice(interval)}else{scale.nice()}}}