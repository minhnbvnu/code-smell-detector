function _vorbis_encode_noisebias_setup($vi,$s,$block,$suppress,$in,$guard,$userbias) {
 $vi = $vi|0;
 $s = +$s;
 $block = $block|0;
 $suppress = $suppress|0;
 $in = $in|0;
 $guard = $guard|0;
 $userbias = +$userbias;
 var $$phi$trans$insert = 0, $$phi$trans$insert13 = 0, $$phi$trans$insert16 = 0, $$pre = 0.0, $$pre14 = 0.0, $$pre17 = 0.0, $0 = 0, $1 = 0.0, $10 = 0.0, $100 = 0.0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0, $11 = 0.0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0.0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0.0, $66 = 0.0;
 var $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0, $72 = 0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0, $84 = 0;
 var $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0, $9 = 0.0, $90 = 0, $91 = 0, $92 = 0, $93 = 0.0, $94 = 0.0, $95 = 0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $exitcond = 0, $exitcond$1 = 0, $exitcond$2 = 0, $exitcond7 = 0;
 var $exitcond7$1 = 0, $exitcond7$2 = 0, $i$04 = 0, $i$04$1 = 0, $i$04$2 = 0, $storemerge = 0.0, $storemerge$1 = 0.0, $storemerge$119 = 0.0, $storemerge$2 = 0.0, $storemerge$218 = 0.0, $storemerge20 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (~~(($s)));
 $1 = (+($0|0));
 $2 = $s - $1;
 $3 = ((($vi)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (((($4)) + 2852|0) + ($block<<2)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($suppress) + ($0<<2)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (+($8|0));
 $10 = 1.0 - $2;
 $11 = $9 * $10;
 $12 = (($0) + 1)|0;
 $13 = (($suppress) + ($12<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (+($14|0));
 $16 = $15 * $2;
 $17 = $16 + $11;
 $18 = $17;
 $19 = ((($6)) + 108|0);
 HEAPF32[$19>>2] = $18;
 $20 = (($guard) + (($block*12)|0)|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($6)) + 120|0);
 HEAP32[$22>>2] = $21;
 $23 = (((($guard) + (($block*12)|0)|0)) + 4|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ((($6)) + 124|0);
 HEAP32[$25>>2] = $24;
 $26 = (((($guard) + (($block*12)|0)|0)) + 8|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($6)) + 128|0);
 HEAP32[$28>>2] = $27;
 $i$04 = 0;
 while(1) {
  $29 = ((($in) + (($0*204)|0)|0) + ($i$04<<2)|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = (+($30|0));
  $32 = $31 * $10;
  $33 = ((($in) + (($12*204)|0)|0) + ($i$04<<2)|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = (+($34|0));
  $36 = $35 * $2;
  $37 = $36 + $32;
  $38 = $37;
  $39 = (((($6)) + 132|0) + ($i$04<<2)|0);
  HEAPF32[$39>>2] = $38;
  $40 = (($i$04) + 1)|0;
  $exitcond7 = ($40|0)==(17);
  if ($exitcond7) {
   $i$04$1 = 0;
   break;
  } else {
   $i$04 = $40;
  }
 }
 while(1) {
  $79 = ((((($in) + (($0*204)|0)|0)) + 68|0) + ($i$04$1<<2)|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (+($80|0));
  $82 = $81 * $10;
  $83 = ((((($in) + (($12*204)|0)|0)) + 68|0) + ($i$04$1<<2)|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = (+($84|0));
  $86 = $85 * $2;
  $87 = $86 + $82;
  $88 = $87;
  $89 = (((($6)) + 200|0) + ($i$04$1<<2)|0);
  HEAPF32[$89>>2] = $88;
  $90 = (($i$04$1) + 1)|0;
  $exitcond7$1 = ($90|0)==(17);
  if ($exitcond7$1) {
   $i$04$2 = 0;
   break;
  } else {
   $i$04$1 = $90;
  }
 }
 while(1) {
  $91 = ((((($in) + (($0*204)|0)|0)) + 136|0) + ($i$04$2<<2)|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = (+($92|0));
  $94 = $93 * $10;
  $95 = ((((($in) + (($12*204)|0)|0)) + 136|0) + ($i$04$2<<2)|0);
  $96 = HEAP32[$95>>2]|0;
  $97 = (+($96|0));
  $98 = $97 * $2;
  $99 = $98 + $94;
  $100 = $99;
  $101 = (((($6)) + 268|0) + ($i$04$2<<2)|0);
  HEAPF32[$101>>2] = $100;
  $102 = (($i$04$2) + 1)|0;
  $exitcond7$2 = ($102|0)==(17);
  if ($exitcond7$2) {
   break;
  } else {
   $i$04$2 = $102;
  }
 }
 $103 = ((($6)) + 132|0);
 $104 = +HEAPF32[$103>>2];
 $47 = $104 + 6.0;
 $105 = ((($6)) + 132|0);
 $106 = $104;
 $107 = $106 + $userbias;
 $108 = $107;
 $109 = $108 < $47;
 $storemerge20 = $109 ? $47 : $108;
 HEAPF32[$105>>2] = $storemerge20;
 $41 = 1;
 while(1) {
  $$phi$trans$insert = (((($6)) + 132|0) + ($41<<2)|0);
  $$pre = +HEAPF32[$$phi$trans$insert>>2];
  $42 = (((($6)) + 132|0) + ($41<<2)|0);
  $43 = $$pre;
  $44 = $43 + $userbias;
  $45 = $44;
  $46 = $45 < $47;
  $storemerge = $46 ? $47 : $45;
  HEAPF32[$42>>2] = $storemerge;
  $48 = (($41) + 1)|0;
  $exitcond = ($48|0)==(17);
  if ($exitcond) {
   break;
  } else {
   $41 = $48;
  }
 }
 $49 = ((($6)) + 200|0);
 $50 = +HEAPF32[$49>>2];
 $51 = $50 + 6.0;
 $52 = ((($6)) + 200|0);
 $53 = $50;
 $54 = $53 + $userbias;
 $55 = $54;
 $56 = $55 < $51;
 $storemerge$119 = $56 ? $51 : $55;
 HEAPF32[$52>>2] = $storemerge$119;
 $57 = 1;
 while(1) {
  $$phi$trans$insert13 = (((($6)) + 200|0) + ($57<<2)|0);
  $$pre14 = +HEAPF32[$$phi$trans$insert13>>2];
  $58 = (((($6)) + 200|0) + ($57<<2)|0);
  $59 = $$pre14;
  $60 = $59 + $userbias;
  $61 = $60;
  $62 = $61 < $51;
  $storemerge$1 = $62 ? $51 : $61;
  HEAPF32[$58>>2] = $storemerge$1;
  $63 = (($57) + 1)|0;
  $exitcond$1 = ($63|0)==(17);
  if ($exitcond$1) {
   break;
  } else {
   $57 = $63;
  }
 }
 $64 = ((($6)) + 268|0);
 $65 = +HEAPF32[$64>>2];
 $66 = $65 + 6.0;
 $67 = ((($6)) + 268|0);
 $68 = $65;
 $69 = $68 + $userbias;
 $70 = $69;
 $71 = $70 < $66;
 $storemerge$218 = $71 ? $66 : $70;
 HEAPF32[$67>>2] = $storemerge$218;
 $72 = 1;
 while(1) {
  $$phi$trans$insert16 = (((($6)) + 268|0) + ($72<<2)|0);
  $$pre17 = +HEAPF32[$$phi$trans$insert16>>2];
  $73 = (((($6)) + 268|0) + ($72<<2)|0);
  $74 = $$pre17;
  $75 = $74 + $userbias;
  $76 = $75;
  $77 = $76 < $66;
  $storemerge$2 = $77 ? $66 : $76;
  HEAPF32[$73>>2] = $storemerge$2;
  $78 = (($72) + 1)|0;
  $exitcond$2 = ($78|0)==(17);
  if ($exitcond$2) {
   break;
  } else {
   $72 = $78;
  }
 }
 return;
}