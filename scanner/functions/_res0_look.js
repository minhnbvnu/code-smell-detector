function _res0_look($vd,$vr) {
 $vd = $vd|0;
 $vr = $vr|0;
 var $$lcssa = 0, $$maxstage$0 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, $acc$016 = 0, $acc$112 = 0, $acc$2 = 0, $acc$3 = 0;
 var $exitcond = 0, $exitcond23 = 0, $exitcond24 = 0, $j$018 = 0, $j$18 = 0, $j$24 = 0, $j$24$us = 0, $k$013 = 0, $k$11$us = 0, $maxstage$0$lcssa = 0, $maxstage$017 = 0, $maxstage$2 = 0, $mult$03$us = 0, $val$02$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_calloc(1,44)|0);
 $1 = ((($vd)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$0>>2] = $vr;
 $5 = ((($vr)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 4|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($4)) + 2848|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 12|0);
 HEAP32[$10>>2] = $9;
 $11 = $9;
 $12 = ((($vr)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($11) + (($13*56)|0)|0);
 $15 = ((($0)) + 16|0);
 HEAP32[$15>>2] = $14;
 $16 = HEAP32[$14>>2]|0;
 $17 = (_calloc($6,4)|0);
 $18 = ((($0)) + 20|0);
 HEAP32[$18>>2] = $17;
 $19 = ($6|0)>(0);
 if ($19) {
  $20 = ((($vr)) + 24|0);
  $21 = ((($vr)) + 280|0);
  $acc$016 = 0;$j$018 = 0;$maxstage$017 = 0;
  while(1) {
   $22 = (($20) + ($j$018<<2)|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (_ov_ilog($23)|0);
   $25 = ($24|0)==(0);
   if ($25) {
    $acc$3 = $acc$016;$maxstage$2 = $maxstage$017;
   } else {
    $26 = ($24|0)>($maxstage$017|0);
    $$maxstage$0 = $26 ? $24 : $maxstage$017;
    $27 = (_calloc($24,4)|0);
    $28 = (($17) + ($j$018<<2)|0);
    HEAP32[$28>>2] = $27;
    $29 = ($24|0)>(0);
    if ($29) {
     $30 = HEAP32[$22>>2]|0;
     $31 = (($17) + ($j$018<<2)|0);
     $acc$112 = $acc$016;$k$013 = 0;
     while(1) {
      $32 = 1 << $k$013;
      $33 = $30 & $32;
      $34 = ($33|0)==(0);
      if ($34) {
       $acc$2 = $acc$112;
      } else {
       $35 = HEAP32[$8>>2]|0;
       $36 = (($acc$112) + 1)|0;
       $37 = (($21) + ($acc$112<<2)|0);
       $38 = HEAP32[$37>>2]|0;
       $39 = (($35) + (($38*56)|0)|0);
       $40 = HEAP32[$31>>2]|0;
       $41 = (($40) + ($k$013<<2)|0);
       HEAP32[$41>>2] = $39;
       $acc$2 = $36;
      }
      $42 = (($k$013) + 1)|0;
      $exitcond23 = ($42|0)==($24|0);
      if ($exitcond23) {
       $acc$3 = $acc$2;$maxstage$2 = $$maxstage$0;
       break;
      } else {
       $acc$112 = $acc$2;$k$013 = $42;
      }
     }
    } else {
     $acc$3 = $acc$016;$maxstage$2 = $$maxstage$0;
    }
   }
   $43 = (($j$018) + 1)|0;
   $44 = ($43|0)<($6|0);
   if ($44) {
    $acc$016 = $acc$3;$j$018 = $43;$maxstage$017 = $maxstage$2;
   } else {
    $maxstage$0$lcssa = $maxstage$2;
    break;
   }
  }
 } else {
  $maxstage$0$lcssa = 0;
 }
 $45 = ((($0)) + 24|0);
 HEAP32[$45>>2] = 1;
 $46 = ($16|0)>(0);
 if ($46) {
  $48 = 1;$j$18 = 0;
  while(1) {
   $47 = Math_imul($48, $6)|0;
   $49 = (($j$18) + 1)|0;
   $exitcond = ($49|0)==($16|0);
   if ($exitcond) {
    $$lcssa = $47;
    break;
   } else {
    $48 = $47;$j$18 = $49;
   }
  }
  HEAP32[$45>>2] = $$lcssa;
  $52 = $$lcssa;
 } else {
  $52 = 1;
 }
 $50 = ((($0)) + 8|0);
 HEAP32[$50>>2] = $maxstage$0$lcssa;
 $51 = $52 << 2;
 $53 = (_malloc($51)|0);
 $54 = ((($0)) + 28|0);
 HEAP32[$54>>2] = $53;
 $55 = ($52|0)>(0);
 if (!($55)) {
  return ($0|0);
 }
 $56 = $16 << 2;
 if (!($46)) {
  $j$24 = 0;
  while(1) {
   $69 = (_malloc($56)|0);
   $70 = (($53) + ($j$24<<2)|0);
   HEAP32[$70>>2] = $69;
   $71 = (($j$24) + 1)|0;
   $72 = ($71|0)<($52|0);
   if ($72) {
    $j$24 = $71;
   } else {
    break;
   }
  }
  return ($0|0);
 }
 $57 = HEAP32[$54>>2]|0;
 $j$24$us = 0;
 while(1) {
  $66 = (_malloc($56)|0);
  $67 = (($53) + ($j$24$us<<2)|0);
  HEAP32[$67>>2] = $66;
  $68 = (($57) + ($j$24$us<<2)|0);
  $64 = HEAP32[$68>>2]|0;
  $$pn = $52;$k$11$us = 0;$val$02$us = $j$24$us;
  while(1) {
   $mult$03$us = (($$pn|0) / ($6|0))&-1;
   $60 = (($val$02$us|0) / ($mult$03$us|0))&-1;
   $61 = Math_imul($60, $mult$03$us)|0;
   $62 = (($val$02$us) - ($61))|0;
   $63 = (($64) + ($k$11$us<<2)|0);
   HEAP32[$63>>2] = $60;
   $65 = (($k$11$us) + 1)|0;
   $exitcond24 = ($65|0)==($16|0);
   if ($exitcond24) {
    break;
   } else {
    $$pn = $mult$03$us;$k$11$us = $65;$val$02$us = $62;
   }
  }
  $58 = (($j$24$us) + 1)|0;
  $59 = ($58|0)<($52|0);
  if ($59) {
   $j$24$us = $58;
  } else {
   break;
  }
 }
 return ($0|0);
}