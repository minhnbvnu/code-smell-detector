function _ZN31btConvexPlaneCollisionAlgorithm20collideSingleContactERK12btQuaternionP17btCollisionObjectS4_RK16btDispatcherInfoP16btManifoldResult(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
	var f6;
	var f7;
	var f8;
	var f9;
	var f10;
	var f11;
	var f12;
	var f13;
	var f14;
	var f15;
	var f16;
	var f17;
	var f18;
	var f19;
	var f20;
	var f21;
	var f22;
	var f23;
	var f24;
	var f25;
	var f26;
	var f27;
	var f28;
	var f29;
	var f30;
var __label__ = 0;
	i7 = sp + -136;var g0 = i7>>2; // save stack
	r0 = heap32[(fp+1)];
	r0 = r0 >> 2;
	f0 = heapFloat[(r0)];
	f1 = heapFloat[(r0+1)];
	f2 = heapFloat[(r0+2)];
	f3 = f0*f0;
	f4 = f1*f1;
	f5 = heapFloat[(r0+3)];
	f3 = f3+f4;
	f4 = f2*f2;
	f3 = f3+f4;
	f4 = f5*f5;
	f6 =                         2;
	f3 = f3+f4;
	f3 = f6/f3;
	r0 = heap32[(fp)];
	f4 = f2*f3;
	f6 = f1*f3;
	r1 = heapU8[r0+16];
	r2 = heap32[(fp+3)];
	r3 = heap32[(fp+2)];
	f3 = f0*f3;
	r4 = r1 == 0 ? r3 : r2;
	f7 = f1*f6;
	f2 = f2*f4;
	r4 = r4 >> 2;
	f8 = f0*f3;
	f9 =                         1;
	f10 = f7+f2;
	f11 = f0*f6;
	f12 = f5*f4;
	f2 = f8+f2;
	f10 = f9-f10;
	f13 = heapFloat[(r4+1)];
	heapFloat[(fp+-17)] = f13;
	f13 = heapFloat[(r4+5)];
	heapFloat[(fp+-18)] = f13;
	f14 = f11+f12;
	f13 = heapFloat[(r4+2)];
	heapFloat[(fp+-19)] = f13;
	f13 = heapFloat[(r4+6)];
	heapFloat[(fp+-20)] = f13;
	f0 = f0*f4;
	f6 = f5*f6;
	f11 = f11-f12;
	f2 = f9-f2;
	f12 = heapFloat[(r4+9)];
	heapFloat[(fp+-24)] = f12;
	f15 = heapFloat[(r4+10)];
	heapFloat[(fp+-25)] = f15;
	r1 = r1 == 0 ? r2 : r3;
	f1 = f1*f4;
	f3 = f5*f3;
	f13 = heapFloat[(fp+-17)];
	f4 = f10*f13;
	f13 = heapFloat[(fp+-19)];
	f5 = f14*f13;
	f13 = heapFloat[(fp+-18)];
	f16 = f10*f13;
	f13 = heapFloat[(fp+-20)];
	f17 = f14*f13;
	f18 = f0-f6;
	f19 = heapFloat[(r4+3)];
	heapFloat[(fp+-26)] = f19;
	f20 = heapFloat[(r4+7)];
	heapFloat[(fp+-27)] = f20;
	r1 = r1 >> 2;
	f0 = f0+f6;
	f6 = f1-f3;
	f1 = f1+f3;
	f3 = heapFloat[(r4+11)];
	heapFloat[(fp+-21)] = f3;
	f7 = f8+f7;
	f13 = heapFloat[(fp+-17)];
	f8 = f11*f13;
	f13 = heapFloat[(fp+-19)];
	f21 = f2*f13;
	f13 = heapFloat[(fp+-18)];
	f22 = f11*f13;
	f13 = heapFloat[(fp+-20)];
	f23 = f2*f13;
	f4 = f4+f5;
	f5 = f18*f19;
	f16 = f16+f17;
	f17 = f18*f20;
	f10 = f10*f12;
	f14 = f14*f15;
	f7 = f9-f7;
	f9 = heapFloat[(r1+2)];
	f24 = heapFloat[(r1+6)];
	f25 = heapFloat[(r1+1)];
	f26 = heapFloat[(r1+5)];
	f4 = f4+f5;
	f5 = f16+f17;
	r2 = heap32[(r1+48)];
	f13 = heapFloat[(fp+-17)];
	f16 = f0*f13;
	f13 = heapFloat[(fp+-19)];
	f17 = f6*f13;
	f13 = heapFloat[(fp+-18)];
	f27 = f0*f13;
	f13 = heapFloat[(fp+-20)];
	f28 = f6*f13;
	f8 = f8+f21;
	f21 = f1*f19;
	f22 = f22+f23;
	f23 = f1*f20;
	f11 = f11*f12;
	f2 = f2*f15;
	f10 = f10+f14;
	f14 = f18*f3;
	f18 = heapFloat[(r1+3)];
	f29 = heapFloat[(r1+7)];
	f8 = f8+f21;
	f21 = f22+f23;
	f22 = heapFloat[(r1+10)];
	f23 = heapFloat[(r1+9)];
	r2 = r2 >> 2;
	f10 = f10+f14;
	r3 = heap32[(r4+48)];
	f14 = f16+f17;
	f16 = f7*f19;
	f17 = f27+f28;
	f27 = f7*f20;
	f0 = f0*f12;
	f6 = f6*f15;
	f2 = f11+f2;
	f1 = f1*f3;
	f11 = f25*f4;
	f28 = f26*f5;
	f30 = f9*f4;
	f3 = f24*f5;
	f12 = heapFloat[(r1+11)];
	f14 = f14+f16;
	f16 = f17+f27;
	f1 = f2+f1;
	r5 = r3 >> 2;
	f2 = heapFloat[(r2+12)];
	f0 = f0+f6;
	f6 = heapFloat[(fp+-21)];
	f7 = f7*f6;
	f17 = f25*f8;
	f27 = f26*f21;
	f6 = f9*f8;
	f13 = f24*f21;
	f11 = f11+f28;
	f28 = f23*f10;
	f3 = f30+f3;
	f30 = f22*f10;
	f4 = f18*f4;
	f5 = f29*f5;
	f0 = f0+f7;
	r5 = heap32[(r5)];
	f7 = f25*f14;
	f15 = f26*f16;
	f19 = f9*f14;
	f20 = f24*f16;
	f17 = f17+f27;
	f27 = f23*f1;
	f6 = f6+f13;
	f13 = f22*f1;
	f8 = f18*f8;
	f21 = f29*f21;
	f11 = f11+f28;
	f2 = -f2;
	f3 = f3+f30;
	f28 = heapFloat[(r2+13)];
	f4 = f4+f5;
	f5 = f12*f10;
	r5 = r5 >> 2;
	f10 = f17+f27;
	f6 = f6+f13;
	f7 = f7+f15;
	f13 = f23*f0;
	f15 = f19+f20;
	f17 = f22*f0;
	f14 = f18*f14;
	f16 = f29*f16;
	f8 = f8+f21;
	f1 = f12*f1;
	f11 = f11*f2;
	f3 = f3*f28;
	f4 = f4+f5;
	f5 = heapFloat[(r2+14)];
	f19 = heapFloat[(r4+13)];
	heapFloat[(fp+-22)] = f19;
	f19 = heapFloat[(r4+14)];
	heapFloat[(fp+-23)] = f19;
	f20 = heapFloat[(r4+15)];
	heapFloat[(fp+-28)] = f20;
	f21 = heapFloat[(r1+14)];
	f27 = heapFloat[(r1+15)];
	heapFloat[(fp+-29)] = f27;
	f7 = f7+f13;
	f13 = f15+f17;
	f1 = f8+f1;
	f8 = heapFloat[(r1+13)];
	r4 = heap32[(r5+15)];
	f14 = f14+f16;
	f0 = f12*f0;
	f10 = f10*f2;
	f6 = f6*f28;
	f3 = f11-f3;
	f4 = f4*f5;
	r5 = sp + -16;
	f0 = f14+f0;
	f2 = f7*f2;
	f7 = f13*f28;
	f6 = f10-f6;
	f1 = f1*f5;
	f3 = f3-f4;
	r6 = r5 >> 2;
	f2 = f2-f7;
	f0 = f0*f5;
	f1 = f6-f1;
	heapFloat[(fp+-4)] = f3;
	f0 = f2-f0;
	heapFloat[(r6+1)] = f1;
	heapFloat[(r6+2)] = f0;
	heap32[(r6+3)] = 0;
	r6 = sp + -32;
	heap32[(g0)] = r6;
	heap32[(g0+1)] = r3;
	heap32[(g0+2)] = r5;
	f13 = heapFloat[(fp+-17)];
	f0 = f13*f9;
	f13 = heapFloat[(fp+-18)];
	f1 = f13*f24;
	f13 = heapFloat[(fp+-19)];
	f2 = f13*f9;
	f13 = heapFloat[(fp+-20)];
	f3 = f13*f24;
	f13 = heapFloat[(fp+-17)];
	f4 = f13*f25;
	f13 = heapFloat[(fp+-18)];
	f5 = f13*f26;
	f13 = heapFloat[(fp+-19)];
	f6 = f13*f25;
	f13 = heapFloat[(fp+-20)];
	f7 = f13*f26;
	__FUNCTION_TABLE__[(r4)>>2](i7);
	f8 = -f8;
	r3 = r6 >> 2;
	f13 = heapFloat[(fp+-17)];
	f10 = f13*f18;
	f13 = heapFloat[(fp+-18)];
	f11 = f13*f29;
	f13 = heapFloat[(fp+-19)];
	f13 = f13*f18;
	f14 = heapFloat[(fp+-20)];
	f14 = f14*f29;
	f0 = f0+f1;
	f1 = heapFloat[(fp+-24)];
	f15 = f1*f22;
	f2 = f2+f3;
	f3 = heapFloat[(fp+-25)];
	f16 = f3*f22;
	f19 = heapFloat[(fp+-26)];
	f17 = f19*f9;
	f20 = heapFloat[(fp+-27)];
	f28 = f20*f24;
	f4 = f4+f5;
	f5 = f1*f23;
	f6 = f6+f7;
	f7 = f3*f23;
	f30 = f19*f25;
	f1 = f20*f26;
	f10 = f10+f11;
	f11 = heapFloat[(fp+-24)];
	f11 = f11*f12;
	f13 = f13+f14;
	f3 = f3*f12;
	f14 = f19*f18;
	f19 = f20*f29;
	f0 = f0+f15;
	f15 = heapFloat[(fp+-8)];
	f4 = f4+f5;
	f2 = f2+f16;
	f5 = heapFloat[(r3+1)];
	f6 = f6+f7;
	f7 = f17+f28;
	f16 = heapFloat[(fp+-21)];
	f17 = f16*f22;
	f20 = heapFloat[(fp+-22)];
	f28 = f9*f20;
	f16 = heapFloat[(fp+-23)];
	f16 = f24*f16;
	f9 = f9*f8;
	f24 = f24*f21;
	f1 = f30+f1;
	f30 = heapFloat[(fp+-21)];
	f20 = f30*f23;
	f27 = heapFloat[(fp+-22)];
	f27 = f25*f27;
	f30 = heapFloat[(fp+-23)];
	f30 = f26*f30;
	f25 = f25*f8;
	f26 = f26*f21;
	f10 = f10+f11;
	f3 = f13+f3;
	f11 = f14+f19;
	f13 = heapFloat[(fp+-21)];
	f13 = f13*f12;
	f14 = heapFloat[(fp+-22)];
	f14 = f18*f14;
	f19 = heapFloat[(fp+-23)];
	f19 = f29*f19;
	f8 = f18*f8;
	f18 = f29*f21;
	f0 = f0*f15;
	f2 = f2*f5;
	f7 = f7+f17;
	f17 = heapFloat[(r3+2)];
	f1 = f1+f20;
	f16 = f28+f16;
	f20 = heapFloat[(fp+-28)];
	f21 = f22*f20;
	f9 = f9-f24;
	f24 = heapFloat[(fp+-29)];
	f22 = f22*f24;
	f4 = f4*f15;
	f6 = f6*f5;
	f27 = f27+f30;
	f28 = f23*f20;
	f25 = f25-f26;
	f23 = f23*f24;
	f11 = f11+f13;
	f10 = f10*f15;
	f3 = f3*f5;
	f5 = f14+f19;
	f13 = f12*f20;
	f8 = f8-f18;
	f12 = f12*f24;
	f0 = f0+f2;
	f2 = f7*f17;
	f7 = f16+f21;
	f9 = f9-f22;
	f4 = f4+f6;
	f1 = f1*f17;
	f6 = f27+f28;
	f14 = f25-f23;
	f3 = f10+f3;
	f10 = f11*f17;
	f5 = f5+f13;
	f8 = f8-f12;
	f0 = f0+f2;
	f2 = f7+f9;
	f1 = f4+f1;
	f4 = f6+f14;
	f3 = f3+f10;
	f5 = f5+f8;
	f0 = f0+f2;
	f2 = heapFloat[(r2+13)];
	f1 = f1+f4;
	f4 = heapFloat[(r2+12)];
	f6 = f4*f1;
	f7 = f2*f0;
	f3 = f3+f5;
	f5 = heapFloat[(r2+14)];
	r0 = r0 >> 2;
	f6 = f6+f7;
	f7 = f5*f3;
	r0 = heap32[(r0+3)];
	f6 = f6+f7;
	f7 = heapFloat[(r2+16)];
	f6 = f6-f7;
	r3 = r0 >> 2;
	r4 = heap32[(fp+4)];
	f7 = heapFloat[(r1+9)];
	f8 = heapFloat[(r1+10)];
	f9 = heapFloat[(r1+11)];
	f10 = heapFloat[(r1+15)];
	f11 = heapFloat[(r1+5)];
	f12 = heapFloat[(r1+6)];
	f13 = heapFloat[(r1+7)];
	f14 = heapFloat[(r1+14)];
	f15 = heapFloat[(r1+1)];
	f16 = heapFloat[(r1+2)];
	f17 = heapFloat[(r1+3)];
	f18 = heapFloat[(r1+13)];
	f19 = heapFloat[(r3+280)];
	r3 = r4 >> 2;
	heap32[(r3+1)] = r0;
if(!(f19 <=f6)) //_LBB306_2
{
	f5 = f5*f6;
	f2 = f2*f6;
	f4 = f4*f6;
	f3 = f3-f5;
	f0 = f0-f2;
	f1 = f1-f4;
	f2 = heapFloat[(r2+12)];
	f4 = heapFloat[(r1+1)];
	f5 = heapFloat[(r2+13)];
	f19 = heapFloat[(r1+2)];
	f20 = heapFloat[(r1+5)];
	f21 = heapFloat[(r1+6)];
	f4 = f4*f2;
	f19 = f19*f5;
	f22 = heapFloat[(r2+14)];
	f23 = heapFloat[(r1+3)];
	f24 = heapFloat[(r1+9)];
	f25 = heapFloat[(r1+10)];
	f26 = heapFloat[(r1+11)];
	f27 = heapFloat[(r1+7)];
	f20 = f20*f2;
	f21 = f21*f5;
	f4 = f4+f19;
	f19 = f23*f22;
	r0 = sp + -48;
	f2 = f24*f2;
	f5 = f25*f5;
	f20 = f20+f21;
	f21 = f27*f22;
	f4 = f4+f19;
	f15 = f15*f1;
	f16 = f16*f0;
	r1 = r0 >> 2;
	f2 = f2+f5;
	f5 = f26*f22;
	f19 = f20+f21;
	heapFloat[(fp+-12)] = f4;
	f4 = f11*f1;
	f11 = f12*f0;
	f12 = f15+f16;
	f15 = f17*f3;
	f2 = f2+f5;
	heapFloat[(r1+1)] = f19;
	heapFloat[(r1+2)] = f2;
	f1 = f7*f1;
	f0 = f8*f0;
	f2 = f4+f11;
	f4 = f13*f3;
	f5 = f12+f15;
	r2 = sp + -64;
	f0 = f1+f0;
	f1 = f9*f3;
	f2 = f2+f4;
	f3 = f5+f18;
	heap32[(r1+3)] = 0;
	r1 = r2 >> 2;
	f0 = f0+f1;
	f1 = f2+f14;
	heapFloat[(fp+-16)] = f3;
	f0 = f0+f10;
	heapFloat[(r1+1)] = f1;
	heapFloat[(r1+2)] = f0;
	heap32[(r1+3)] = 0;
	r1 = heap32[(r3)];
	r1 = r1 >> 2;
	r1 = heap32[(r1+4)];
	heap32[(g0)] = r4;
	heap32[(g0+1)] = r0;
	heap32[(g0+2)] = r2;
	heapFloat[(g0+3)] = f6;
	__FUNCTION_TABLE__[(r1)>>2](i7);
}
	return;
}