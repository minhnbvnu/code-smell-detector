function _ZN33btConvexConcaveCollisionAlgorithm16processCollisionEP17btCollisionObjectS1_RK16btDispatcherInfoP16btManifoldResult(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var r7;
	var r8;
	var r9;
	var r10;
	var r11;
	var r12;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
	var f6;
	var f7;
	var f8;
	var f9;
	var f10;
	var f11;
	var f12;
	var f13;
	var f14;
	var f15;
	var f16;
	var f17;
	var f18;
	var f19;
	var f20;
	var f21;
	var f22;
	var f23;
	var f24;
	var f25;
	var f26;
	var f27;
	var f28;
	var f29;
	var f30;
var __label__ = 0;
	i7 = sp + -80;var g0 = i7>>2; // save stack
	r0 = heap32[(fp)];
	r1 = heapU8[r0+8];
	r2 = heap32[(fp+2)];
	r3 = heap32[(fp+1)];
	r4 = r1 == 0 ? r2 : r3;
	r5 = r4 >> 2;
	r5 = heap32[(r5+48)];
	r6 = r5 >> 2;
	r7 = heap32[(r6+1)];
	r7 = (r7 + -21)|0;
if(!(uint(r7) >uint(8))) //_LBB289_8
{
	r1 = r1 == 0 ? r3 : r2;
	r2 = r1 >> 2;
	r2 = heap32[(r2+48)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+1)];
if(!(r2 >19)) //_LBB289_8
{
	r2 = heap32[(fp+3)];
	r3 = heap32[(fp+4)];
	r7 = heap32[(r6)];
	r7 = r7 >> 2;
	r7 = heap32[(r7+11)];
	heap32[(g0)] = r5;
	r8 = r0 >> 2;
	__FUNCTION_TABLE__[(r7)>>2](i7);
	f0 = f_g0;
	r7 = r3 >> 2;
	r9 = heap32[(r8+19)];
	heap32[(r7+1)] = r9;
	heap32[(r8+16)] = r2;
	heapFloat[(r8+17)] = f0;
	heap32[(r8+14)] = r3;
	r2 = heap32[(r8+4)];
	r9 = heap32[(r8+5)];
	r9 = r9 >> 2;
	r2 = r2 >> 2;
	f1 = heapFloat[(r9+1)];
	f2 = heapFloat[(r2+1)];
	f3 = heapFloat[(r9+5)];
	f4 = heapFloat[(r2+5)];
	f5 = heapFloat[(r2+2)];
	f6 = heapFloat[(r2+6)];
	f7 = f2*f1;
	f8 = f4*f3;
	f9 = heapFloat[(r9+9)];
	f10 = heapFloat[(r2+9)];
	f11 = heapFloat[(r9+2)];
	f12 = heapFloat[(r9+6)];
	f13 = heapFloat[(r9+3)];
	f14 = heapFloat[(r2+13)];
	f15 = heapFloat[(r2+3)];
	f16 = heapFloat[(r9+7)];
	f17 = heapFloat[(r9+14)];
	f18 = heapFloat[(r2+14)];
	f19 = heapFloat[(r2+7)];
	f20 = heapFloat[(r9+10)];
	f21 = heapFloat[(r9+15)];
	f22 = heapFloat[(r9+11)];
	f23 = heapFloat[(r2+15)];
	f24 = heapFloat[(r2+11)];
	f25 = heapFloat[(r2+10)];
	f26 = heapFloat[(r9+13)];
	f27 = f5*f1;
	f28 = f6*f3;
	f7 = f7+f8;
	f8 = f10*f9;
	r9 = sp + -64;
	f29 = f15*f1;
	f30 = f19*f3;
	f27 = f27+f28;
	f28 = f25*f9;
	f7 = f7+f8;
	r10 = r9 >> 2;
	f8 = f29+f30;
	f29 = f24*f9;
	f27 = f27+f28;
	heapFloat[(fp+-16)] = f7;
	f7 = f2*f11;
	f28 = f4*f12;
	f8 = f8+f29;
	heapFloat[(r10+1)] = f27;
	heapFloat[(r10+2)] = f8;
	f8 = f5*f11;
	f27 = f6*f12;
	f7 = f7+f28;
	f28 = f10*f20;
	f29 = f15*f11;
	f30 = f19*f12;
	f8 = f8+f27;
	f27 = f25*f20;
	f7 = f7+f28;
	heap32[(r10+3)] = 0;
	f28 = f29+f30;
	f29 = f24*f20;
	f8 = f8+f27;
	heapFloat[(r10+4)] = f7;
	f2 = f2*f13;
	f4 = f4*f16;
	f7 = f28+f29;
	heapFloat[(r10+5)] = f8;
	heapFloat[(r10+6)] = f7;
	f5 = f5*f13;
	f6 = f6*f16;
	f2 = f2+f4;
	f4 = f10*f22;
	f7 = -f26;
	f8 = f15*f13;
	f10 = f19*f16;
	f5 = f5+f6;
	f6 = f25*f22;
	f2 = f2+f4;
	heap32[(r10+7)] = 0;
	f4 = f1*f14;
	f15 = f3*f18;
	f1 = f1*f7;
	f3 = f3*f17;
	f8 = f8+f10;
	f10 = f24*f22;
	f5 = f5+f6;
	heapFloat[(r10+8)] = f2;
	f2 = f11*f14;
	f6 = f12*f18;
	f11 = f11*f7;
	f12 = f12*f17;
	f4 = f4+f15;
	f15 = f9*f23;
	f1 = f1-f3;
	f3 = f9*f21;
	f8 = f8+f10;
	heapFloat[(r10+9)] = f5;
	heapFloat[(r10+10)] = f8;
	f5 = f13*f14;
	f8 = f16*f18;
	f7 = f13*f7;
	f9 = f16*f17;
	f2 = f2+f6;
	f6 = f20*f23;
	f10 = f11-f12;
	f11 = f20*f21;
	f4 = f4+f15;
	f1 = f1-f3;
	f3 = f5+f8;
	f5 = f22*f23;
	f7 = f7-f9;
	f8 = f22*f21;
	f2 = f2+f6;
	f6 = f10-f11;
	f1 = f4+f1;
	heap32[(r10+11)] = 0;
	f3 = f3+f5;
	f4 = f7-f8;
	f2 = f2+f6;
	heapFloat[(r10+12)] = f1;
	f1 = f3+f4;
	heapFloat[(r10+13)] = f2;
	heapFloat[(r10+14)] = f1;
	heap32[(r10+15)] = 0;
	r2 = heap32[(r2+48)];
	r10 = r2 >> 2;
	r10 = heap32[(r10)];
	r10 = r10 >> 2;
	r10 = heap32[(r10+2)];
	r11 = (r0 + 40)|0;
	r12 = (r0 + 24)|0;
	heap32[(g0)] = r2;
	heap32[(g0+1)] = r9;
	heap32[(g0+2)] = r12;
	heap32[(g0+3)] = r11;
	__FUNCTION_TABLE__[(r10)>>2](i7);
	f1 = heapFloat[(r8+10)];
	f1 = f1+f0;
	heapFloat[(r8+10)] = f1;
	f1 = heapFloat[(r8+11)];
	f1 = f1+f0;
	heapFloat[(r8+11)] = f1;
	f1 = heapFloat[(r8+12)];
	f1 = f1+f0;
	heapFloat[(r8+12)] = f1;
	f1 = heapFloat[(r8+6)];
	f1 = f1-f0;
	heapFloat[(r8+6)] = f1;
	f1 = heapFloat[(r8+7)];
	f1 = f1-f0;
	heapFloat[(r8+7)] = f1;
	f1 = heapFloat[(r8+8)];
	f0 = f1-f0;
	heapFloat[(r8+8)] = f0;
	r2 = heap32[(r8+19)];
	r2 = r2 >> 2;
	heap32[(r2+277)] = r1;
	heap32[(r2+278)] = r4;
	r1 = heap32[(r6)];
	r1 = r1 >> 2;
	r1 = heap32[(r1+15)];
	r0 = (r0 + 12)|0;
	heap32[(g0)] = r5;
	heap32[(g0+1)] = r0;
	heap32[(g0+2)] = r12;
	heap32[(g0+3)] = r11;
	__FUNCTION_TABLE__[(r1)>>2](i7);
	r0 = heap32[(r7+1)];
	if(r0 !=0) //_LBB289_4
{
	r1 = r0 >> 2;
	r2 = heap32[(r1+279)];
if(!(r2 ==0)) //_LBB289_8
{
	r1 = heap32[(r1+277)];
	r2 = heap32[(r7+34)];
	if(r1 ==r2) //_LBB289_7
{
	r1 = (r3 + 8)|0;
	r2 = (r3 + 72)|0;
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r1;
	heap32[(g0+2)] = r2;
	_ZN20btPersistentManifold20refreshContactPointsERK11btTransformS2_(i7);
}
else{
	r1 = (r3 + 72)|0;
	r3 = (r3 + 8)|0;
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r1;
	heap32[(g0+2)] = r3;
	_ZN20btPersistentManifold20refreshContactPointsERK11btTransformS2_(i7);
	return;
}
}
}
else{
	r0 = _2E_str59;
	r3 = _2E_str160;
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r3;
	heap32[(g0+2)] = 101;
	_assert(i7);
}
}
}
	return;
}