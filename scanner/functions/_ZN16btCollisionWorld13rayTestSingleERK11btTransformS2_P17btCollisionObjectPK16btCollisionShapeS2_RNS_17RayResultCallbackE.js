function _ZN16btCollisionWorld13rayTestSingleERK11btTransformS2_P17btCollisionObjectPK16btCollisionShapeS2_RNS_17RayResultCallbackE(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var r7;
	var r8;
	var r9;
	var r10;
	var r11;
	var r12;
	var r13;
	var r14;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
	var f6;
	var f7;
	var f8;
	var f9;
	var f10;
	var f11;
	var f12;
	var f13;
	var f14;
	var f15;
	var f16;
	var f17;
	var f18;
	var f19;
	var f20;
	var f21;
	var f22;
	var f23;
	var f24;
	var f25;
	var f26;
	var f27;
	var f28;
	var f29;
var __label__ = 0;
	i7 = sp + -1120;var g0 = i7>>2; // save stack
	r0 = sp + -104;
	r1 = r0 >> 2;
	heap32[(r1+2)] = 0;
	heap32[(r1+3)] = 1065353216;
	heap32[(r1+4)] = 1065353216;
	r2 = _ZTV13btSphereShape;
	heap32[(r1+5)] = 1065353216;
	r2 = (r2 + 8)|0;
	heap32[(r1+6)] = 0;
	heap32[(fp+-26)] = r2;
	heap32[(r1+1)] = 8;
	r2 = heap32[(fp+3)];
	heap32[(r1+7)] = 0;
	r3 = r2 >> 2;
	heap32[(r1+11)] = 0;
	r1 = heap32[(r3+1)];
	r4 = heap32[(fp)];
	r5 = heap32[(fp+1)];
	r6 = heap32[(fp+2)];
	r7 = heap32[(fp+4)];
	r8 = heap32[(fp+5)];
	if(r1 >19) //_LBB248_6
{
	r0 = (r1 + -21)|0;
	if(uint(r0) >uint(8)) //_LBB248_25
{
if(!(r1 !=31)) //_LBB248_29
{
	r0 = heap32[(r3+4)];
if(!(r0 <1)) //_LBB248_29
{
	r0 = 0;
_8: while(true){
	r1 = (r0 * 20)|0;
	r2 = heap32[(r3+6)];
	r1 = r1 << 2;
	r1 = (r2 + r1)|0;
	r1 = r1 >> 2;
	r2 = r7 >> 2;
	f0 = heapFloat[(r1)];
	f1 = heapFloat[(r2)];
	f2 = heapFloat[(r1+4)];
	f3 = heapFloat[(r2+1)];
	f4 = heapFloat[(r1+1)];
	f5 = heapFloat[(r1+5)];
	f6 = f0*f1;
	f7 = f2*f3;
	f8 = heapFloat[(r1+8)];
	f9 = heapFloat[(r2+2)];
	f10 = heapFloat[(r2+8)];
	f11 = heapFloat[(r1+2)];
	f12 = heapFloat[(r2+4)];
	f13 = heapFloat[(r1+12)];
	f14 = heapFloat[(r2+9)];
	f15 = heapFloat[(r1+6)];
	f16 = heapFloat[(r2+5)];
	f17 = heapFloat[(r1+13)];
	f18 = heapFloat[(r1+9)];
	f19 = heapFloat[(r2+10)];
	f20 = heapFloat[(r1+10)];
	f21 = heapFloat[(r2+6)];
	f22 = heapFloat[(r1+14)];
	f23 = f4*f1;
	f24 = f5*f3;
	f6 = f6+f7;
	f7 = f8*f9;
	r1 = heap32[(r1+16)];
	f25 = heapFloat[(r2+14)];
	f26 = heapFloat[(r2+13)];
	f27 = heapFloat[(r2+12)];
	r2 = sp + -1056;
	f28 = f11*f1;
	f29 = f15*f3;
	f23 = f23+f24;
	f24 = f18*f9;
	f6 = f6+f7;
	r9 = r2 >> 2;
	f7 = f28+f29;
	f28 = f20*f9;
	f23 = f23+f24;
	heapFloat[(fp+-264)] = f6;
	f6 = f0*f12;
	f24 = f2*f16;
	f7 = f7+f28;
	heapFloat[(r9+1)] = f23;
	heapFloat[(r9+2)] = f7;
	f7 = f4*f12;
	f23 = f5*f16;
	f6 = f6+f24;
	f24 = f8*f21;
	f28 = f11*f12;
	f29 = f15*f16;
	f7 = f7+f23;
	f23 = f18*f21;
	f6 = f6+f24;
	heap32[(r9+3)] = 0;
	f24 = f28+f29;
	f28 = f20*f21;
	f7 = f7+f23;
	heapFloat[(r9+4)] = f6;
	f0 = f0*f10;
	f2 = f2*f14;
	f6 = f24+f28;
	heapFloat[(r9+5)] = f7;
	heapFloat[(r9+6)] = f6;
	f4 = f4*f10;
	f5 = f5*f14;
	f0 = f0+f2;
	f2 = f8*f19;
	f6 = f11*f10;
	f7 = f15*f14;
	f4 = f4+f5;
	f5 = f18*f19;
	f0 = f0+f2;
	heap32[(r9+7)] = 0;
	f1 = f1*f13;
	f2 = f3*f17;
	f3 = f6+f7;
	f6 = f20*f19;
	f4 = f4+f5;
	heapFloat[(r9+8)] = f0;
	f0 = f12*f13;
	f5 = f16*f17;
	f1 = f1+f2;
	f2 = f9*f22;
	f3 = f3+f6;
	heapFloat[(r9+9)] = f4;
	f1 = f1+f2;
	heapFloat[(r9+10)] = f3;
	f2 = f10*f13;
	f3 = f14*f17;
	f0 = f0+f5;
	f4 = f21*f22;
	f0 = f0+f4;
	f2 = f2+f3;
	f3 = f19*f22;
	f1 = f1+f27;
	heap32[(r9+11)] = 0;
	f2 = f2+f3;
	f0 = f0+f26;
	heapFloat[(r9+12)] = f1;
	f1 = f2+f25;
	heapFloat[(r9+13)] = f0;
	heapFloat[(r9+14)] = f1;
	r10 = r6 >> 2;
	heap32[(r9+15)] = 0;
	r9 = sp + -1088;
	r11 = heap32[(r10+48)];
	r12 = r9 >> 2;
	heap32[(r10+48)] = r1;
	r13 = 1;
	heap32[(r12+2)] = 0;
	r14 = -1;
	heap16[(sp+-1076)>>1] = r13;
	heap16[(sp+-1074)>>1] = r14;
	r13 = _ZTVZN16btCollisionWorld13rayTestSingleERK11btTransformS2_P17btCollisionObjectPK16btCollisionShapeS2_RNS_17RayResultCallbackEE15LocalInfoAdder2;
	heap32[(r12+4)] = 0;
	r13 = (r13 + 8)|0;
	heap32[(fp+-272)] = r13;
	heap32[(r12+5)] = r8;
	r14 = r8 >> 2;
	heap32[(r12+6)] = r0;
	heap32[(r12+1)] = heap32[(r14+1)];
	heap32[(g0)] = r4;
	heap32[(g0+1)] = r5;
	heap32[(g0+2)] = r6;
	heap32[(g0+3)] = r1;
	heap32[(g0+4)] = r2;
	heap32[(g0+5)] = r9;
	_ZN16btCollisionWorld13rayTestSingleERK11btTransformS2_P17btCollisionObjectPK16btCollisionShapeS2_RNS_17RayResultCallbackE(i7);
	r0 = (r0 + 1)|0;
	heap32[(r10+48)] = r11;
	heap32[(fp+-272)] = r13;
	r1 = heap32[(r3+4)];
if(!(r1 >r0)) //_LBB248_28
{
break _8;
}
}
}
}
	return;
}
else{
	if(r1 !=21) //_LBB248_12
{
	r1 = r7 >> 2;
	r4 = r4 >> 2;
	f0 = heapFloat[(r1+12)];
	f1 = heapFloat[(r1+13)];
	f2 = heapFloat[(r1+4)];
	f3 = heapFloat[(r4+13)];
	f4 = heapFloat[(r1)];
	f5 = -f0;
	f6 = heapFloat[(r4+12)];
	f7 = heapFloat[(r1+5)];
	f8 = heapFloat[(r1+1)];
	f9 = f4*f6;
	f10 = f2*f3;
	f11 = f4*f5;
	f12 = f2*f1;
	f13 = heapFloat[(r1+14)];
	f14 = heapFloat[(r1+8)];
	f15 = heapFloat[(r4+14)];
	r4 = r5 >> 2;
	f16 = heapFloat[(r1+9)];
	f17 = heapFloat[(r1+6)];
	f18 = heapFloat[(r1+2)];
	r5 = r8 >> 2;
	f9 = f9+f10;
	f10 = f14*f15;
	f11 = f11-f12;
	f12 = f14*f13;
	f19 = f8*f6;
	f20 = f7*f3;
	f21 = f8*f5;
	f22 = f7*f1;
	f23 = heapFloat[(r4+12)];
	f24 = heapFloat[(r4+13)];
	f25 = heapFloat[(r1+10)];
	f26 = heapFloat[(r4+14)];
	r4 = sp + -960;
	r7 = heap32[(r5+4)];
	f9 = f9+f10;
	f10 = f11-f12;
	f6 = f18*f6;
	f3 = f17*f3;
	f11 = f19+f20;
	f12 = f16*f15;
	f5 = f18*f5;
	f19 = f17*f1;
	f20 = f21-f22;
	f21 = f16*f13;
	f9 = f9+f10;
	f3 = f6+f3;
	f6 = f25*f15;
	f11 = f11+f12;
	f12 = f20-f21;
	r0 = r4 >> 2;
	f5 = f5-f19;
	f15 = f25*f13;
	f11 = f11+f12;
	heapFloat[(r0+1)] = f9;
	f19 = f4*f23;
	f20 = f2*f24;
	f3 = f3+f6;
	f5 = f5-f15;
	f3 = f3+f5;
	heapFloat[(r0+2)] = f11;
	f6 = f19+f20;
	f15 = f14*f26;
	f19 = f8*f23;
	f20 = f7*f24;
	f6 = f6+f15;
	heapFloat[(r0+3)] = f3;
	f15 = f18*f23;
	f21 = f17*f24;
	f19 = f19+f20;
	f20 = f16*f26;
	f6 = f6+f10;
	f10 = f19+f20;
	heap32[(r0+4)] = 0;
	f15 = f15+f21;
	f19 = f25*f26;
	f15 = f15+f19;
	f10 = f10+f12;
	heapFloat[(r0+5)] = f6;
	f5 = f15+f5;
	heapFloat[(r0+6)] = f10;
	heapFloat[(r0+7)] = f5;
	r9 = _ZTVZN16btCollisionWorld13rayTestSingleERK11btTransformS2_P17btCollisionObjectPK16btCollisionShapeS2_RNS_17RayResultCallbackEE29BridgeTriangleRaycastCallback_0;
	heap32[(r0+8)] = 0;
	r9 = (r9 + 8)|0;
	heap32[(r0+9)] = r7;
	heap32[(fp+-240)] = r9;
	heap32[(r0+11)] = r8;
	heap32[(r0+12)] = r6;
	heap32[(r0+13)] = r2;
	heapFloat[(r0+14)] = f4;
	heapFloat[(r0+15)] = f8;
	heapFloat[(r0+16)] = f18;
	heap32[(r0+17)] = heap32[(r1+3)];
	heapFloat[(r0+18)] = f2;
	heapFloat[(r0+19)] = f7;
	heapFloat[(r0+20)] = f17;
	heap32[(r0+21)] = heap32[(r1+7)];
	heapFloat[(r0+22)] = f14;
	heapFloat[(r0+23)] = f16;
	heapFloat[(r0+24)] = f25;
	heap32[(r0+25)] = heap32[(r1+11)];
	heapFloat[(r0+26)] = f0;
	heapFloat[(r0+27)] = f1;
	heapFloat[(r0+28)] = f13;
	heap32[(r0+29)] = heap32[(r1+15)];
	r1 = sp + -976;
	heap32[(r0+10)] = heap32[(r5+1)];
	r5 = r1 >> 2;
	heapFloat[(fp+-244)] = f9;
	heapFloat[(r5+1)] = f11;
	heapFloat[(r5+2)] = f3;
	heap32[(r5+3)] = 0;
if(!(f6 >=f9)) //_LBB248_14
{
	heapFloat[(fp+-244)] = f6;
}
if(!(f10 >=f11)) //_LBB248_16
{
	heapFloat[(r5+1)] = f10;
}
if(!(f5 >=f3)) //_LBB248_18
{
	heapFloat[(r5+2)] = f5;
}
	r5 = sp + -992;
	r6 = r5 >> 2;
	heapFloat[(fp+-248)] = f9;
	heapFloat[(r6+1)] = f11;
	heapFloat[(r6+2)] = f3;
	heap32[(r6+3)] = 0;
if(!(f9 >=f6)) //_LBB248_20
{
	heapFloat[(fp+-248)] = f6;
}
if(!(f11 >=f10)) //_LBB248_22
{
	heapFloat[(r6+1)] = f10;
}
if(!(f3 >=f5)) //_LBB248_24
{
	heapFloat[(r6+2)] = f5;
}
	r3 = heap32[(r3)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+15)];
	heap32[(g0)] = r2;
	heap32[(g0+1)] = r4;
	heap32[(g0+2)] = r1;
	heap32[(g0+3)] = r5;
	r1 = _ZTV18btTriangleCallback;
	r1 = (r1 + 8)|0;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	heap32[(fp+-240)] = r1;
	return;
}
else{
	r1 = r7 >> 2;
	r4 = r4 >> 2;
	f0 = heapFloat[(r1+12)];
	f1 = heapFloat[(r1+13)];
	f2 = heapFloat[(r1+4)];
	f3 = heapFloat[(r4+13)];
	f4 = heapFloat[(r1)];
	f5 = heapFloat[(r4+12)];
	f6 = -f0;
	f7 = heapFloat[(r1+5)];
	f8 = heapFloat[(r1+1)];
	f9 = heapFloat[(r1+14)];
	f10 = heapFloat[(r1+8)];
	f11 = heapFloat[(r4+14)];
	f12 = f4*f5;
	f13 = f2*f3;
	f14 = f4*f6;
	f15 = f2*f1;
	f16 = heapFloat[(r1+9)];
	f17 = heapFloat[(r1+6)];
	f18 = heapFloat[(r1+2)];
	f19 = f8*f5;
	f20 = f7*f3;
	f21 = f8*f6;
	f22 = f7*f1;
	f12 = f12+f13;
	f13 = f10*f11;
	f14 = f14-f15;
	f15 = f10*f9;
	f23 = heapFloat[(r1+10)];
	f5 = f18*f5;
	f3 = f17*f3;
	f6 = f18*f6;
	f24 = f17*f1;
	f19 = f19+f20;
	f20 = f16*f11;
	f21 = f21-f22;
	f22 = f16*f9;
	f12 = f12+f13;
	f13 = f14-f15;
	r4 = sp + -704;
	f12 = f12+f13;
	f3 = f5+f3;
	f5 = f23*f11;
	f6 = f6-f24;
	f11 = f23*f9;
	f14 = f19+f20;
	f15 = f21-f22;
	r7 = r4 >> 2;
	heapFloat[(fp+-176)] = f12;
	f14 = f14+f15;
	f3 = f3+f5;
	f5 = f6-f11;
	heapFloat[(r7+1)] = f14;
	f3 = f3+f5;
	heapFloat[(r7+2)] = f3;
	r5 = r5 >> 2;
	heap32[(r7+3)] = 0;
	f6 = heapFloat[(r5+12)];
	f11 = heapFloat[(r5+13)];
	f19 = heapFloat[(r5+14)];
	f20 = f4*f6;
	f21 = f2*f11;
	f22 = f8*f6;
	f24 = f7*f11;
	f20 = f20+f21;
	f21 = f10*f19;
	f20 = f20+f21;
	f6 = f18*f6;
	f11 = f17*f11;
	f21 = f22+f24;
	f22 = f16*f19;
	r5 = sp + -720;
	f21 = f21+f22;
	f13 = f20+f13;
	f6 = f6+f11;
	f11 = f23*f19;
	f6 = f6+f11;
	r7 = r5 >> 2;
	heapFloat[(fp+-180)] = f13;
	f11 = f21+f15;
	heapFloat[(r7+1)] = f11;
	f5 = f6+f5;
	heapFloat[(r7+2)] = f5;
	r0 = sp + -840;
	r9 = r8 >> 2;
	heap32[(r7+3)] = 0;
	r7 = r0 >> 2;
	r10 = heap32[(r9+4)];
	heapFloat[(r7+1)] = f12;
	heapFloat[(r7+2)] = f14;
	heapFloat[(r7+3)] = f3;
	heap32[(r7+4)] = 0;
	heapFloat[(r7+5)] = f13;
	heapFloat[(r7+6)] = f11;
	heapFloat[(r7+7)] = f5;
	r11 = _ZTVZN16btCollisionWorld13rayTestSingleERK11btTransformS2_P17btCollisionObjectPK16btCollisionShapeS2_RNS_17RayResultCallbackEE29BridgeTriangleRaycastCallback;
	heap32[(r7+8)] = 0;
	r11 = (r11 + 8)|0;
	heap32[(r7+9)] = r10;
	heap32[(fp+-210)] = r11;
	heap32[(r7+11)] = r8;
	heap32[(r7+12)] = r6;
	heap32[(r7+13)] = r2;
	heapFloat[(r7+14)] = f4;
	heapFloat[(r7+15)] = f8;
	heapFloat[(r7+16)] = f18;
	heap32[(r7+17)] = heap32[(r1+3)];
	heapFloat[(r7+18)] = f2;
	heapFloat[(r7+19)] = f7;
	heapFloat[(r7+20)] = f17;
	heap32[(r7+21)] = heap32[(r1+7)];
	heapFloat[(r7+22)] = f10;
	heapFloat[(r7+23)] = f16;
	heapFloat[(r7+24)] = f23;
	heap32[(r7+25)] = heap32[(r1+11)];
	heapFloat[(r7+26)] = f0;
	heapFloat[(r7+27)] = f1;
	heapFloat[(r7+28)] = f9;
	heap32[(r7+29)] = heap32[(r1+15)];
	r1 = _ZTVZN22btBvhTriangleMeshShape14performRaycastEP18btTriangleCallbackRK9btVector3S4_E21MyNodeOverlapCallback;
	heap32[(r7+10)] = heap32[(r9+1)];
	r2 = sp + -48;
	r6 = heap32[(r3+12)];
	r1 = (r1 + 8)|0;
	r7 = r2 >> 2;
	heap32[(fp+-12)] = r1;
	heap32[(r7+1)] = r6;
	heap32[(r7+2)] = r0;
	r1 = heap32[(r3+13)];
	r3 = sp + -32;
	r6 = r3 >> 2;
	heap32[(fp+-8)] = 0;
	heap32[(r6+1)] = 0;
	heap32[(r6+2)] = 0;
	r7 = sp + -16;
	heap32[(r6+3)] = 0;
	r6 = r7 >> 2;
	heap32[(fp+-4)] = 0;
	heap32[(r6+1)] = 0;
	heap32[(r6+2)] = 0;
	heap32[(r6+3)] = 0;
	r6 = heapU8[r1+60];
	if(r6 ==0) //_LBB248_10
{
	heap32[(g0)] = r1;
	heap32[(g0+1)] = r2;
	heap32[(g0+2)] = r4;
	heap32[(g0+3)] = r5;
	heap32[(g0+4)] = r7;
	heap32[(g0+5)] = r3;
	_ZNK14btQuantizedBvh27walkStacklessTreeAgainstRayEP21btNodeOverlapCallbackRK9btVector3S4_S4_S4_ii(i7);
}
else{
	r6 = r1 >> 2;
	r6 = heap32[(r6+14)];
	heap32[(g0)] = r1;
	heap32[(g0+1)] = r2;
	heap32[(g0+2)] = r4;
	heap32[(g0+3)] = r5;
	heap32[(g0+4)] = r7;
	heap32[(g0+5)] = r3;
	heap32[(g0+6)] = r6;
	_ZNK14btQuantizedBvh36walkStacklessQuantizedTreeAgainstRayEP21btNodeOverlapCallbackRK9btVector3S4_S4_S4_ii(i7);
}
	r1 = _ZTV18btTriangleCallback;
	r1 = (r1 + 8)|0;
	heap32[(fp+-210)] = r1;
	return;
}
}
}
else{
	r1 = _ZTVN12btConvexCast10CastResultE;
	r3 = sp + -280;
	r1 = (r1 + 8)|0;
	r9 = r3 >> 2;
	heap32[(fp+-70)] = r1;
	heap32[(r9+42)] = 0;
	r1 = sp + -640;
	r10 = r8 >> 2;
	heap32[(r9+43)] = 0;
	r11 = r1 >> 2;
	heap32[(r9+41)] = heap32[(r10+1)];
	r12 = _ZTV22btSubsimplexConvexCast;
	r13 = 0;
	heap32[(r11+77)] = 953267991;
	r11 = sp + -656;
	r12 = (r12 + 8)|0;
	heap8[sp+-308] = r13;
	r13 = r11 >> 2;
	heap32[(fp+-164)] = r12;
	heap32[(r13+1)] = r1;
	heap32[(r13+2)] = r0;
	heap32[(r13+3)] = r2;
	heap32[(g0)] = r11;
	heap32[(g0+1)] = r4;
	heap32[(g0+2)] = r5;
	heap32[(g0+3)] = r7;
	heap32[(g0+4)] = r7;
	heap32[(g0+5)] = r3;
	_ZN22btSubsimplexConvexCast16calcTimeOfImpactERK11btTransformS2_S2_S2_RN12btConvexCast10CastResultE(i7);
	r1 = r_g0;
if(!(r1 ==0)) //_LBB248_5
{
	f0 = heapFloat[(r9+33)];
	f1 = heapFloat[(r9+34)];
	f2 = heapFloat[(r9+35)];
	f3 = f0*f0;
	f4 = f1*f1;
	f3 = f3+f4;
	f4 = f2*f2;
	f3 = f3+f4;
	f4 =   9.9999997473787516e-005;
if(!(f3 <=f4)) //_LBB248_5
{
	f3 = heapFloat[(r9+41)];
	f4 = heapFloat[(r10+1)];
if(!(f3 >=f4)) //_LBB248_5
{
	r1 = r4 >> 2;
	f4 = heapFloat[(r1+4)];
	f5 = heapFloat[(r1)];
	f6 = heapFloat[(r1+5)];
	f7 = heapFloat[(r1+1)];
	f8 = heapFloat[(r1+8)];
	f9 = heapFloat[(r1+9)];
	f4 = f4*f0;
	f6 = f6*f1;
	f10 = heapFloat[(r1+6)];
	f11 = heapFloat[(r1+2)];
	f5 = f5*f0;
	f7 = f7*f1;
	f12 = heapFloat[(r1+10)];
	f0 = f8*f0;
	f1 = f9*f1;
	f4 = f4+f6;
	f6 = f10*f2;
	f5 = f5+f7;
	f7 = f11*f2;
	f4 = f4+f6;
	f5 = f5+f7;
	f0 = f0+f1;
	f1 = f12*f2;
	f0 = f0+f1;
	f1 = f5*f5;
	f2 = f4*f4;
	heap32[(r9+36)] = 0;
	f1 = f1+f2;
	f2 = f0*f0;
	f1 = f1+f2;
	heapFloat[(g0)] = f1;
	f1 =                         1;
	sqrtf(i7);
	f1 = f1/f_g0;
	f2 = f5*f1;
	f4 = f4*f1;
	heapFloat[(r9+33)] = f2;
	f0 = f0*f1;
	heapFloat[(r9+34)] = f4;
	r1 = sp + -688;
	heapFloat[(r9+35)] = f0;
	r2 = r1 >> 2;
	heap32[(fp+-172)] = r6;
	heap32[(r2+1)] = 0;
	heapFloat[(r2+2)] = f2;
	heapFloat[(r2+3)] = f4;
	heapFloat[(r2+4)] = f0;
	heap32[(r2+5)] = 0;
	heapFloat[(r2+6)] = f3;
	r2 = heap32[(r10)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+3)];
	heap32[(g0)] = r8;
	heap32[(g0+1)] = r1;
	heap32[(g0+2)] = 1;
	__FUNCTION_TABLE__[(r2)>>2](i7);
}
}
}
	r1 = _ZTV12btConvexCast;
	r1 = (r1 + 8)|0;
	heap32[(fp+-164)] = r1;
	return;
}
}