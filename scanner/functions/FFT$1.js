function FFT$1(){function fft(re,im,inv){for(var d,h,ik,m,tmp,wr,wi,xr,xi,n4=_n>>2,l=0;l<_n;l++)l<(m=_bitrev[l])&&(tmp=re[l],re[l]=re[m],re[m]=tmp,tmp=im[l],im[l]=im[m],im[m]=tmp);for(var k=1;k<_n;k<<=1){h=0,d=_n/(k<<1);for(var j=0;j<k;j++){wr=_cstb[h+n4],wi=inv*_cstb[h];for(var i=j;i<_n;i+=k<<1)xr=wr*re[ik=i+k]+wi*im[ik],xi=wr*im[ik]-wi*re[ik],re[ik]=re[i]-xr,re[i]+=xr,im[ik]=im[i]-xi,im[i]+=xi;h+=d}}}function _setVariables(){_bitrev="undefined"!=typeof Uint8Array?new Uint8Array(_n):new Array(_n),"undefined"!=typeof Float64Array?(_cstb=new Float64Array(1.25*_n),_tre=new Float64Array(_n),_tim=new Float64Array(_n)):(_cstb=new Array(1.25*_n),_tre=new Array(_n),_tim=new Array(_n))}function _makeBitReversal(){var i=0,j=0,k=0;for(_bitrev[0]=0;++i<_n;){for(k=_n>>1;k<=j;)j-=k,k>>=1;j+=k,_bitrev[i]=j}}function _makeCosSinTable(){var n2=_n>>1,n4=_n>>2,n8=_n>>3,n2p4=n2+n4,t=Math.sin(Math.PI/_n),dc=2*t*t,ds=Math.sqrt(dc*(2-dc)),c=_cstb[n4]=1,s=_cstb[0]=0;t=2*dc;for(var i=1;i<n8;i++)dc+=t*(c-=dc),ds-=t*(s+=ds),_cstb[i]=s,_cstb[n4-i]=c;0!==n8&&(_cstb[n8]=Math.sqrt(.5));for(var j=0;j<n4;j++)_cstb[n2-j]=_cstb[j];for(var k=0;k<n2p4;k++)_cstb[k+n2]=-_cstb[k]}var _tre,_tim,_n=0,_bitrev=null,_cstb=null;this.init=function(n){if(0===n||0!=(n&n-1))throw new Error("init: radix-2 required");_n=n,_setVariables(),_makeBitReversal(),_makeCosSinTable()},this.fft1d=function(re,im){fft(re,im,1)},this.ifft1d=function(re,im){var n=1/_n;fft(re,im,-1);for(var i=0;i<_n;i++)re[i]*=n,im[i]*=n},this.fft2d=function(re,im){for(var i=0,y=0;y<_n;y++){i=y*_n;for(var x1=0;x1<_n;x1++)_tre[x1]=re[x1+i],_tim[x1]=im[x1+i];this.fft1d(_tre,_tim);for(var x2=0;x2<_n;x2++)re[x2+i]=_tre[x2],im[x2+i]=_tim[x2]}for(var x=0;x<_n;x++){for(var y1=0;y1<_n;y1++)i=x+y1*_n,_tre[y1]=re[i],_tim[y1]=im[i];this.fft1d(_tre,_tim);for(var y2=0;y2<_n;y2++)re[i=x+y2*_n]=_tre[y2],im[i]=_tim[y2]}},this.ifft2d=function(re,im){for(var i=0,y=0;y<_n;y++){i=y*_n;for(var x1=0;x1<_n;x1++)_tre[x1]=re[x1+i],_tim[x1]=im[x1+i];this.ifft1d(_tre,_tim);for(var x2=0;x2<_n;x2++)re[x2+i]=_tre[x2],im[x2+i]=_tim[x2]}for(var x=0;x<_n;x++){for(var y1=0;y1<_n;y1++)i=x+y1*_n,_tre[y1]=re[i],_tim[y1]=im[i];this.ifft1d(_tre,_tim);for(var y2=0;y2<_n;y2++)re[i=x+y2*_n]=_tre[y2],im[i]=_tim[y2]}},this.real_ifft2d=function(re,im){for(var i2,i=0,y=0;y<_n;y++){i=y*_n;for(var x1=0;x1<_n;x1++)_tre[x1]=re[x1+i],_tim[x1]=im[x1+i];this.ifft1d(_tre,_tim);for(x2=0;x2<_n;x2++)re[x2+i]=_tre[x2],im[x2+i]=_tim[x2]}for(var halfn=_n/2,rowIdx=0,x=0;x<_n;x+=2){i=x,i2=x+1,_tre[0]=re[0+i],_tim[0]=re[0+i2],_tre[_n/2]=re[halfn*_n+i],_tim[_n/2]=re[halfn*_n+i2];for(var x2=1;x2<halfn;x2++)rowIdx=x2*_n,_tre[x2]=re[rowIdx+i]-im[rowIdx+i2],_tre[_n-x2]=re[rowIdx+i]+im[rowIdx+i2],_tim[x2]=im[rowIdx+i]+re[rowIdx+i2],_tim[_n-x2]=re[rowIdx+i2]-im[rowIdx+i];this.ifft1d(_tre,_tim);for(var y2=0;y2<_n;y2++)i2=x+1+y2*_n,re[i=x+y2*_n]=_tre[y2],re[i2]=_tim[y2]}},this.real_fft2d=function(re,im){for(var i=0,i2=0,y=0;y<_n;y+=2){i=y*_n,i2=(y+1)*_n;for(var x1=0;x1<_n;x1++)_tre[x1]=re[x1+i],_tim[x1]=re[x1+i2];this.fft1d(_tre,_tim),re[0+i]=_tre[0],re[0+i2]=_tim[0],im[0+i]=0,im[0+i2]=0,re[_n/2+i]=_tre[_n/2],re[_n/2+i2]=_tim[_n/2],im[_n/2+i]=0,im[_n/2+i2]=0;for(var x2=1;x2<_n/2;x2++)re[x2+i]=.5*(_tre[x2]+_tre[_n-x2]),im[x2+i]=.5*(_tim[x2]-_tim[_n-x2]),re[x2+i2]=.5*(_tim[x2]+_tim[_n-x2]),im[x2+i2]=-.5*(_tre[x2]-_tre[_n-x2]),re[_n-x2+i]=re[x2+i],im[_n-x2+i]=-im[x2+i],re[_n-x2+i2]=re[x2+i2],im[_n-x2+i2]=-im[x2+i2]}for(var x=0;x<_n;x++){for(var y1=0;y1<_n;y1++)i=x+y1*_n,_tre[y1]=re[i],_tim[y1]=im[i];this.fft1d(_tre,_tim);for(var y2=0;y2<_n;y2++)re[i=x+y2*_n]=_tre[y2],im[i]=_tim[y2]}}}