function block_locate_free(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var r7;
	var r8;
var __label__ = 0;
	i7 = sp + 0;var g0 = i7>>2; // save stack
	r0 = heap32[(fp+1)];
_1: do {
if(!(r0 ==0)) //_LBB726_16
{
	r1 = heap32[(fp)];
	if(uint(r0) >uint(31)) //_LBB726_3
{
	r2 = r0 >>> 1;
	r2 = r0 | r2;
	r3 = r2 >>> 2;
	r2 = r2 | r3;
	r3 = r2 >>> 4;
	r2 = r2 | r3;
	r3 = r2 >>> 8;
	r2 = r2 | r3;
	r3 = r2 >>> 16;
	r2 = r2 | r3;
	r3 = r2 ^ -1;
	r4 = 1431655765;
	r3 = r3 >>> 1;
	r2 = r4 & (~r2);
	r3 = r3 & 1431655765;
	r2 = (r2 + r3)|0;
	r3 = r2 >>> 2;
	r2 = r2 & 858993459;
	r3 = r3 & 858993459;
	r2 = (r2 + r3)|0;
	r3 = r2 >>> 4;
	r2 = r2 & 252645135;
	r3 = r3 & 252645135;
	r2 = (r2 + r3)|0;
	r3 = r2 >>> 8;
	r2 = r2 & 16711935;
	r3 = r3 & 16711935;
	r2 = (r2 + r3)|0;
	r3 = r2 & 65535;
	r2 = r2 >>> 16;
	r5 = 26;
	r2 = (r3 + r2)|0;
	r3 = 1;
	r2 = (r5 - r2)|0;
	r2 = r3 << r2;
	r0 = (r0 + r2)|0;
	r0 = (r0 + -1)|0;
	if(uint(r0) >uint(255)) //_LBB726_5
{
	r2 = r0 >>> 1;
	r2 = r0 | r2;
	r3 = r2 >>> 2;
	r2 = r2 | r3;
	r3 = r2 >>> 4;
	r2 = r2 | r3;
	r3 = r2 >>> 8;
	r2 = r2 | r3;
	r3 = r2 >>> 16;
	r2 = r2 | r3;
	r3 = r2 ^ -1;
	r3 = r3 >>> 1;
	r4 = r4 & (~r2);
	r2 = r3 & 1431655765;
	r4 = (r4 + r2)|0;
	r2 = r4 >>> 2;
	r4 = r4 & 858993459;
	r2 = r2 & 858993459;
	r4 = (r4 + r2)|0;
	r2 = r4 >>> 4;
	r4 = r4 & 252645135;
	r2 = r2 & 252645135;
	r4 = (r4 + r2)|0;
	r2 = r4 >>> 8;
	r4 = r4 & 16711935;
	r2 = r2 & 16711935;
	r4 = (r4 + r2)|0;
	r2 = r4 & 65535;
	r4 = r4 >>> 16;
	r4 = (r2 + r4)|0;
	r2 = (r5 - r4)|0;
	r0 = r0 >>> r2;
	r2 = 24;
	r0 = r0 ^ 32;
	r4 = (r2 - r4)|0;
__label__ = 5;
}
else{
__label__ = 3;
}
}
else{
__label__ = 3;
}
if (__label__ == 3){
	r0 = r0 >>> 3;
	r4 = 0;
}
	r2 = r4 << 2;
	r2 = (r1 + r2)|0;
	r2 = r2 >> 2;
	r3 = -1;
	r2 = heap32[(r2+1)];
	r0 = r3 << r0;
	r0 = r2 & r0;
	if(r0 ==0) //_LBB726_8
{
	r0 = r1 >> 2;
	r4 = (r4 + 1)|0;
	r0 = heap32[(r0)];
	r4 = r3 << r4;
	r0 = r0 & r4;
	if(r0 ==0) //_LBB726_16
{
break _1;
}
else{
	r4 = (r0 + -1)|0;
	r0 = r4 & (~r0);
	r4 = r0 >>> 1;
	r0 = r0 & 1431655765;
	r4 = r4 & 1431655765;
	r0 = (r0 + r4)|0;
	r4 = r0 >>> 2;
	r0 = r0 & 858993459;
	r4 = r4 & 858993459;
	r0 = (r0 + r4)|0;
	r4 = r0 >>> 4;
	r0 = r0 & 252645135;
	r4 = r4 & 252645135;
	r0 = (r0 + r4)|0;
	r4 = r0 >>> 8;
	r0 = r0 & 16711935;
	r4 = r4 & 16711935;
	r0 = (r0 + r4)|0;
	r4 = r0 & 65535;
	r0 = r0 >>> 16;
	r4 = (r4 + r0)|0;
	r0 = r4 << 2;
	r0 = (r1 + r0)|0;
	r0 = r0 >> 2;
	r0 = heap32[(r0+1)];
}
}
	r2 = (r0 + -1)|0;
	r2 = r2 & (~r0);
	r5 = r2 >>> 1;
	r2 = r2 & 1431655765;
	r5 = r5 & 1431655765;
	r2 = (r2 + r5)|0;
	r5 = r2 >>> 2;
	r2 = r2 & 858993459;
	r5 = r5 & 858993459;
	r2 = (r2 + r5)|0;
	r5 = r2 >>> 4;
	r2 = r2 & 252645135;
	r5 = r5 & 252645135;
	r2 = (r2 + r5)|0;
	r5 = r2 >>> 8;
	r2 = r2 & 16711935;
	r5 = r5 & 16711935;
	r2 = (r2 + r5)|0;
	r5 = r2 & 65535;
	r2 = r2 >>> 16;
	r2 = (r5 + r2)|0;
	r0 = r0 == 0 ? r3 : r2;
	r2 = r4 << 7;
	r2 = (r1 + r2)|0;
	r3 = r0 << 2;
	r2 = (r2 + r3)|0;
	r3 = r2 >> 2;
	r3 = heap32[(r3+24)];
if(!(r3 ==0)) //_LBB726_16
{
	r2 = (r2 + 96)|0;
	r5 = r3 >> 2;
	r6 = heap32[(r5+2)];
	r5 = heap32[(r5+3)];
	r7 = r6 >> 2;
	r8 = r5 >> 2;
	heap32[(r7+3)] = r5;
	r2 = r2 >> 2;
	heap32[(r8+2)] = r6;
	r5 = heap32[(r2)];
if(!(r5 !=r3)) //_LBB726_15
{
	r5 = block_null;
	heap32[(r2)] = r6;
if(!(r6 !=r5)) //_LBB726_15
{
	r2 = r4 << 2;
	r2 = (r1 + r2)|0;
	r2 = r2 >> 2;
	r5 = 1;
	r0 = r5 << r0;
	r6 = heap32[(r2+1)];
	r0 = r6 & (~r0);
	heap32[(r2+1)] = r0;
if(!(r0 !=0)) //_LBB726_15
{
	r0 = r1 >> 2;
	r1 = r5 << r4;
	r2 = heap32[(r0)];
	r1 = r2 & (~r1);
	heap32[(r0)] = r1;
}
}
}
	r_g0 = r3;
	return;
}
}
} while(0);
	r0 = 0;
	r_g0 = r0;
	return;
}