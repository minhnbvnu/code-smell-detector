function U$(e,t){t.classHierarchy.push("vtkKochanekSpline1D"),e.computeCloseCoefficients=function(e,n,r,i){t.coefficients&&t.coefficients.length===4*e||(t.coefficients=new Float32Array(4*e));for(var o=e-1,a=1;a<o;a++){var s=i[a]-i[a-1],l=i[a+1]-i[a],u=s*((1-t.tension)*(1-t.continuity)*(1+t.bias))+l*((1-t.tension)*(1+t.continuity)*(1-t.bias)),c=s*((1-t.tension)*(1+t.continuity)*(1+t.bias))+l*((1-t.tension)*(1-t.continuity)*(1-t.bias)),d=r[a+1]-r[a],p=r[a]-r[a-1];u*=p/(p+d),c*=d/(p+d),t.coefficients[4*a+0]=i[a],t.coefficients[4*a+1]=c,t.coefficients[4*a+2]=u}t.coefficients[0]=i[0],t.coefficients[4*o+0]=i[o],t.coefficients[4*o+1]=0,t.coefficients[4*o+2]=0,t.coefficients[4*o+3]=0;var f=i[o]-i[o-1],h=i[1]-i[0],m=f*((1-t.tension)*(1-t.continuity)*(1+t.bias))+h*((1-t.tension)*(1+t.continuity)*(1-t.bias)),g=f*((1-t.tension)*(1+t.continuity)*(1+t.bias))+h*((1-t.tension)*(1-t.continuity)*(1-t.bias)),v=r[1]-r[0],y=r[o]-r[o-1];m*=y/(y+v),g*=v/(y+v),t.coefficients[1]=g,t.coefficients[2]=m,t.coefficients[4*o+1]=g,t.coefficients[4*o+2]=m;for(var b=0;b<o;b++)t.coefficients[4*b+2]=-3*i[b]+3*i[b+1]+-2*t.coefficients[4*b+1]+-1*t.coefficients[4*(b+1)+2],t.coefficients[4*b+3]=2*i[b]+-2*i[b+1]+1*t.coefficients[4*b+1]+1*t.coefficients[4*(b+1)+2]},e.computeOpenCoefficients=function(e,t,n,r){G$("Open splines are not implemented yet!")},e.getValue=function(e,n){var r=n*n,i=n*n*n;return t.coefficients[4*e+3]*i+t.coefficients[4*e+2]*r+t.coefficients[4*e+1]*n+t.coefficients[4*e+0]}}