function parseBasicTypeExpression(){var o,s;switch(B){case u.STAR:return consume(u.STAR),maybeAddRange({type:i.AllLiteral},[P-1,P]);case u.LPAREN:return parseUnionType();case u.LBRACK:return parseArrayType();case u.LBRACE:return parseRecordType();case u.NAME:if(s=w-z.length,"null"===z)return consume(u.NAME),maybeAddRange({type:i.NullLiteral},[s,P]);if("undefined"===z)return consume(u.NAME),maybeAddRange({type:i.UndefinedLiteral},[s,P]);if("true"===z||"false"===z)return consume(u.NAME),maybeAddRange({type:i.BooleanLiteralType,value:"true"===z},[s,P]);if(o=Context.save(),"function"===z)try{return parseFunctionType()}catch(i){o.restore()}return parseTypeName();case u.STRING:return next(),maybeAddRange({type:i.StringLiteralType,value:z},[P-z.length-2,P]);case u.NUMBER:return next(),maybeAddRange({type:i.NumericLiteralType,value:z},[P-String(z).length,P]);default:V.throwError("unexpected token")}}