function __vp_tonemask($p,$logfft,$logmask,$global_specmax,$local_specmax) {
 $p = $p|0;
 $logfft = $logfft|0;
 $logmask = $logmask|0;
 $global_specmax = +$global_specmax;
 $local_specmax = +$local_specmax;
 var $$$$i = 0, $$$i = 0, $$alloca_mul = 0, $$in$i = 0, $$in28$i = 0, $$lcssa = 0, $$lcssa33 = 0, $$lcssa68 = 0.0, $$lcssa73 = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert37$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phiZ2D = 0, $$pre38$i = 0, $$sum$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0.0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0.0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0.0, $147 = 0, $148 = 0, $149 = 0.0, $15 = 0.0, $150 = 0, $151 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0.0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0.0, $71 = 0, $72 = 0.0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0.0, $8 = 0.0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0, $89 = 0, $9 = 0.0, $90 = 0.0, $91 = 0.0;
 var $92 = 0, $93 = 0.0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $att$0 = 0.0, $exitcond = 0, $exitcond36 = 0, $i$02$i$i = 0, $i$020 = 0, $i$04$i = 0, $i$1$i = 0, $i$1$i$lcssa = 0, $i$1$ph$i = 0, $i$118 = 0, $linpos$0$lcssa$i = 0, $linpos$023$i = 0;
 var $linpos$1$lcssa$i = 0, $linpos$116$i16 = 0, $linpos$27$i = 0, $max$0$ph$i = 0.0, $max$0$ph$i$lcssa = 0.0, $minV$0$ph$i = 0.0, $minV$0$ph3$lcssa$i = 0.0, $minV$0$ph313$i = 0.0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $pos$022$i = 0, $pos$1$lcssa$i = 0, $seedptr$01$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$p>>2]|0;
 $1 = ((($p)) + 40|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 << 2;
 $$alloca_mul = $3;
 $4 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0;;
 $5 = ((($p)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 4|0);
 $8 = +HEAPF32[$7>>2];
 $9 = $8 + $local_specmax;
 $10 = ($2|0)>(0);
 if ($10) {
  $i$020 = 0;
  while(1) {
   $11 = (($4) + ($i$020<<2)|0);
   HEAPF32[$11>>2] = -9999.0;
   $12 = (($i$020) + 1)|0;
   $13 = ($12|0)<($2|0);
   if ($13) {
    $i$020 = $12;
   } else {
    break;
   }
  }
 }
 $14 = ((($6)) + 8|0);
 $15 = +HEAPF32[$14>>2];
 $16 = $9 < $15;
 $att$0 = $16 ? $15 : $9;
 $17 = ($0|0)>(0);
 if ($17) {
  $18 = ((($p)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $i$118 = 0;
  while(1) {
   $20 = (($19) + ($i$118<<2)|0);
   $21 = +HEAPF32[$20>>2];
   $22 = $21 + $att$0;
   $23 = (($logmask) + ($i$118<<2)|0);
   HEAPF32[$23>>2] = $22;
   $24 = (($i$118) + 1)|0;
   $exitcond36 = ($24|0)==($0|0);
   if ($exitcond36) {
    break;
   } else {
    $i$118 = $24;
   }
  }
  $25 = ((($p)) + 8|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($6)) + 496|0);
  $28 = +HEAPF32[$27>>2];
  $29 = $28 - $global_specmax;
  if ($17) {
   $30 = ((($p)) + 20|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ((($p)) + 32|0);
   $33 = ((($p)) + 36|0);
   $34 = ((($p)) + 28|0);
   $i$04$i = 0;
   while(1) {
    $35 = (($logfft) + ($i$04$i<<2)|0);
    $36 = +HEAPF32[$35>>2];
    $37 = (($31) + ($i$04$i<<2)|0);
    $38 = HEAP32[$37>>2]|0;
    $i$1$ph$i = $i$04$i;$max$0$ph$i = $36;
    L13: while(1) {
     $i$1$i = $i$1$ph$i;
     while(1) {
      $39 = (($i$1$i) + 1)|0;
      $40 = ($39|0)<($0|0);
      if (!($40)) {
       $$lcssa33 = 0;$$lcssa73 = $39;$i$1$i$lcssa = $i$1$i;$max$0$ph$i$lcssa = $max$0$ph$i;
       break L13;
      }
      $41 = (($31) + ($39<<2)|0);
      $42 = HEAP32[$41>>2]|0;
      $43 = ($42|0)==($38|0);
      if (!($43)) {
       $$lcssa33 = 1;$$lcssa73 = $39;$i$1$i$lcssa = $i$1$i;$max$0$ph$i$lcssa = $max$0$ph$i;
       break L13;
      }
      $44 = (($logfft) + ($39<<2)|0);
      $45 = +HEAPF32[$44>>2];
      $46 = $45 > $max$0$ph$i;
      if ($46) {
       $i$1$ph$i = $39;$max$0$ph$i = $45;
       continue L13;
      } else {
       $i$1$i = $39;
      }
     }
    }
    $47 = $max$0$ph$i$lcssa + 6.0;
    $48 = (($logmask) + ($i$1$i$lcssa<<2)|0);
    $49 = +HEAPF32[$48>>2];
    $50 = $47 > $49;
    if ($50) {
     $51 = HEAP32[$32>>2]|0;
     $52 = $38 >> $51;
     $53 = ($52|0)>(16);
     $$$i = $53 ? 16 : $52;
     $54 = ($$$i|0)<(0);
     $$$$i = $54 ? 0 : $$$i;
     $55 = (($26) + ($$$$i<<2)|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = HEAP32[$33>>2]|0;
     $58 = $29 + $max$0$ph$i$lcssa;
     $59 = $58;
     $60 = $59 + -30.0;
     $61 = $60 * 0.10000000149011612;
     $62 = (~~(($61)));
     $63 = ($62|0)<(0);
     $64 = $63 ? 0 : $62;
     $65 = ($64|0)>(7);
     $66 = $65 ? 7 : $64;
     $67 = (($56) + ($66<<2)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($68)) + 4|0);
     $70 = +HEAPF32[$69>>2];
     $71 = (~~(($70)));
     $72 = +HEAPF32[$68>>2];
     $73 = (~~(($72)));
     $74 = ($73|0)<($71|0);
     if ($74) {
      $75 = (($31) + ($i$1$i$lcssa<<2)|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = HEAP32[$34>>2]|0;
      $78 = (($76) - ($77))|0;
      $79 = (+($78|0));
      $80 = $57 >> 1;
      $81 = (+($80|0));
      $82 = $72 + -16.0;
      $83 = (+($57|0));
      $84 = $82 * $83;
      $85 = $84 - $81;
      $86 = $85 + $79;
      $87 = (~~(($86)));
      $i$02$i$i = $73;$seedptr$01$i$i = $87;
      while(1) {
       $88 = ($seedptr$01$i$i|0)>(0);
       if ($88) {
        $$sum$i$i = (($i$02$i$i) + 2)|0;
        $89 = (($68) + ($$sum$i$i<<2)|0);
        $90 = +HEAPF32[$89>>2];
        $91 = $90 + $max$0$ph$i$lcssa;
        $92 = (($4) + ($seedptr$01$i$i<<2)|0);
        $93 = +HEAPF32[$92>>2];
        $94 = $93 < $91;
        if ($94) {
         HEAPF32[$92>>2] = $91;
        }
       }
       $95 = (($seedptr$01$i$i) + ($57))|0;
       $96 = ($95|0)<($2|0);
       $97 = (($i$02$i$i) + 1)|0;
       $98 = ($97|0)<($71|0);
       $or$cond$i$i = $98 & $96;
       if ($or$cond$i$i) {
        $i$02$i$i = $97;$seedptr$01$i$i = $95;
       } else {
        break;
       }
      }
     }
    }
    if ($$lcssa33) {
     $i$04$i = $$lcssa73;
    } else {
     $$pre$phiZ2D = $33;
     break;
    }
   }
  } else {
   label = 7;
  }
 } else {
  label = 7;
 }
 if ((label|0) == 7) {
  $$pre = ((($p)) + 36|0);
  $$pre$phiZ2D = $$pre;
 }
 $99 = HEAP32[$$pre$phiZ2D>>2]|0;
 _seed_chase($4,$99,$2);
 $100 = HEAP32[$p>>2]|0;
 $101 = ($100|0)>(1);
 L33: do {
  if ($101) {
   $102 = ((($p)) + 20|0);
   $103 = ((($p)) + 28|0);
   $104 = HEAP32[$102>>2]|0;
   $105 = HEAP32[$104>>2]|0;
   $106 = $99 >> 1;
   $107 = (($105) - ($106))|0;
   $108 = HEAP32[$103>>2]|0;
   $109 = (($107) - ($108))|0;
   $110 = HEAP32[$5>>2]|0;
   $111 = ((($110)) + 32|0);
   $117 = 1;$120 = $105;$linpos$023$i = 0;$pos$022$i = $109;
   while(1) {
    $114 = (($4) + ($pos$022$i<<2)|0);
    $115 = +HEAPF32[$114>>2];
    $116 = (($104) + ($117<<2)|0);
    $118 = HEAP32[$116>>2]|0;
    $119 = (($118) + ($120))|0;
    $121 = $119 >> 1;
    $122 = (($121) - ($108))|0;
    $123 = +HEAPF32[$111>>2];
    $124 = $115 > $123;
    $minV$0$ph$i = $124 ? $123 : $115;
    $125 = ($pos$022$i|0)<($122|0);
    L37: do {
     if ($125) {
      $$in$i = $pos$022$i;$minV$0$ph313$i = $minV$0$ph$i;
      while(1) {
       $126 = $minV$0$ph313$i == -9999.0;
       $$in28$i = $$in$i;
       while(1) {
        $127 = (($$in28$i) + 1)|0;
        $128 = (($4) + ($127<<2)|0);
        $129 = +HEAPF32[$128>>2];
        $130 = $129 > -9999.0;
        if ($130) {
         $131 = $129 < $minV$0$ph313$i;
         $or$cond$i = $126 | $131;
         if ($or$cond$i) {
          $$lcssa = $127;$$lcssa68 = $129;
          break;
         }
        } else {
         if ($126) {
          $$lcssa = $127;$$lcssa68 = $129;
          break;
         }
        }
        $132 = ($127|0)<($122|0);
        if ($132) {
         $$in28$i = $127;
        } else {
         $minV$0$ph3$lcssa$i = $minV$0$ph313$i;$pos$1$lcssa$i = $127;
         break L37;
        }
       }
       $133 = ($$lcssa|0)<($122|0);
       if ($133) {
        $$in$i = $$lcssa;$minV$0$ph313$i = $$lcssa68;
       } else {
        $minV$0$ph3$lcssa$i = $$lcssa68;$pos$1$lcssa$i = $$lcssa;
        break;
       }
      }
     } else {
      $minV$0$ph3$lcssa$i = $minV$0$ph$i;$pos$1$lcssa$i = $pos$022$i;
     }
    } while(0);
    $134 = (($pos$1$lcssa$i) + ($108))|0;
    $135 = ($linpos$023$i|0)>=($100|0);
    $136 = ($120|0)>($134|0);
    $or$cond = $135 | $136;
    L48: do {
     if ($or$cond) {
      $linpos$1$lcssa$i = $linpos$023$i;
     } else {
      $linpos$116$i16 = $linpos$023$i;
      while(1) {
       $137 = (($logmask) + ($linpos$116$i16<<2)|0);
       $138 = +HEAPF32[$137>>2];
       $139 = $138 < $minV$0$ph3$lcssa$i;
       if ($139) {
        HEAPF32[$137>>2] = $minV$0$ph3$lcssa$i;
       }
       $140 = (($linpos$116$i16) + 1)|0;
       $141 = ($140|0)<($100|0);
       if (!($141)) {
        $linpos$1$lcssa$i = $140;
        break L48;
       }
       $$phi$trans$insert37$i = (($104) + ($140<<2)|0);
       $$pre38$i = HEAP32[$$phi$trans$insert37$i>>2]|0;
       $142 = ($$pre38$i|0)>($134|0);
       if ($142) {
        $linpos$1$lcssa$i = $140;
        break;
       } else {
        $linpos$116$i16 = $140;
       }
      }
     }
    } while(0);
    $112 = (($linpos$1$lcssa$i) + 1)|0;
    $113 = ($112|0)<($100|0);
    if (!($113)) {
     $linpos$0$lcssa$i = $linpos$1$lcssa$i;
     break L33;
    }
    $$phi$trans$insert$i = (($104) + ($linpos$1$lcssa$i<<2)|0);
    $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
    $117 = $112;$120 = $$pre$i;$linpos$023$i = $linpos$1$lcssa$i;$pos$022$i = $pos$1$lcssa$i;
   }
  } else {
   $linpos$0$lcssa$i = 0;
  }
 } while(0);
 $143 = HEAP32[$1>>2]|0;
 $144 = (($143) + -1)|0;
 $145 = (($4) + ($144<<2)|0);
 $146 = +HEAPF32[$145>>2];
 $147 = ($linpos$0$lcssa$i|0)<($100|0);
 if ($147) {
  $linpos$27$i = $linpos$0$lcssa$i;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $148 = (($logmask) + ($linpos$27$i<<2)|0);
  $149 = +HEAPF32[$148>>2];
  $150 = $149 < $146;
  if ($150) {
   HEAPF32[$148>>2] = $146;
  }
  $151 = (($linpos$27$i) + 1)|0;
  $exitcond = ($151|0)==($100|0);
  if ($exitcond) {
   break;
  } else {
   $linpos$27$i = $151;
  }
 }
 STACKTOP = sp;return;
}