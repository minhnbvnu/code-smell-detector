function _ZN21btConeTwistConstraint23solveConstraintObsoleteER11btRigidBodyS1_f(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var r7;
	var r8;
	var r9;
	var r10;
	var r11;
	var r12;
	var r13;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
	var f6;
	var f7;
	var f8;
	var f9;
	var f10;
	var f11;
	var f12;
	var f13;
	var f14;
	var f15;
	var f16;
	var f17;
	var f18;
	var f19;
	var f20;
	var f21;
	var f22;
	var f23;
	var f24;
	var f25;
	var f26;
	var f27;
	var f28;
	var f29;
	var f30;
var __label__ = 0;
	i7 = sp + -624;var g0 = i7>>2; // save stack
	r0 = heap32[(fp)];
	r1 = heapU8[r0+515];
if(!(r1 ==0)) //_LBB582_52
{
	r1 = heap32[(fp+1)];
	r2 = heap32[(fp+2)];
	f0 = heapFloat[(fp+3)];
	heapFloat[(fp+-117)] = f0;
	r3 = r0 >> 2;
	r4 = heapU8[r0+512];
if(!(r4 !=0)) //_LBB582_8
{
	r4 = heap32[(r3+5)];
	r5 = heap32[(r3+6)];
	r4 = r4 >> 2;
	r5 = r5 >> 2;
	f0 = heapFloat[(r4+9)];
	f1 = heapFloat[(r3+84)];
	f2 = heapFloat[(r4+5)];
	f3 = heapFloat[(r4+1)];
	f4 = heapFloat[(r4+10)];
	f5 = heapFloat[(r3+85)];
	f6 = heapFloat[(r4+6)];
	f7 = heapFloat[(r4+2)];
	f8 = heapFloat[(r5+9)];
	f9 = heapFloat[(r3+100)];
	f10 = heapFloat[(r5+5)];
	f11 = heapFloat[(r5+1)];
	f12 = heapFloat[(r5+10)];
	f13 = heapFloat[(r3+101)];
	f14 = heapFloat[(r5+6)];
	f15 = heapFloat[(r5+2)];
	f0 = f0*f1;
	f4 = f4*f5;
	f16 = heapFloat[(r4+11)];
	f17 = heapFloat[(r3+86)];
	f18 = heapFloat[(r4+7)];
	f19 = heapFloat[(r4+3)];
	f2 = f2*f1;
	f6 = f6*f5;
	f1 = f3*f1;
	f3 = f7*f5;
	f5 = f8*f9;
	f7 = f12*f13;
	f8 = heapFloat[(r5+11)];
	f12 = heapFloat[(r3+102)];
	f20 = heapFloat[(r5+7)];
	f21 = heapFloat[(r5+3)];
	f10 = f10*f9;
	f14 = f14*f13;
	f9 = f11*f9;
	f11 = f15*f13;
	f0 = f0+f4;
	f4 = f16*f17;
	f2 = f2+f6;
	f6 = f18*f17;
	f1 = f1+f3;
	f3 = f19*f17;
	f5 = f5+f7;
	f7 = f8*f12;
	f8 = f10+f14;
	f10 = f20*f12;
	f9 = f9+f11;
	f11 = f21*f12;
	f12 = heapFloat[(r4+15)];
	f0 = f0+f4;
	f4 = heapFloat[(r4+14)];
	f2 = f2+f6;
	f6 = heapFloat[(r4+13)];
	f1 = f1+f3;
	f3 = heapFloat[(r5+15)];
	f5 = f5+f7;
	f7 = heapFloat[(r5+14)];
	f8 = f8+f10;
	f10 = heapFloat[(r5+13)];
	f9 = f9+f11;
	f0 = f0+f12;
	heapFloat[(fp+-119)] = f0;
	f0 = f2+f4;
	heapFloat[(fp+-121)] = f0;
	f1 = f1+f6;
	heapFloat[(fp+-120)] = f1;
	f0 = f5+f3;
	heapFloat[(fp+-122)] = f0;
	f0 = f8+f7;
	heapFloat[(fp+-123)] = f0;
	f1 = f9+f10;
	r4 = r1 >> 2;
	r5 = r2 >> 2;
	f2 = heapFloat[(r4+80)];
	f5 = heapFloat[(r4+130)];
	f8 = heapFloat[(r5+80)];
	f9 = heapFloat[(r5+130)];
	f11 = heapFloat[(r4+81)];
	f13 = heapFloat[(r4+131)];
	f14 = heapFloat[(r4+82)];
	f15 = heapFloat[(r4+132)];
	f16 = heapFloat[(r5+81)];
	f17 = heapFloat[(r5+131)];
	f18 = heapFloat[(r5+82)];
	f19 = heapFloat[(r5+132)];
	f20 = heapFloat[(fp+-120)];
	f6 = f20-f6;
	f10 = f1-f10;
	f11 = f11+f13;
	f0 = heapFloat[(fp+-119)];
	f12 = f0-f12;
	f2 = f2+f5;
	f0 = heapFloat[(fp+-121)];
	f4 = f0-f4;
	f5 = f14+f15;
	f13 = f16+f17;
	f0 = heapFloat[(fp+-122)];
	f3 = f0-f3;
	f8 = f8+f9;
	f0 = heapFloat[(fp+-123)];
	f7 = f0-f7;
	f9 = f18+f19;
	f14 = heapFloat[(r4+78)];
	f15 = heapFloat[(r4+128)];
	f16 = f2*f4;
	f17 = f11*f6;
	f18 = heapFloat[(r5+78)];
	f19 = heapFloat[(r5+128)];
	f21 = f8*f7;
	f22 = f13*f10;
	f23 = heapFloat[(r4+77)];
	f24 = heapFloat[(r4+127)];
	f25 = f5*f6;
	f2 = f2*f12;
	f26 = heapFloat[(r5+77)];
	f27 = heapFloat[(r5+127)];
	f28 = f9*f10;
	f8 = f8*f3;
	f29 = heapFloat[(r4+76)];
	f30 = heapFloat[(r4+126)];
	f11 = f11*f12;
	f5 = f5*f4;
	f0 = heapFloat[(r5+76)];
	f20 = heapFloat[(r5+126)];
	f13 = f13*f3;
	f9 = f9*f7;
	f14 = f14+f15;
	f15 = f16-f17;
	f16 = f18+f19;
	f17 = f21-f22;
	f18 = f23+f24;
	f2 = f25-f2;
	f19 = f26+f27;
	f8 = f28-f8;
	f21 = f29+f30;
	f5 = f11-f5;
	f0 = f0+f20;
	f9 = f13-f9;
	f11 = f14+f15;
	f13 = f16+f17;
	f2 = f18+f2;
	f8 = f19+f8;
	f5 = f21+f5;
	f0 = f0+f9;
	f9 = f11-f13;
	f2 = f2-f8;
	heapFloat[(fp+-118)] = f2;
	f0 = f5-f0;
	f2 = heapFloat[(fp+-119)];
	f5 = heapFloat[(fp+-122)];
	f2 = f2-f5;
	f5 = heapFloat[(fp+-121)];
	f8 = heapFloat[(fp+-123)];
	f5 = f5-f8;
	f8 = heapFloat[(fp+-120)];
	f1 = f8-f1;
	r6 = 0;
_5: while(true){
	r7 = (r6 * -21)|0;
	r8 = r7 << 2;
	r8 = (r0 + r8)|0;
	r8 = r8 >> 2;
	f8 = heapFloat[(r8+9)];
	f11 = heapFloat[(r8+10)];
	f13 = heapFloat[(r8+11)];
	f14 = f1*f8;
	f15 = f5*f11;
	f14 = f14+f15;
	f15 = f2*f13;
	f14 = f14+f15;
	f15 =      -0.30000001192092896;
	f16 = f8*f0;
	f17 = heapFloat[(fp+-118)];
	f17 = f11*f17;
	f14 = f14*f15;
	f15 = f16+f17;
	f16 = f13*f9;
	f17 =                         1;
	f18 = heapFloat[(r8+29)];
	f19 = heapFloat[(fp+-117)];
	f14 = f14/f19;
	f17 = f17/f18;
	f15 = f15+f16;
	f14 = f14*f17;
	f15 = f15*f17;
	f14 = f14-f15;
	f15 = heapFloat[(r3+7)];
	f15 = f15+f14;
	heapFloat[(r3+7)] = f15;
	f15 = heapFloat[(r4+84)];
	f16 =                         0;
if(!(f15 ==f16)) //_LBB582_5
{
	r9 = heap32[(r3+5)];
	r9 = r9 >> 2;
	f15 = f6*f11;
	f17 = f4*f8;
	f18 = f12*f8;
	f19 = f6*f13;
	f20 = f4*f13;
	f21 = f12*f11;
	f15 = f15-f17;
	f17 = f18-f19;
	f18 = f20-f21;
	f19 = heapFloat[(r9+84)];
	f20 = f8*f19;
	f20 = f20*f14;
	f21 = heapFloat[(r4+126)];
	f22 = heapFloat[(r9+65)];
	f23 = heapFloat[(r9+64)];
	f24 = heapFloat[(r9+69)];
	f25 = heapFloat[(r9+68)];
	f26 = heapFloat[(r9+73)];
	f27 = heapFloat[(r9+72)];
	f28 = heapFloat[(r9+66)];
	f29 = heapFloat[(r9+70)];
	f30 = heapFloat[(r9+74)];
	f20 = f21+f20;
	f21 = f11*f19;
	heapFloat[(r4+126)] = f20;
	f20 = f21*f14;
	f21 = heapFloat[(r4+127)];
	f20 = f21+f20;
	f19 = f13*f19;
	heapFloat[(r4+127)] = f20;
	f19 = f19*f14;
	f20 = heapFloat[(r4+128)];
	f19 = f20+f19;
	heapFloat[(r4+128)] = f19;
	f19 = f23*f18;
	f20 = f22*f17;
	f21 = heapFloat[(r4+134)];
	f19 = f19+f20;
	f20 = f28*f15;
	f19 = f19+f20;
	f20 = f21*f14;
	f21 = heapFloat[(r4+136)];
	f22 = heapFloat[(r4+135)];
	f23 = heapFloat[(r4+130)];
	f19 = f19*f20;
	f20 = f25*f18;
	f24 = f24*f17;
	f20 = f20+f24;
	f24 = f29*f15;
	f19 = f23+f19;
	heapFloat[(r4+130)] = f19;
	f19 = f20+f24;
	f20 = f22*f14;
	f18 = f27*f18;
	f17 = f26*f17;
	f19 = f19*f20;
	f20 = heapFloat[(r4+131)];
	f19 = f20+f19;
	f17 = f18+f17;
	f15 = f30*f15;
	heapFloat[(r4+131)] = f19;
	f15 = f17+f15;
	f17 = f21*f14;
	f15 = f15*f17;
	f17 = heapFloat[(r4+132)];
	f15 = f17+f15;
	heapFloat[(r4+132)] = f15;
}
	f15 = heapFloat[(r5+84)];
if(!(f15 ==f16)) //_LBB582_7
{
	f15 = f10*f11;
	f16 = f7*f8;
	f8 = f3*f8;
	f17 = f10*f13;
	f13 = f7*f13;
	f11 = f3*f11;
	f15 = f15-f16;
	f8 = f8-f17;
	f11 = f13-f11;
	r9 = heap32[(r3+6)];
	r9 = r9 >> 2;
	f13 = -f14;
	f14 = heapFloat[(r9+84)];
	r10 = r7 << 2;
	r10 = (r0 + r10)|0;
	r10 = r10 >> 2;
	r7 = r7 << 2;
	r7 = (r0 + r7)|0;
	f16 = heapFloat[(r10+9)];
	r7 = r7 >> 2;
	f16 = f16*f14;
	f17 = heapFloat[(r7+10)];
	f18 = heapFloat[(r8+11)];
	f16 = f16*f13;
	f19 = heapFloat[(r5+126)];
	f20 = heapFloat[(r9+65)];
	f21 = heapFloat[(r9+64)];
	f22 = heapFloat[(r9+69)];
	f23 = heapFloat[(r9+68)];
	f24 = heapFloat[(r9+73)];
	f25 = heapFloat[(r9+72)];
	f26 = heapFloat[(r9+66)];
	f27 = heapFloat[(r9+70)];
	f28 = heapFloat[(r9+74)];
	f16 = f19+f16;
	f17 = f17*f14;
	heapFloat[(r5+126)] = f16;
	f16 = f17*f13;
	f17 = heapFloat[(r5+127)];
	f16 = f17+f16;
	f14 = f18*f14;
	heapFloat[(r5+127)] = f16;
	f14 = f14*f13;
	f16 = heapFloat[(r5+128)];
	f14 = f16+f14;
	heapFloat[(r5+128)] = f14;
	f14 = f21*f11;
	f16 = f20*f8;
	f17 = heapFloat[(r5+134)];
	f14 = f14+f16;
	f16 = f26*f15;
	f14 = f14+f16;
	f16 = f17*f13;
	f17 = heapFloat[(r5+136)];
	f18 = heapFloat[(r5+135)];
	f19 = heapFloat[(r5+130)];
	f14 = f14*f16;
	f16 = f23*f11;
	f20 = f22*f8;
	f16 = f16+f20;
	f20 = f27*f15;
	f14 = f19+f14;
	heapFloat[(r5+130)] = f14;
	f14 = f16+f20;
	f16 = f18*f13;
	f11 = f25*f11;
	f8 = f24*f8;
	f14 = f14*f16;
	f16 = heapFloat[(r5+131)];
	f14 = f16+f14;
	f8 = f11+f8;
	f11 = f28*f15;
	heapFloat[(r5+131)] = f14;
	f8 = f8+f11;
	f11 = f17*f13;
	f8 = f8*f11;
	f11 = heapFloat[(r5+132)];
	f8 = f11+f8;
	heapFloat[(r5+132)] = f8;
}
	r6 = (r6 + -1)|0;
if(!(r6 !=-3)) //_LBB582_3
{
break _5;
}
}
}
	r4 = heapU8[r0+540];
_14: do {
	if(r4 ==0) //_LBB582_29
{
	f0 = heapFloat[(r3+107)];
	f1 =   1.1920928955078125e-007;
	if(f0 <=f1) //_LBB582_35
{
break _14;
}
else{
	r4 = r2 >> 2;
	r5 = r1 >> 2;
	f0 = heapFloat[(r4+81)];
	f2 = heapFloat[(r4+131)];
	f3 = heapFloat[(r5+81)];
	f4 = heapFloat[(r5+131)];
	f5 = heapFloat[(r4+80)];
	f6 = heapFloat[(r4+130)];
	f7 = heapFloat[(r5+80)];
	f8 = heapFloat[(r5+130)];
	f9 = heapFloat[(r4+82)];
	f10 = heapFloat[(r4+132)];
	f11 = heapFloat[(r5+82)];
	f12 = heapFloat[(r5+132)];
	f0 = f0+f2;
	f2 = f3+f4;
	f3 = f5+f6;
	f4 = f7+f8;
	f0 = f0-f2;
	f2 = f3-f4;
	f3 = f9+f10;
	f4 = f11+f12;
	f3 = f3-f4;
	f4 = f2*f2;
	f5 = f0*f0;
	f4 = f4+f5;
	f5 = f3*f3;
	f4 = f4+f5;
	if(f4 <=f1) //_LBB582_35
{
break _14;
}
else{
	heapFloat[(g0)] = f4;
	sqrtf(i7);
	r6 = heap32[(r3+5)];
	r7 = heap32[(r3+6)];
	f4 =                         1;
	r6 = r6 >> 2;
	r7 = r7 >> 2;
	f1 = f4/f_g0;
	f5 = heapFloat[(r6+64)];
	f6 = f2*f1;
	f7 = heapFloat[(r6+65)];
	f8 = heapFloat[(r7+64)];
	f9 = heapFloat[(r7+65)];
	f10 = heapFloat[(r6+68)];
	f11 = f0*f1;
	f12 = heapFloat[(r6+69)];
	f13 = heapFloat[(r7+68)];
	f14 = heapFloat[(r7+69)];
	f15 = heapFloat[(r6+66)];
	f16 = heapFloat[(r6+70)];
	f17 = heapFloat[(r7+66)];
	f18 = heapFloat[(r7+70)];
	f5 = f5*f6;
	f10 = f10*f11;
	f19 = heapFloat[(r6+72)];
	f1 = f3*f1;
	f20 = heapFloat[(r6+73)];
	f21 = heapFloat[(r7+72)];
	f22 = heapFloat[(r7+73)];
	f7 = f7*f6;
	f12 = f12*f11;
	f8 = f8*f6;
	f13 = f13*f11;
	f9 = f9*f6;
	f14 = f14*f11;
	f23 = heapFloat[(r6+74)];
	f24 = heapFloat[(r7+74)];
	f5 = f5+f10;
	f10 = f19*f1;
	f7 = f7+f12;
	f12 = f20*f1;
	f15 = f15*f6;
	f16 = f16*f11;
	f8 = f8+f13;
	f13 = f21*f1;
	f9 = f9+f14;
	f14 = f22*f1;
	f17 = f17*f6;
	f18 = f18*f11;
	f5 = f5+f10;
	f7 = f7+f12;
	f8 = f8+f13;
	f9 = f9+f14;
	f10 = f15+f16;
	f12 = f23*f1;
	f13 = f17+f18;
	f14 = f24*f1;
	f10 = f10+f12;
	f12 = f13+f14;
	f5 = f6*f5;
	f7 = f11*f7;
	f6 = f6*f8;
	f8 = f11*f9;
	f5 = f5+f7;
	f7 = f1*f10;
	f6 = f6+f8;
	f1 = f1*f12;
	f5 = f5+f7;
	f1 = f6+f1;
	f1 = f5+f1;
	f5 = heapFloat[(r3+107)];
	f1 = f4/f1;
	f1 = f5*f1;
	f0 = f0*f1;
	f2 = f2*f1;
	f1 = f3*f1;
	f3 = f2*f2;
	f5 = f0*f0;
	f3 = f3+f5;
	f5 = f1*f1;
	f3 = f3+f5;
	heapFloat[(g0)] = f3;
	sqrtf(i7);
	f3 = f_g0;
	f4 = f4/f3;
	f1 = f1*f4;
	f0 = f0*f4;
	f2 = f2*f4;
	f4 = heapFloat[(r5+84)];
	f5 =                         0;
if(!(f4 ==f5)) //_LBB582_33
{
	r6 = heap32[(r3+5)];
	r6 = r6 >> 2;
	f4 = f3*f5;
	f6 = heapFloat[(r5+126)];
	f7 = heapFloat[(r6+65)];
	f8 = heapFloat[(r6+64)];
	f9 = heapFloat[(r6+69)];
	f10 = heapFloat[(r6+68)];
	f11 = heapFloat[(r6+73)];
	f12 = heapFloat[(r6+72)];
	f13 = heapFloat[(r6+66)];
	f14 = heapFloat[(r6+70)];
	f15 = heapFloat[(r6+74)];
	f6 = f6+f4;
	heapFloat[(r5+126)] = f6;
	f6 = heapFloat[(r5+127)];
	f6 = f6+f4;
	heapFloat[(r5+127)] = f6;
	f6 = heapFloat[(r5+128)];
	f4 = f6+f4;
	heapFloat[(r5+128)] = f4;
	f4 = f8*f2;
	f6 = f7*f0;
	f7 = heapFloat[(r5+134)];
	f4 = f4+f6;
	f6 = f13*f1;
	f4 = f4+f6;
	f6 = f7*f3;
	f7 = heapFloat[(r5+136)];
	f8 = heapFloat[(r5+135)];
	f13 = heapFloat[(r5+130)];
	f4 = f4*f6;
	f6 = f10*f2;
	f9 = f9*f0;
	f6 = f6+f9;
	f9 = f14*f1;
	f4 = f13+f4;
	heapFloat[(r5+130)] = f4;
	f4 = f6+f9;
	f6 = f8*f3;
	f8 = f12*f2;
	f9 = f11*f0;
	f4 = f4*f6;
	f6 = heapFloat[(r5+131)];
	f4 = f6+f4;
	f6 = f8+f9;
	f8 = f15*f1;
	heapFloat[(r5+131)] = f4;
	f4 = f6+f8;
	f6 = f7*f3;
	f4 = f4*f6;
	f6 = heapFloat[(r5+132)];
	f4 = f6+f4;
	heapFloat[(r5+132)] = f4;
}
	f4 = heapFloat[(r4+84)];
	if(f4 ==f5) //_LBB582_35
{
break _14;
}
else{
	f4 = -f3;
	r5 = heap32[(r3+6)];
	r5 = r5 >> 2;
	f5 =                        -0;
	f3 = f3*f5;
	f5 = heapFloat[(r4+126)];
	f6 = heapFloat[(r5+65)];
	f7 = heapFloat[(r5+64)];
	f8 = heapFloat[(r5+69)];
	f9 = heapFloat[(r5+68)];
	f10 = heapFloat[(r5+73)];
	f11 = heapFloat[(r5+72)];
	f12 = heapFloat[(r5+66)];
	f13 = heapFloat[(r5+70)];
	f14 = heapFloat[(r5+74)];
	f5 = f5+f3;
	heapFloat[(r4+126)] = f5;
	f5 = heapFloat[(r4+127)];
	f5 = f5+f3;
	heapFloat[(r4+127)] = f5;
	f5 = heapFloat[(r4+128)];
	f3 = f5+f3;
	heapFloat[(r4+128)] = f3;
	f3 = f7*f2;
	f5 = f6*f0;
	f3 = f3+f5;
	f5 = f12*f1;
	f6 = heapFloat[(r4+134)];
	f3 = f3+f5;
	f5 = f6*f4;
	f6 = heapFloat[(r4+136)];
	f7 = heapFloat[(r4+135)];
	f12 = heapFloat[(r4+130)];
	f3 = f3*f5;
	f5 = f9*f2;
	f8 = f8*f0;
	f5 = f5+f8;
	f8 = f13*f1;
	f3 = f12+f3;
	heapFloat[(r4+130)] = f3;
	f3 = f5+f8;
	f5 = f7*f4;
	f2 = f11*f2;
	f0 = f10*f0;
	f3 = f3*f5;
	f5 = heapFloat[(r4+131)];
	f3 = f5+f3;
	f0 = f2+f0;
	f1 = f14*f1;
	heapFloat[(r4+131)] = f3;
	f0 = f0+f1;
	f1 = f6*f4;
	f0 = f0*f1;
	f1 = heapFloat[(r4+132)];
	f0 = f1+f0;
	heapFloat[(r4+132)] = f0;
}
}
}
}
else{
	r4 = heap32[(r3+5)];
	r5 = sp + -112;
	r4 = r4 >> 2;
	r6 = r5 >> 2;
	heap32[(fp+-28)] = heap32[(r4+1)];
	heap32[(r6+1)] = heap32[(r4+2)];
	heap32[(r6+2)] = heap32[(r4+3)];
	heap32[(r6+3)] = heap32[(r4+4)];
	heap32[(r6+4)] = heap32[(r4+5)];
	heap32[(r6+5)] = heap32[(r4+6)];
	heap32[(r6+6)] = heap32[(r4+7)];
	heap32[(r6+7)] = heap32[(r4+8)];
	heap32[(r6+8)] = heap32[(r4+9)];
	heap32[(r6+9)] = heap32[(r4+10)];
	heap32[(r6+10)] = heap32[(r4+11)];
	heap32[(r6+11)] = heap32[(r4+12)];
	heap32[(r6+12)] = heap32[(r4+13)];
	heap32[(r6+13)] = heap32[(r4+14)];
	heap32[(r6+14)] = heap32[(r4+15)];
	heap32[(r6+15)] = heap32[(r4+16)];
	r4 = heap32[(r3+6)];
	r6 = sp + -176;
	r4 = r4 >> 2;
	r7 = r6 >> 2;
	heap32[(fp+-44)] = heap32[(r4+1)];
	heap32[(r7+1)] = heap32[(r4+2)];
	heap32[(r7+2)] = heap32[(r4+3)];
	heap32[(r7+3)] = heap32[(r4+4)];
	heap32[(r7+4)] = heap32[(r4+5)];
	heap32[(r7+5)] = heap32[(r4+6)];
	heap32[(r7+6)] = heap32[(r4+7)];
	heap32[(r7+7)] = heap32[(r4+8)];
	heap32[(r7+8)] = heap32[(r4+9)];
	heap32[(r7+9)] = heap32[(r4+10)];
	heap32[(r7+10)] = heap32[(r4+11)];
	heap32[(r7+11)] = heap32[(r4+12)];
	heap32[(r7+12)] = heap32[(r4+13)];
	heap32[(r7+13)] = heap32[(r4+14)];
	heap32[(r7+14)] = heap32[(r4+15)];
	r8 = r1 >> 2;
	heap32[(r7+15)] = heap32[(r4+16)];
	f0 = heapFloat[(r8+82)];
	f1 = heapFloat[(r8+132)];
	f2 = heapFloat[(r8+81)];
	f3 = heapFloat[(r8+131)];
	f4 = heapFloat[(r8+80)];
	f5 = heapFloat[(r8+130)];
	r4 = sp + -192;
	f4 = f4+f5;
	r7 = r4 >> 2;
	f2 = f2+f3;
	heapFloat[(fp+-48)] = f4;
	f0 = f0+f1;
	heapFloat[(r7+1)] = f2;
	heapFloat[(r7+2)] = f0;
	r9 = r2 >> 2;
	heap32[(r7+3)] = 0;
	f0 = heapFloat[(r9+82)];
	f1 = heapFloat[(r9+132)];
	f2 = heapFloat[(r9+81)];
	f3 = heapFloat[(r9+131)];
	f4 = heapFloat[(r9+80)];
	f5 = heapFloat[(r9+130)];
	r10 = sp + -208;
	f4 = f4+f5;
	f2 = f2+f3;
	heapFloat[(fp+-52)] = f4;
	r11 = r10 >> 2;
	f0 = f0+f1;
	heapFloat[(r11+1)] = f2;
	heapFloat[(r11+2)] = f0;
	r12 = sp + -272;
	heap32[(r11+3)] = 0;
	r13 = r12 >> 2;
	heap32[(fp+-68)] = 1065353216;
	heap32[(r13+1)] = 0;
	heap32[(r13+2)] = 0;
	heap32[(r13+3)] = 0;
	heap32[(r13+4)] = 0;
	heap32[(r13+5)] = 1065353216;
	heap32[(r13+6)] = 0;
	heap32[(r13+7)] = 0;
	heap32[(r13+8)] = 0;
	heap32[(r13+9)] = 0;
	heap32[(r13+10)] = 1065353216;
	heap32[(r13+11)] = 0;
	heap32[(r13+12)] = 0;
	heap32[(r13+13)] = 0;
	heap32[(r13+14)] = 0;
	heap32[(r13+15)] = 0;
	heap32[(g0)] = r5;
	heap32[(g0+1)] = 0;
	heap32[(g0+2)] = 0;
	heap32[(g0+3)] = 0;
	heap32[(g0+4)] = r4;
	f0 = heapFloat[(fp+-117)];
	heapFloat[(g0+5)] = f0;
	heap32[(g0+6)] = r12;
	r4 = sp + -336;
	_ZN15btTransformUtil18integrateTransformERK11btTransformRK9btVector3S5_fRS0_(i7);
	r12 = r4 >> 2;
	heap32[(fp+-84)] = 1065353216;
	heap32[(r12+1)] = 0;
	heap32[(r12+2)] = 0;
	heap32[(r12+3)] = 0;
	heap32[(r12+4)] = 0;
	heap32[(r12+5)] = 1065353216;
	heap32[(r12+6)] = 0;
	heap32[(r12+7)] = 0;
	heap32[(r12+8)] = 0;
	heap32[(r12+9)] = 0;
	heap32[(r12+10)] = 1065353216;
	heap32[(r12+11)] = 0;
	heap32[(r12+12)] = 0;
	heap32[(r12+13)] = 0;
	heap32[(r12+14)] = 0;
	heap32[(r12+15)] = 0;
	heap32[(g0)] = r6;
	heap32[(g0+1)] = 0;
	heap32[(g0+2)] = 0;
	heap32[(g0+3)] = 0;
	heap32[(g0+4)] = r10;
	heapFloat[(g0+5)] = f0;
	heap32[(g0+6)] = r4;
	_ZN15btTransformUtil18integrateTransformERK11btTransformRK9btVector3S5_fRS0_(i7);
	f1 = heapFloat[(r3+136)];
	f2 = heapFloat[(r3+137)];
	f3 = heapFloat[(r3+138)];
	f4 = f1*f1;
	f5 = f2*f2;
	f6 = heapFloat[(r3+139)];
	f4 = f4+f5;
	f5 = f3*f3;
	f4 = f4+f5;
	f5 = f6*f6;
	f7 =                         2;
	f4 = f4+f5;
	f4 = f7/f4;
	f5 = f3*f4;
	f7 = f2*f4;
	f4 = f1*f4;
	f3 = f3*f5;
	f8 = f1*f4;
	f9 = f2*f7;
	f0 =                         1;
	heapFloat[(fp+-118)] = f0;
	f10 = f9+f3;
	f3 = f8+f3;
	f11 = f1*f7;
	f12 = f6*f5;
	f10 = f0-f10;
	f0 = heapFloat[(r3+92)];
	heapFloat[(fp+-131)] = f0;
	f13 = f11-f12;
	f0 = heapFloat[(r3+88)];
	heapFloat[(fp+-120)] = f0;
	f11 = f11+f12;
	f12 = heapFloat[(r3+93)];
	heapFloat[(fp+-132)] = f12;
	f0 = heapFloat[(fp+-118)];
	f3 = f0-f3;
	f0 = heapFloat[(r3+89)];
	heapFloat[(fp+-121)] = f0;
	f1 = f1*f5;
	f7 = f6*f7;
	f2 = f2*f5;
	f4 = f6*f4;
	f5 = f1+f7;
	f6 = heapFloat[(r3+96)];
	heapFloat[(fp+-129)] = f6;
	f12 = f2-f4;
	f14 = heapFloat[(r3+97)];
	heapFloat[(fp+-136)] = f14;
	f8 = f8+f9;
	f0 = heapFloat[(fp+-120)];
	f9 = f10*f0;
	f0 = heapFloat[(fp+-121)];
	f15 = f11*f0;
	f0 = heapFloat[(fp+-120)];
	f16 = f13*f0;
	f0 = heapFloat[(fp+-121)];
	f17 = f3*f0;
	f0 = heapFloat[(fp+-131)];
	f18 = f10*f0;
	f19 = heapFloat[(fp+-132)];
	f20 = f11*f19;
	f21 = f13*f0;
	f22 = f3*f19;
	f1 = f1-f7;
	f7 = heapFloat[(r3+94)];
	heapFloat[(fp+-137)] = f7;
	f2 = f2+f4;
	f0 = heapFloat[(r3+90)];
	heapFloat[(fp+-133)] = f0;
	f0 = heapFloat[(fp+-118)];
	f4 = f0-f8;
	f6 = heapFloat[(r3+98)];
	heapFloat[(fp+-130)] = f6;
	f7 = f9+f15;
	f0 = heapFloat[(fp+-133)];
	f8 = f1*f0;
	f9 = f16+f17;
	f14 = f2*f0;
	f0 = heapFloat[(fp+-120)];
	f15 = f5*f0;
	f0 = heapFloat[(fp+-121)];
	f16 = f12*f0;
	f17 = f18+f20;
	f18 = heapFloat[(fp+-137)];
	f19 = f1*f18;
	f20 = f21+f22;
	f21 = f2*f18;
	f0 = heapFloat[(fp+-131)];
	f22 = f5*f0;
	f23 = heapFloat[(fp+-132)];
	f24 = f12*f23;
	f6 = heapFloat[(fp+-129)];
	f10 = f10*f6;
	f25 = heapFloat[(fp+-136)];
	f11 = f11*f25;
	f13 = f13*f6;
	f3 = f3*f25;
	f0 = f7+f8;
	heapFloat[(fp+-124)] = f0;
	f6 = heapFloat[(r3+72)];
	f7 = f17+f19;
	heapFloat[(fp+-134)] = f7;
	f0 = f9+f14;
	heapFloat[(fp+-125)] = f0;
	f7 = heapFloat[(r3+73)];
	f8 = f20+f21;
	heapFloat[(fp+-139)] = f8;
	f9 = f15+f16;
	f0 = heapFloat[(fp+-133)];
	f14 = f4*f0;
	f15 = f22+f24;
	f16 = f4*f18;
	f10 = f10+f11;
	f11 = heapFloat[(fp+-130)];
	f1 = f1*f11;
	f3 = f13+f3;
	f2 = f2*f11;
	f13 = heapFloat[(fp+-129)];
	f5 = f5*f13;
	f12 = f12*f25;
	f17 = heapFloat[(r3+76)];
	f1 = f10+f1;
	heapFloat[(fp+-138)] = f1;
	f10 = heapFloat[(r3+77)];
	f2 = f3+f2;
	heapFloat[(fp+-123)] = f2;
	f0 = heapFloat[(fp+-124)];
	f3 = f6*f0;
	f0 = heapFloat[(fp+-125)];
	f19 = f7*f0;
	f0 = f9+f14;
	heapFloat[(fp+-126)] = f0;
	f1 = heapFloat[(r3+74)];
	f0 = f15+f16;
	heapFloat[(fp+-127)] = f0;
	f2 = heapFloat[(fp+-134)];
	f8 = f6*f2;
	f9 = heapFloat[(fp+-139)];
	f11 = f7*f9;
	f5 = f5+f12;
	f12 = heapFloat[(fp+-130)];
	f4 = f4*f12;
	f13 = heapFloat[(r3+80)];
	f14 = heapFloat[(r3+81)];
	f15 = heapFloat[(r3+78)];
	f4 = f5+f4;
	heapFloat[(fp+-122)] = f4;
	f0 = heapFloat[(fp+-124)];
	f5 = f17*f0;
	f0 = heapFloat[(fp+-125)];
	f16 = f10*f0;
	f18 = f17*f2;
	f20 = f10*f9;
	f3 = f3+f19;
	f0 = heapFloat[(fp+-126)];
	f19 = f1*f0;
	f8 = f8+f11;
	f0 = heapFloat[(fp+-127)];
	f11 = f1*f0;
	f21 = heapFloat[(fp+-138)];
	f22 = f6*f21;
	f2 = heapFloat[(fp+-123)];
	f23 = f7*f2;
	f24 = heapFloat[(r3+82)];
	f0 = heapFloat[(fp+-124)];
	f25 = f13*f0;
	f0 = heapFloat[(fp+-125)];
	f26 = f14*f0;
	f2 = heapFloat[(fp+-134)];
	f27 = f13*f2;
	f28 = f14*f9;
	f5 = f5+f16;
	f0 = heapFloat[(fp+-126)];
	f16 = f15*f0;
	f18 = f18+f20;
	f0 = heapFloat[(fp+-127)];
	f20 = f15*f0;
	f29 = f17*f21;
	f2 = heapFloat[(fp+-123)];
	f30 = f10*f2;
	f3 = f3+f19;
	f19 = heapFloat[(fp+-84)];
	heapFloat[(fp+-140)] = f19;
	f0 = f8+f11;
	heapFloat[(fp+-135)] = f0;
	f2 = heapFloat[(r12+1)];
	heapFloat[(fp+-128)] = f2;
	f4 = f22+f23;
	f8 = heapFloat[(fp+-122)];
	f9 = f1*f8;
	f5 = f5+f16;
	f0 = f18+f20;
	heapFloat[(fp+-119)] = f0;
	f2 = f25+f26;
	f0 = heapFloat[(fp+-126)];
	f8 = f24*f0;
	f11 = f27+f28;
	f0 = heapFloat[(fp+-127)];
	f12 = f24*f0;
	f16 = f13*f21;
	f18 = heapFloat[(fp+-123)];
	f19 = f14*f18;
	f20 = f29+f30;
	f22 = heapFloat[(fp+-122)];
	f23 = f15*f22;
	f25 = heapFloat[(fp+-140)];
	f26 = f3*f25;
	f0 = heapFloat[(fp+-135)];
	f27 = heapFloat[(fp+-128)];
	f28 = f0*f27;
	f4 = f4+f9;
	f9 = heapFloat[(r12+2)];
	f29 = heapFloat[(r3+86)];
	f30 = heapFloat[(r3+85)];
	f0 = heapFloat[(r12+8)];
	heapFloat[(fp+-141)] = f0;
	f2 = f2+f8;
	f8 = heapFloat[(r12+4)];
	f0 = heapFloat[(r12+9)];
	f11 = f11+f12;
	f12 = heapFloat[(r12+5)];
	f20 = f20+f23;
	f18 = heapFloat[(r12+10)];
	heapFloat[(fp+-148)] = f18;
	f21 = heapFloat[(r12+6)];
	f22 = heapFloat[(r3+84)];
	f16 = f16+f19;
	f19 = heapFloat[(fp+-122)];
	f23 = f24*f19;
	f27 = f5*f25;
	f19 = heapFloat[(fp+-119)];
	f18 = heapFloat[(fp+-128)];
	f18 = f19*f18;
	f26 = f26+f28;
	f28 = f4*f9;
	f19 = heapFloat[(r3+102)];
	heapFloat[(fp+-142)] = f19;
	f19 = heapFloat[(r3+101)];
	heapFloat[(fp+-143)] = f19;
	f19 = heapFloat[(r3+100)];
	heapFloat[(fp+-145)] = f19;
	f19 = heapFloat[(r12+14)];
	heapFloat[(fp+-144)] = f19;
	f19 = heapFloat[(r12+13)];
	heapFloat[(fp+-146)] = f19;
	f19 = heapFloat[(r12+12)];
	heapFloat[(fp+-147)] = f19;
	f16 = f16+f23;
	r4 = sp + -400;
	f23 = f2*f25;
	f19 = heapFloat[(fp+-128)];
	f19 = f11*f19;
	f18 = f27+f18;
	f27 = f20*f9;
	f26 = f26+f28;
	f22 = -f22;
	r10 = r4 >> 2;
	f19 = f23+f19;
	f23 = f16*f9;
	f18 = f18+f27;
	heapFloat[(fp+-100)] = f26;
	f6 = f6*f22;
	f17 = f17*f30;
	f7 = f7*f22;
	f10 = f10*f30;
	f26 = f3*f8;
	f27 = heapFloat[(fp+-135)];
	f28 = f27*f12;
	f19 = f19+f23;
	heapFloat[(r10+1)] = f18;
	f18 =                         0;
	heapFloat[(r10+2)] = f19;
	f6 = f6-f17;
	f13 = f13*f29;
	f7 = f7-f10;
	f10 = f14*f29;
	f1 = f1*f22;
	f14 = f15*f30;
	f15 = f5*f8;
	f19 = heapFloat[(fp+-119)];
	f17 = f19*f12;
	f22 = f26+f28;
	f23 = f4*f21;
	f6 = f6-f13;
	f7 = f7-f10;
	f10 = heapFloat[(fp+-120)];
	f10 = f10*f18;
	f13 = heapFloat[(fp+-121)];
	f13 = f13*f18;
	f26 = heapFloat[(fp+-131)];
	f26 = f26*f18;
	f28 = heapFloat[(fp+-132)];
	f28 = f28*f18;
	f1 = f1-f14;
	f14 = f24*f29;
	f24 = f2*f8;
	f29 = f11*f12;
	f15 = f15+f17;
	f17 = f20*f21;
	f22 = f22+f23;
	heap32[(r10+3)] = 0;
	f1 = f1-f14;
	f14 = heapFloat[(fp+-124)];
	f14 = f14*f6;
	f23 = heapFloat[(fp+-125)];
	f23 = f23*f7;
	f10 = f10+f13;
	f13 = heapFloat[(fp+-133)];
	f13 = f13*f18;
	f30 = heapFloat[(fp+-134)];
	f30 = f30*f6;
	f19 = heapFloat[(fp+-139)];
	f19 = f19*f7;
	f26 = f26+f28;
	f28 = heapFloat[(fp+-137)];
	f28 = f28*f18;
	f25 = heapFloat[(fp+-129)];
	f25 = f25*f18;
	f27 = heapFloat[(fp+-136)];
	f27 = f27*f18;
	f24 = f24+f29;
	f29 = f16*f21;
	f15 = f15+f17;
	heapFloat[(r10+4)] = f22;
	f10 = f10+f13;
	f13 = f26+f28;
	f14 = f14+f23;
	f17 = heapFloat[(fp+-126)];
	f17 = f17*f1;
	f19 = f30+f19;
	f22 = heapFloat[(fp+-127)];
	f22 = f22*f1;
	f23 = heapFloat[(fp+-138)];
	f6 = f23*f6;
	f23 = heapFloat[(fp+-123)];
	f7 = f23*f7;
	f23 = f25+f27;
	f25 = heapFloat[(fp+-130)];
	f25 = f25*f18;
	f26 = heapFloat[(fp+-141)];
	f27 = f3*f26;
	f28 = heapFloat[(fp+-135)];
	f30 = f28*f0;
	f24 = f24+f29;
	heapFloat[(r10+5)] = f15;
	f15 = f23+f25;
	heapFloat[(r10+6)] = f24;
	f14 = f14+f17;
	f17 = heapFloat[(fp+-145)];
	f10 = f10+f17;
	f17 = f19+f22;
	f19 = heapFloat[(fp+-143)];
	f13 = f13+f19;
	f6 = f6+f7;
	f19 = heapFloat[(fp+-122)];
	f1 = f19*f1;
	f7 = f5*f26;
	f19 = heapFloat[(fp+-119)];
	f22 = f19*f0;
	f23 = f27+f30;
	f24 = heapFloat[(fp+-148)];
	f25 = f4*f24;
	f13 = f17+f13;
	f10 = f14+f10;
	f1 = f6+f1;
	f19 = heapFloat[(fp+-142)];
	f6 = f15+f19;
	f14 = f2*f26;
	f15 = f11*f0;
	f7 = f7+f22;
	f17 = f20*f24;
	f19 = f23+f25;
	heap32[(r10+7)] = 0;
	f1 = f1+f6;
	f25 = heapFloat[(fp+-140)];
	f6 = f25*f10;
	f22 = heapFloat[(fp+-128)];
	f22 = f22*f13;
	f14 = f14+f15;
	f15 = f16*f24;
	f7 = f7+f17;
	heapFloat[(r10+8)] = f19;
	f8 = f8*f10;
	f12 = f12*f13;
	f6 = f6+f22;
	f9 = f9*f1;
	f14 = f14+f15;
	heapFloat[(r10+9)] = f7;
	f6 = f6+f9;
	heapFloat[(r10+10)] = f14;
	f7 = f26*f10;
	f0 = f0*f13;
	f8 = f8+f12;
	f9 = f21*f1;
	f8 = f8+f9;
	f0 = f7+f0;
	f7 = f24*f1;
	f19 = heapFloat[(fp+-147)];
	f6 = f6+f19;
	heap32[(r10+11)] = 0;
	f0 = f0+f7;
	f19 = heapFloat[(fp+-146)];
	f7 = f8+f19;
	heapFloat[(r10+12)] = f6;
	f19 = heapFloat[(fp+-144)];
	f0 = f0+f19;
	heapFloat[(r10+13)] = f7;
	heapFloat[(r10+14)] = f0;
	heap32[(r10+15)] = 0;
	f0 = heapFloat[(fp+-68)];
	f6 = heapFloat[(r13+1)];
	f7 = heapFloat[(r13+2)];
	f8 = f3*f0;
	f9 = f5*f6;
	f12 = heapFloat[(r13+8)];
	f14 = heapFloat[(r13+9)];
	f15 = heapFloat[(r13+10)];
	f17 = heapFloat[(r13+4)];
	f19 = heapFloat[(r13+5)];
	f21 = heapFloat[(r13+6)];
	f22 = f28*f0;
	f23 = heapFloat[(fp+-119)];
	f24 = f23*f6;
	f8 = f8+f9;
	f9 = f2*f7;
	f25 = heapFloat[(r13+14)];
	f26 = heapFloat[(r13+13)];
	f27 = heapFloat[(r13+12)];
	r10 = sp + -464;
	f29 = f4*f0;
	f30 = f20*f6;
	f22 = f22+f24;
	f24 = f11*f7;
	f8 = f8+f9;
	r12 = r10 >> 2;
	f9 = f29+f30;
	f29 = f16*f7;
	f22 = f22+f24;
	heapFloat[(fp+-116)] = f8;
	f8 = f3*f17;
	f24 = f5*f19;
	f9 = f9+f29;
	heapFloat[(r12+1)] = f22;
	heapFloat[(r12+2)] = f9;
	f9 = f28*f17;
	f22 = f23*f19;
	f8 = f8+f24;
	f24 = f2*f21;
	f29 = f4*f17;
	f30 = f20*f19;
	f9 = f9+f22;
	f22 = f11*f21;
	f8 = f8+f24;
	heap32[(r12+3)] = 0;
	f10 = -f10;
	f24 = f29+f30;
	f29 = f16*f21;
	f9 = f9+f22;
	heapFloat[(r12+4)] = f8;
	f8 = f3*f10;
	f22 = f28*f13;
	f30 = f5*f10;
	f23 = f23*f13;
	f3 = f3*f12;
	f5 = f5*f14;
	f24 = f24+f29;
	heapFloat[(r12+5)] = f9;
	heapFloat[(r12+6)] = f24;
	f8 = f8-f22;
	f9 = f4*f1;
	f22 = f30-f23;
	f23 = f20*f1;
	f10 = f2*f10;
	f13 = f11*f13;
	f24 = f28*f12;
	f28 = heapFloat[(fp+-119)];
	f28 = f28*f14;
	f3 = f3+f5;
	f2 = f2*f15;
	f5 = f8-f9;
	f8 = f22-f23;
	f9 = f10-f13;
	f1 = f16*f1;
	f4 = f4*f12;
	f10 = f20*f14;
	f13 = f24+f28;
	f11 = f11*f15;
	f2 = f3+f2;
	heap32[(r12+7)] = 0;
	f1 = f9-f1;
	f0 = f0*f5;
	f3 = f6*f8;
	f4 = f4+f10;
	f6 = f16*f15;
	f9 = f13+f11;
	heapFloat[(r12+8)] = f2;
	f2 = f17*f5;
	f10 = f19*f8;
	f0 = f0+f3;
	f3 = f7*f1;
	f4 = f4+f6;
	heapFloat[(r12+9)] = f9;
	f0 = f0+f3;
	heapFloat[(r12+10)] = f4;
	f3 = f12*f5;
	f4 = f14*f8;
	f2 = f2+f10;
	f5 = f21*f1;
	f2 = f2+f5;
	f3 = f3+f4;
	f1 = f15*f1;
	f0 = f0+f27;
	heap32[(r12+11)] = 0;
	f1 = f3+f1;
	f2 = f2+f26;
	heapFloat[(r12+12)] = f0;
	f0 = f1+f25;
	heapFloat[(r12+13)] = f2;
	heapFloat[(r12+14)] = f0;
	heap32[(r12+15)] = 0;
	r12 = sp + -16;
	r13 = sp + -20;
	heap32[(g0)] = r5;
	heap32[(g0+1)] = r4;
	heap32[(g0+2)] = r12;
	heap32[(g0+3)] = r13;
	_ZN15btTransformUtil22calculateDiffAxisAngleERK11btTransformS2_R9btVector3Rf(i7);
	r4 = r12 >> 2;
	f0 = heapFloat[(r4+2)];
	f1 = heapFloat[(fp+-5)];
	f2 = heapFloat[(r4+1)];
	f3 = heapFloat[(fp+-4)];
	r4 = sp + -40;
	r5 = sp + -44;
	heap32[(g0)] = r6;
	heap32[(g0+1)] = r10;
	heap32[(g0+2)] = r4;
	heap32[(g0+3)] = r5;
	_ZN15btTransformUtil22calculateDiffAxisAngleERK11btTransformS2_R9btVector3Rf(i7);
	f2 = f2*f1;
	f5 = heapFloat[(fp+-118)];
	f4 = heapFloat[(fp+-117)];
	f4 = f5/f4;
	f3 = f3*f1;
	r4 = r4 >> 2;
	f0 = f0*f1;
	f1 = f2*f4;
	f2 = heapFloat[(r7+1)];
	f3 = f3*f4;
	f5 = heapFloat[(fp+-48)];
	f1 = f1-f2;
	f2 = f3-f5;
	f0 = f0*f4;
	f3 = heapFloat[(r7+2)];
	f5 = heapFloat[(r4+2)];
	f6 = heapFloat[(fp+-11)];
	f7 = heapFloat[(r4+1)];
	f8 = heapFloat[(fp+-10)];
	f0 = f0-f3;
	f3 = f5*f6;
	f5 = f7*f6;
	f6 = f8*f6;
	f7 = f2*f2;
	f8 = f1*f1;
	f7 = f7+f8;
	f8 = f0*f0;
	f3 = f3*f4;
	f9 = heapFloat[(r11+2)];
	f5 = f5*f4;
	f10 = heapFloat[(r11+1)];
	f4 = f6*f4;
	f6 = heapFloat[(fp+-52)];
	f7 = f7+f8;
	f3 = f3-f9;
	f5 = f5-f10;
	f4 = f4-f6;
	f6 =   1.1920928955078125e-007;
	if(f7 >f6) //_LBB582_11
{
	heapFloat[(g0)] = f7;
	sqrtf(i7);
	r4 = heap32[(r3+5)];
	r4 = r4 >> 2;
	f7 = heapFloat[(fp+-118)];
	f18 = f7/f_g0;
	f7 = f2*f18;
	f8 = heapFloat[(r4+64)];
	f9 = heapFloat[(r4+65)];
	f10 = f1*f18;
	f11 = heapFloat[(r4+68)];
	f12 = heapFloat[(r4+69)];
	f13 = f0*f18;
	f18 = heapFloat[(r4+72)];
	f14 = heapFloat[(r4+73)];
	f15 = heapFloat[(r4+66)];
	f16 = heapFloat[(r4+70)];
	f8 = f8*f7;
	f11 = f11*f10;
	f9 = f9*f7;
	f12 = f12*f10;
	f17 = heapFloat[(r4+74)];
	f8 = f8+f11;
	f18 = f18*f13;
	f9 = f9+f12;
	f11 = f14*f13;
	f12 = f15*f7;
	f14 = f16*f10;
	f18 = f8+f18;
	f8 = f9+f11;
	f9 = f12+f14;
	f11 = f17*f13;
	f9 = f9+f11;
	f18 = f7*f18;
	f8 = f10*f8;
	f18 = f18+f8;
	f8 = f13*f9;
	f18 = f18+f8;
}
	f8 = f4*f4;
	f9 = f5*f5;
	f8 = f8+f9;
	f9 = f3*f3;
	f8 = f8+f9;
	if(f8 >f6) //_LBB582_14
{
	heapFloat[(g0)] = f8;
	sqrtf(i7);
	r4 = heap32[(r3+6)];
	r4 = r4 >> 2;
	f9 = heapFloat[(fp+-118)];
	f8 = f9/f_g0;
	f9 = f4*f8;
	f11 = heapFloat[(r4+64)];
	f12 = heapFloat[(r4+65)];
	f14 = f5*f8;
	f15 = heapFloat[(r4+68)];
	f16 = heapFloat[(r4+69)];
	f17 = f3*f8;
	f8 = heapFloat[(r4+72)];
	f19 = heapFloat[(r4+73)];
	f20 = heapFloat[(r4+66)];
	f21 = heapFloat[(r4+70)];
	f11 = f11*f9;
	f15 = f15*f14;
	f12 = f12*f9;
	f16 = f16*f14;
	f22 = heapFloat[(r4+74)];
	f11 = f11+f15;
	f8 = f8*f17;
	f12 = f12+f16;
	f15 = f19*f17;
	f16 = f20*f9;
	f19 = f21*f14;
	f8 = f11+f8;
	f11 = f12+f15;
	f12 = f16+f19;
	f15 = f22*f17;
	f12 = f12+f15;
	f8 = f9*f8;
	f11 = f14*f11;
	f8 = f8+f11;
	f11 = f17*f12;
	f8 = f8+f11;
}
else{
	f8 =                         0;
}
	f10 = f10*f18;
	f11 = f14*f8;
	f7 = f7*f18;
	f9 = f9*f8;
	f10 = f10+f11;
	f7 = f7+f9;
	f9 = f13*f18;
	f8 = f17*f8;
	f8 = f9+f8;
	f9 = f7*f7;
	f11 = f10*f10;
	f9 = f9+f11;
	f11 = f8*f8;
	f9 = f9+f11;
if(!(f9 <=f6)) //_LBB582_35
{
	heapFloat[(g0)] = f9;
	sqrtf(i7);
	r4 = heap32[(r3+5)];
	r5 = heap32[(r3+6)];
	r4 = r4 >> 2;
	r5 = r5 >> 2;
	f9 = heapFloat[(fp+-118)];
	f6 = f9/f_g0;
	f11 = heapFloat[(r4+64)];
	f7 = f7*f6;
	f12 = heapFloat[(r4+65)];
	f13 = heapFloat[(r5+64)];
	f14 = heapFloat[(r5+65)];
	f15 = heapFloat[(r4+68)];
	f10 = f10*f6;
	f16 = heapFloat[(r4+69)];
	f17 = heapFloat[(r5+68)];
	f18 = heapFloat[(r5+69)];
	f19 = heapFloat[(r4+66)];
	f20 = heapFloat[(r4+70)];
	f21 = heapFloat[(r5+66)];
	f22 = heapFloat[(r5+70)];
	f11 = f11*f7;
	f15 = f15*f10;
	f23 = heapFloat[(r4+72)];
	f6 = f8*f6;
	f8 = heapFloat[(r4+73)];
	f24 = heapFloat[(r5+72)];
	f25 = heapFloat[(r5+73)];
	f12 = f12*f7;
	f16 = f16*f10;
	f13 = f13*f7;
	f17 = f17*f10;
	f14 = f14*f7;
	f18 = f18*f10;
	f26 = heapFloat[(r4+74)];
	f27 = heapFloat[(r5+74)];
	f11 = f11+f15;
	f15 = f23*f6;
	f12 = f12+f16;
	f8 = f8*f6;
	f16 = f19*f7;
	f19 = f20*f10;
	f13 = f13+f17;
	f17 = f24*f6;
	f14 = f14+f18;
	f18 = f25*f6;
	f20 = f21*f7;
	f21 = f22*f10;
	f11 = f11+f15;
	f8 = f12+f8;
	f12 = f13+f17;
	f13 = f14+f18;
	f14 = f16+f19;
	f15 = f26*f6;
	f16 = f20+f21;
	f17 = f27*f6;
	f14 = f14+f15;
	f15 = f16+f17;
	f11 = f7*f11;
	f8 = f10*f8;
	f7 = f7*f12;
	f10 = f10*f13;
	f8 = f11+f8;
	f11 = f6*f14;
	f7 = f7+f10;
	f6 = f6*f15;
	f8 = f8+f11;
	f6 = f7+f6;
	f7 = f8+f6;
	f7 = f7*f7;
	f0 = f0*f8;
	f3 = f3*f6;
	f1 = f1*f8;
	f5 = f5*f6;
	f2 = f2*f8;
	f4 = f4*f6;
	f0 = f0-f3;
	f3 = f9/f7;
	f1 = f1-f5;
	f2 = f2-f4;
	f4 = heapFloat[(r3+140)];
	f0 = f0*f3;
	f1 = f1*f3;
	f2 = f2*f3;
	f3 =                         0;
	if(f4 >=f3) //_LBB582_18
{
	r4 = heapU8[r0+541];
	if(r4 !=0) //_LBB582_20
{
	f4 = f4/f8;
}
	f5 = heapFloat[(r3+141)];
	f6 = heapFloat[(r3+142)];
	f5 = f5+f2;
	f6 = f6+f1;
	f7 = heapFloat[(r3+143)];
	f7 = f7+f0;
	f8 = f5*f5;
	f9 = f6*f6;
	f8 = f8+f9;
	f9 = f7*f7;
	f8 = f8+f9;
	heapFloat[(g0)] = f8;
	sqrtf(i7);
	f9 = f_g0;
	if(f9 >f4) //_LBB582_23
{
	heapFloat[(g0)] = f8;
	sqrtf(i7);
	f1 = heapFloat[(fp+-118)];
	f0 = f1/f_g0;
	f1 = f7*f0;
	f2 = f6*f0;
	f0 = f5*f0;
	f7 = heapFloat[(r3+143)];
	f1 = f1*f4;
	f6 = heapFloat[(r3+142)];
	f2 = f2*f4;
	f5 = heapFloat[(r3+141)];
	f4 = f0*f4;
	f0 = f1-f7;
	f1 = f2-f6;
	f2 = f4-f5;
}
else{
	f5 = heapFloat[(r3+141)];
	f6 = heapFloat[(r3+142)];
	f7 = heapFloat[(r3+143)];
}
	f4 = f5+f2;
	f5 = f6+f1;
	heapFloat[(r3+141)] = f4;
	f4 = f7+f0;
	heapFloat[(r3+142)] = f5;
	heapFloat[(r3+143)] = f4;
}
	f4 = f2*f2;
	f5 = f1*f1;
	f4 = f4+f5;
	f5 = f0*f0;
	f4 = f4+f5;
	heapFloat[(g0)] = f4;
	sqrtf(i7);
	f4 = f_g0;
	f5 = heapFloat[(fp+-118)];
	f5 = f5/f4;
	f0 = f0*f5;
	f1 = f1*f5;
	f2 = f2*f5;
	f5 = heapFloat[(r8+84)];
if(!(f5 ==f3)) //_LBB582_27
{
	r4 = heap32[(r3+5)];
	r4 = r4 >> 2;
	f5 = f4*f3;
	f6 = heapFloat[(r8+126)];
	f7 = heapFloat[(r4+65)];
	f8 = heapFloat[(r4+64)];
	f9 = heapFloat[(r4+69)];
	f10 = heapFloat[(r4+68)];
	f11 = heapFloat[(r4+73)];
	f12 = heapFloat[(r4+72)];
	f13 = heapFloat[(r4+66)];
	f14 = heapFloat[(r4+70)];
	f15 = heapFloat[(r4+74)];
	f6 = f6+f5;
	heapFloat[(r8+126)] = f6;
	f6 = heapFloat[(r8+127)];
	f6 = f6+f5;
	heapFloat[(r8+127)] = f6;
	f6 = heapFloat[(r8+128)];
	f5 = f6+f5;
	heapFloat[(r8+128)] = f5;
	f5 = f8*f2;
	f6 = f7*f1;
	f7 = heapFloat[(r8+134)];
	f5 = f5+f6;
	f6 = f13*f0;
	f5 = f5+f6;
	f6 = f7*f4;
	f7 = heapFloat[(r8+136)];
	f8 = heapFloat[(r8+135)];
	f13 = heapFloat[(r8+130)];
	f5 = f5*f6;
	f6 = f10*f2;
	f9 = f9*f1;
	f6 = f6+f9;
	f9 = f14*f0;
	f5 = f13+f5;
	heapFloat[(r8+130)] = f5;
	f5 = f6+f9;
	f6 = f8*f4;
	f8 = f12*f2;
	f9 = f11*f1;
	f5 = f5*f6;
	f6 = heapFloat[(r8+131)];
	f5 = f6+f5;
	f6 = f8+f9;
	f8 = f15*f0;
	heapFloat[(r8+131)] = f5;
	f5 = f6+f8;
	f6 = f7*f4;
	f5 = f5*f6;
	f6 = heapFloat[(r8+132)];
	f5 = f6+f5;
	heapFloat[(r8+132)] = f5;
}
	f5 = heapFloat[(r9+84)];
if(!(f5 ==f3)) //_LBB582_35
{
	f3 = -f4;
	r4 = heap32[(r3+6)];
	r4 = r4 >> 2;
	f5 =                        -0;
	f4 = f4*f5;
	f5 = heapFloat[(r9+126)];
	f6 = heapFloat[(r4+65)];
	f7 = heapFloat[(r4+64)];
	f8 = heapFloat[(r4+69)];
	f9 = heapFloat[(r4+68)];
	f10 = heapFloat[(r4+73)];
	f11 = heapFloat[(r4+72)];
	f12 = heapFloat[(r4+66)];
	f13 = heapFloat[(r4+70)];
	f14 = heapFloat[(r4+74)];
	f5 = f5+f4;
	heapFloat[(r9+126)] = f5;
	f5 = heapFloat[(r9+127)];
	f5 = f5+f4;
	heapFloat[(r9+127)] = f5;
	f5 = heapFloat[(r9+128)];
	f4 = f5+f4;
	heapFloat[(r9+128)] = f4;
	f4 = f7*f2;
	f5 = f6*f1;
	f4 = f4+f5;
	f5 = f12*f0;
	f6 = heapFloat[(r9+134)];
	f4 = f4+f5;
	f5 = f6*f3;
	f6 = heapFloat[(r9+136)];
	f7 = heapFloat[(r9+135)];
	f12 = heapFloat[(r9+130)];
	f4 = f4*f5;
	f5 = f9*f2;
	f8 = f8*f1;
	f5 = f5+f8;
	f8 = f13*f0;
	f4 = f12+f4;
	heapFloat[(r9+130)] = f4;
	f4 = f5+f8;
	f5 = f7*f3;
	f2 = f11*f2;
	f1 = f10*f1;
	f4 = f4*f5;
	f5 = heapFloat[(r9+131)];
	f4 = f5+f4;
	f1 = f2+f1;
	f0 = f14*f0;
	heapFloat[(r9+131)] = f4;
	f0 = f1+f0;
	f1 = f6*f3;
	f0 = f0*f1;
	f1 = heapFloat[(r9+132)];
	f0 = f1+f0;
	heapFloat[(r9+132)] = f0;
}
}
}
} while(0);
	r1 = r1 >> 2;
	r2 = r2 >> 2;
	f0 = heapFloat[(r1+82)];
	f1 = heapFloat[(r1+132)];
	f2 = heapFloat[(r1+81)];
	f3 = heapFloat[(r1+131)];
	f4 = heapFloat[(r1+80)];
	f5 = heapFloat[(r1+130)];
	f6 = heapFloat[(r2+82)];
	f7 = heapFloat[(r2+132)];
	f8 = heapFloat[(r2+81)];
	f9 = heapFloat[(r2+131)];
	f10 = heapFloat[(r2+80)];
	f11 = heapFloat[(r2+130)];
	f0 = f0+f1;
	f1 = f2+f3;
	f2 = f4+f5;
	f3 = f6+f7;
	f4 = f8+f9;
	f5 = f10+f11;
	r4 = heapU8[r0+514];
if(!(r4 ==0)) //_LBB582_43
{
	f6 = heapFloat[(r3+129)];
	f7 = heapFloat[(r3+123)];
	f8 = heapFloat[(r3+112)];
	f9 = f5-f2;
	f10 = heapFloat[(r3+113)];
	f11 = f4-f1;
	f12 = heapFloat[(r3+114)];
	f13 = f3-f0;
	f9 = f9*f8;
	f11 = f11*f10;
	f7 = f6*f7;
	f14 = heapFloat[(r3+105)];
	f9 = f9+f11;
	f11 = f13*f12;
	f7 = f7*f14;
	f9 = f9+f11;
	f11 = heapFloat[(fp+-117)];
	f7 = f7/f11;
	f11 =                         0;
	if(f9 >f11) //_LBB582_38
{
	f6 = f6*f9;
	f9 = heapFloat[(r3+106)];
	f6 = f6*f9;
	f7 = f6+f7;
}
	f6 = heapFloat[(r3+120)];
	f9 = heapFloat[(r3+126)];
	f6 = f6*f7;
	f6 = f9+f6;
	f6 = f6 > f11 ? f6 : f11;
	heapFloat[(r3+126)] = f6;
	f6 = f6-f9;
	f7 = f8*f6;
	f8 = heapFloat[(r3+131)];
	f9 = f10*f6;
	f10 = heapFloat[(r3+132)];
	f13 = heapFloat[(r3+133)];
	f6 = f12*f6;
	f12 = f7*f8;
	f14 = f9*f10;
	f12 = f12+f14;
	f14 = f6*f13;
	f12 = f12+f14;
	f10 = f10*f12;
	f8 = f8*f12;
	f12 = f13*f12;
	f9 = f9-f10;
	f7 = f7-f8;
	f6 = f6-f12;
	f8 = f7*f7;
	f10 = f9*f9;
	f8 = f8+f10;
	f10 = f6*f6;
	f8 = f8+f10;
	heapFloat[(g0)] = f8;
	sqrtf(i7);
	f8 = f_g0;
	f10 =                         1;
	f10 = f10/f8;
	f6 = f6*f10;
	f9 = f9*f10;
	f7 = f7*f10;
	f10 = heapFloat[(r1+84)];
if(!(f10 ==f11)) //_LBB582_41
{
	r4 = heap32[(r3+5)];
	r4 = r4 >> 2;
	f10 = f8*f11;
	f12 = heapFloat[(r1+126)];
	f13 = heapFloat[(r4+65)];
	f14 = heapFloat[(r4+64)];
	f15 = heapFloat[(r4+69)];
	f16 = heapFloat[(r4+68)];
	f17 = heapFloat[(r4+73)];
	f18 = heapFloat[(r4+72)];
	f19 = heapFloat[(r4+66)];
	f20 = heapFloat[(r4+70)];
	f21 = heapFloat[(r4+74)];
	f12 = f12+f10;
	heapFloat[(r1+126)] = f12;
	f12 = heapFloat[(r1+127)];
	f12 = f12+f10;
	heapFloat[(r1+127)] = f12;
	f12 = heapFloat[(r1+128)];
	f10 = f12+f10;
	heapFloat[(r1+128)] = f10;
	f10 = f14*f7;
	f12 = f13*f9;
	f13 = heapFloat[(r1+134)];
	f10 = f10+f12;
	f12 = f19*f6;
	f10 = f10+f12;
	f12 = f13*f8;
	f13 = heapFloat[(r1+136)];
	f14 = heapFloat[(r1+135)];
	f19 = heapFloat[(r1+130)];
	f10 = f10*f12;
	f12 = f16*f7;
	f15 = f15*f9;
	f12 = f12+f15;
	f15 = f20*f6;
	f10 = f19+f10;
	heapFloat[(r1+130)] = f10;
	f10 = f12+f15;
	f12 = f14*f8;
	f14 = f18*f7;
	f15 = f17*f9;
	f10 = f10*f12;
	f12 = heapFloat[(r1+131)];
	f10 = f12+f10;
	f12 = f14+f15;
	f14 = f21*f6;
	heapFloat[(r1+131)] = f10;
	f10 = f12+f14;
	f12 = f13*f8;
	f10 = f10*f12;
	f12 = heapFloat[(r1+132)];
	f10 = f12+f10;
	heapFloat[(r1+132)] = f10;
}
	f10 = heapFloat[(r2+84)];
if(!(f10 ==f11)) //_LBB582_43
{
	f10 = -f8;
	r4 = heap32[(r3+6)];
	r4 = r4 >> 2;
	f11 =                        -0;
	f8 = f8*f11;
	f11 = heapFloat[(r2+126)];
	f12 = heapFloat[(r4+65)];
	f13 = heapFloat[(r4+64)];
	f14 = heapFloat[(r4+69)];
	f15 = heapFloat[(r4+68)];
	f16 = heapFloat[(r4+73)];
	f17 = heapFloat[(r4+72)];
	f18 = heapFloat[(r4+66)];
	f19 = heapFloat[(r4+70)];
	f20 = heapFloat[(r4+74)];
	f11 = f11+f8;
	heapFloat[(r2+126)] = f11;
	f11 = heapFloat[(r2+127)];
	f11 = f11+f8;
	heapFloat[(r2+127)] = f11;
	f11 = heapFloat[(r2+128)];
	f8 = f11+f8;
	heapFloat[(r2+128)] = f8;
	f8 = f13*f7;
	f11 = f12*f9;
	f8 = f8+f11;
	f11 = f18*f6;
	f12 = heapFloat[(r2+134)];
	f8 = f8+f11;
	f11 = f12*f10;
	f12 = heapFloat[(r2+136)];
	f13 = heapFloat[(r2+135)];
	f18 = heapFloat[(r2+130)];
	f8 = f8*f11;
	f11 = f15*f7;
	f14 = f14*f9;
	f11 = f11+f14;
	f14 = f19*f6;
	f8 = f18+f8;
	heapFloat[(r2+130)] = f8;
	f8 = f11+f14;
	f11 = f13*f10;
	f7 = f17*f7;
	f9 = f16*f9;
	f8 = f8*f11;
	f11 = heapFloat[(r2+131)];
	f8 = f11+f8;
	f7 = f7+f9;
	f6 = f20*f6;
	heapFloat[(r2+131)] = f8;
	f6 = f7+f6;
	f7 = f12*f10;
	f6 = f6*f7;
	f7 = heapFloat[(r2+132)];
	f6 = f7+f6;
	heapFloat[(r2+132)] = f6;
}
}
	r0 = heapU8[r0+513];
if(!(r0 ==0)) //_LBB582_52
{
	f6 = heapFloat[(r3+130)];
	f7 = heapFloat[(r3+124)];
	f8 = heapFloat[(r3+116)];
	f2 = f5-f2;
	f5 = heapFloat[(r3+117)];
	f1 = f4-f1;
	f4 = heapFloat[(r3+118)];
	f0 = f3-f0;
	f2 = f2*f8;
	f1 = f1*f5;
	f3 = f6*f7;
	f7 = heapFloat[(r3+105)];
	f1 = f2+f1;
	f0 = f0*f4;
	f2 = f3*f7;
	f0 = f1+f0;
	f1 = heapFloat[(fp+-117)];
	f1 = f2/f1;
	f2 =                         0;
	if(f0 >f2) //_LBB582_46
{
	f0 = f6*f0;
	f3 = heapFloat[(r3+106)];
	f0 = f0*f3;
	f1 = f0+f1;
}
	f0 = heapFloat[(r3+121)];
	f3 = heapFloat[(r3+127)];
	f0 = f0*f1;
	f0 = f3+f0;
	f0 = f0 > f2 ? f0 : f2;
	heapFloat[(r3+127)] = f0;
	f0 = f0-f3;
	f1 = heapFloat[(r1+84)];
	if(f1 !=f2) //_LBB582_49
{
	r0 = heap32[(r3+5)];
	r0 = r0 >> 2;
	f1 = f0*f2;
	f3 = heapFloat[(r1+126)];
	f6 = heapFloat[(r0+65)];
	f7 = heapFloat[(r0+64)];
	f9 = heapFloat[(r0+69)];
	f10 = heapFloat[(r0+68)];
	f11 = heapFloat[(r0+73)];
	f12 = heapFloat[(r0+72)];
	f13 = heapFloat[(r0+66)];
	f14 = heapFloat[(r0+70)];
	f15 = heapFloat[(r0+74)];
	f3 = f3+f1;
	heapFloat[(r1+126)] = f3;
	f3 = heapFloat[(r1+127)];
	f3 = f3+f1;
	heapFloat[(r1+127)] = f3;
	f3 = heapFloat[(r1+128)];
	f1 = f3+f1;
	heapFloat[(r1+128)] = f1;
	f1 = f7*f8;
	f3 = f6*f5;
	f6 = heapFloat[(r1+134)];
	f1 = f1+f3;
	f3 = f13*f4;
	f1 = f1+f3;
	f3 = f6*f0;
	f6 = heapFloat[(r1+136)];
	f7 = heapFloat[(r1+135)];
	f13 = heapFloat[(r1+130)];
	f1 = f1*f3;
	f3 = f10*f8;
	f9 = f9*f5;
	f3 = f3+f9;
	f9 = f14*f4;
	f1 = f13+f1;
	heapFloat[(r1+130)] = f1;
	f1 = f3+f9;
	f3 = f7*f0;
	f8 = f12*f8;
	f5 = f11*f5;
	f1 = f1*f3;
	f3 = heapFloat[(r1+131)];
	f1 = f3+f1;
	f5 = f8+f5;
	f4 = f15*f4;
	heapFloat[(r1+131)] = f1;
	f4 = f5+f4;
	f5 = f6*f0;
	f4 = f4*f5;
	f5 = heapFloat[(r1+132)];
	f4 = f5+f4;
	heapFloat[(r1+132)] = f4;
	f8 = heapFloat[(r3+116)];
	f5 = heapFloat[(r3+117)];
	f4 = heapFloat[(r3+118)];
}
	f1 = heapFloat[(r2+84)];
if(!(f1 ==f2)) //_LBB582_52
{
	f1 = -f0;
	r0 = heap32[(r3+6)];
	r0 = r0 >> 2;
	f2 =                        -0;
	f0 = f0*f2;
	f2 = heapFloat[(r2+126)];
	f3 = heapFloat[(r0+65)];
	f6 = heapFloat[(r0+64)];
	f7 = heapFloat[(r0+69)];
	f9 = heapFloat[(r0+68)];
	f10 = heapFloat[(r0+73)];
	f11 = heapFloat[(r0+72)];
	f12 = heapFloat[(r0+66)];
	f13 = heapFloat[(r0+70)];
	f14 = heapFloat[(r0+74)];
	f2 = f2+f0;
	heapFloat[(r2+126)] = f2;
	f2 = heapFloat[(r2+127)];
	f2 = f2+f0;
	heapFloat[(r2+127)] = f2;
	f2 = heapFloat[(r2+128)];
	f0 = f2+f0;
	heapFloat[(r2+128)] = f0;
	f0 = f6*f8;
	f2 = f3*f5;
	f0 = f0+f2;
	f2 = f12*f4;
	f3 = heapFloat[(r2+134)];
	f0 = f0+f2;
	f2 = f3*f1;
	f3 = heapFloat[(r2+136)];
	f6 = heapFloat[(r2+135)];
	f12 = heapFloat[(r2+130)];
	f0 = f0*f2;
	f2 = f9*f8;
	f7 = f7*f5;
	f2 = f2+f7;
	f7 = f13*f4;
	f0 = f12+f0;
	heapFloat[(r2+130)] = f0;
	f0 = f2+f7;
	f2 = f6*f1;
	f6 = f11*f8;
	f5 = f10*f5;
	f0 = f0*f2;
	f2 = heapFloat[(r2+131)];
	f0 = f2+f0;
	f2 = f6+f5;
	f4 = f14*f4;
	heapFloat[(r2+131)] = f0;
	f0 = f2+f4;
	f1 = f3*f1;
	f0 = f0*f1;
	f1 = heapFloat[(r2+132)];
	f0 = f1+f0;
	heapFloat[(r2+132)] = f0;
}
}
}
	return;
}