function _ZN33btConvexConcaveCollisionAlgorithm21calculateTimeOfImpactEP17btCollisionObjectS1_RK16btDispatcherInfoP16btManifoldResult(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var r7;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
	var f6;
	var f7;
	var f8;
	var f9;
	var f10;
	var f11;
	var f12;
	var f13;
	var f14;
	var f15;
	var f16;
	var f17;
	var f18;
	var f19;
	var f20;
	var f21;
	var f22;
	var f23;
	var f24;
	var f25;
	var f26;
	var f27;
	var f28;
	var f29;
	var f30;
var __label__ = 0;
	i7 = sp + -440;var g0 = i7>>2; // save stack
	r0 = heap32[(fp)];
	r0 = heapU8[r0+8];
	r1 = heap32[(fp+1)];
	r2 = heap32[(fp+2)];
	r3 = r0 == 0 ? r1 : r2;
	r3 = r3 >> 2;
	f0 = heapFloat[(r3+30)];
	f1 = heapFloat[(r3+14)];
	f2 = heapFloat[(r3+29)];
	f3 = heapFloat[(r3+13)];
	f4 = f2-f3;
	f5 = f0-f1;
	f6 = heapFloat[(r3+31)];
	f7 = heapFloat[(r3+15)];
	f8 = f6-f7;
	f4 = f4*f4;
	f5 = f5*f5;
	f9 = heapFloat[(r3+62)];
	f4 = f4+f5;
	f5 = f8*f8;
	f8 = f9*f9;
	f4 = f4+f5;
if(!(f8 >f4)) //_LBB288_23
{
	r0 = r0 == 0 ? r2 : r1;
	r0 = r0 >> 2;
	r1 = heap32[(r0+48)];
	r2 = r1 >> 2;
	r4 = heap32[(r2+1)];
	r4 = (r4 + -21)|0;
if(!(uint(r4) >uint(8))) //_LBB288_23
{
	f4 = heapFloat[(r0+13)];
	f5 = heapFloat[(r0+3)];
	f8 = heapFloat[(r0+2)];
	f4 = -f4;
	f9 = heapFloat[(r0+1)];
	f10 = heapFloat[(r0+7)];
	f11 = heapFloat[(r0+6)];
	f12 = heapFloat[(r0+14)];
	f13 = heapFloat[(r0+5)];
	f14 = heapFloat[(r3+3)];
	f15 = heapFloat[(r3+7)];
	f16 = heapFloat[(r3+2)];
	f17 = heapFloat[(r3+6)];
	f18 = heapFloat[(r3+1)];
	f19 = heapFloat[(r3+5)];
	f20 = heapFloat[(r3+19)];
	heapFloat[(fp+-63)] = f20;
	f21 = heapFloat[(r3+23)];
	f22 = heapFloat[(r3+18)];
	f23 = heapFloat[(r3+22)];
	f24 = heapFloat[(r3+17)];
	f25 = heapFloat[(r3+21)];
	f26 = f5*f3;
	heapFloat[(fp+-65)] = f26;
	f27 = f10*f1;
	f28 = f8*f3;
	heapFloat[(fp+-66)] = f28;
	f29 = f11*f1;
	f3 = f9*f3;
	heapFloat[(fp+-64)] = f3;
	f1 = f13*f1;
	f30 = heapFloat[(r0+11)];
	f3 = heapFloat[(r0+10)];
	f20 = heapFloat[(r0+15)];
	f26 = heapFloat[(r0+9)];
	f28 = f5*f2;
	heapFloat[(fp+-67)] = f28;
	f28 = f10*f0;
	heapFloat[(fp+-69)] = f28;
	f28 = f5*f4;
	heapFloat[(fp+-68)] = f28;
	f28 = f10*f12;
	heapFloat[(fp+-71)] = f28;
	f28 = f8*f2;
	heapFloat[(fp+-70)] = f28;
	f28 = f11*f0;
	heapFloat[(fp+-73)] = f28;
	f28 = f8*f4;
	heapFloat[(fp+-72)] = f28;
	f28 = f11*f12;
	heapFloat[(fp+-78)] = f28;
	f2 = f9*f2;
	heapFloat[(fp+-74)] = f2;
	f0 = f13*f0;
	heapFloat[(fp+-76)] = f0;
	f4 = f9*f4;
	heapFloat[(fp+-75)] = f4;
	f12 = f13*f12;
	heapFloat[(fp+-77)] = f12;
	f0 = heapFloat[(r3+11)];
	f2 = heapFloat[(r3+10)];
	f4 = heapFloat[(r3+9)];
	f12 = heapFloat[(r3+27)];
	f28 = heapFloat[(r3+26)];
	heapFloat[(fp+-62)] = f28;
	f28 = heapFloat[(r3+25)];
	heapFloat[(fp+-61)] = f28;
	f28 = heapFloat[(fp+-65)];
	f27 = f28+f27;
	heapFloat[(fp+-65)] = f27;
	f27 = f30*f7;
	heapFloat[(fp+-99)] = f27;
	f28 = heapFloat[(fp+-66)];
	f28 = f28+f29;
	heapFloat[(fp+-66)] = f28;
	f29 = f3*f7;
	heapFloat[(fp+-98)] = f29;
	f27 = heapFloat[(fp+-64)];
	f1 = f27+f1;
	heapFloat[(fp+-80)] = f1;
	f7 = f26*f7;
	heapFloat[(fp+-97)] = f7;
	f27 = f14*f5;
	heapFloat[(fp+-64)] = f27;
	f1 = f15*f10;
	heapFloat[(fp+-82)] = f1;
	f1 = f16*f5;
	heapFloat[(fp+-79)] = f1;
	f1 = f17*f10;
	heapFloat[(fp+-84)] = f1;
	f1 = f18*f5;
	heapFloat[(fp+-81)] = f1;
	f1 = f19*f10;
	heapFloat[(fp+-86)] = f1;
	f1 = f14*f8;
	heapFloat[(fp+-83)] = f1;
	f1 = f15*f11;
	heapFloat[(fp+-88)] = f1;
	f1 = f16*f8;
	heapFloat[(fp+-85)] = f1;
	f1 = f17*f11;
	heapFloat[(fp+-92)] = f1;
	f1 = f18*f8;
	heapFloat[(fp+-87)] = f1;
	f1 = f19*f11;
	heapFloat[(fp+-93)] = f1;
	f14 = f14*f9;
	heapFloat[(fp+-89)] = f14;
	f15 = f15*f13;
	heapFloat[(fp+-94)] = f15;
	f16 = f16*f9;
	heapFloat[(fp+-90)] = f16;
	f17 = f17*f13;
	heapFloat[(fp+-95)] = f17;
	f18 = f18*f9;
	heapFloat[(fp+-91)] = f18;
	f19 = f19*f13;
	heapFloat[(fp+-96)] = f19;
	f1 = heapFloat[(fp+-67)];
	f7 = heapFloat[(fp+-69)];
	f1 = f1+f7;
	f7 = f30*f6;
	f14 = heapFloat[(fp+-68)];
	f15 = heapFloat[(fp+-71)];
	f14 = f14-f15;
	f15 = f30*f20;
	f16 = heapFloat[(fp+-70)];
	f17 = heapFloat[(fp+-73)];
	f16 = f16+f17;
	f17 = f3*f6;
	f18 = heapFloat[(fp+-72)];
	f19 = heapFloat[(fp+-78)];
	f18 = f18-f19;
	f19 = f3*f20;
	f27 = heapFloat[(fp+-74)];
	f28 = heapFloat[(fp+-76)];
	f27 = f27+f28;
	f6 = f26*f6;
	f28 = heapFloat[(fp+-75)];
	f29 = heapFloat[(fp+-77)];
	f28 = f28-f29;
	f20 = f26*f20;
	f29 = heapFloat[(fp+-63)];
	f29 = f29*f5;
	heapFloat[(fp+-67)] = f29;
	f29 = f21*f10;
	heapFloat[(fp+-69)] = f29;
	f29 = f22*f5;
	heapFloat[(fp+-68)] = f29;
	f29 = f23*f10;
	f5 = f24*f5;
	heapFloat[(fp+-70)] = f5;
	f5 = f25*f10;
	heapFloat[(fp+-101)] = f5;
	f10 = heapFloat[(fp+-63)];
	f5 = f10*f8;
	heapFloat[(fp+-71)] = f5;
	f5 = f21*f11;
	heapFloat[(fp+-73)] = f5;
	f5 = f22*f8;
	heapFloat[(fp+-72)] = f5;
	f5 = f23*f11;
	heapFloat[(fp+-100)] = f5;
	f8 = f24*f8;
	heapFloat[(fp+-74)] = f8;
	f5 = f25*f11;
	heapFloat[(fp+-102)] = f5;
	f8 = f10*f9;
	heapFloat[(fp+-75)] = f8;
	f5 = f21*f13;
	heapFloat[(fp+-103)] = f5;
	f8 = f22*f9;
	heapFloat[(fp+-78)] = f8;
	f5 = f23*f13;
	heapFloat[(fp+-104)] = f5;
	f8 = f24*f9;
	heapFloat[(fp+-76)] = f8;
	f5 = f25*f13;
	heapFloat[(fp+-105)] = f5;
	f8 = heapFloat[(fp+-65)];
	f9 = heapFloat[(fp+-99)];
	f8 = f8+f9;
	heapFloat[(fp+-77)] = f8;
	f9 = f14-f15;
	f1 = f1+f7;
	heapFloat[(fp+-63)] = f1;
	f7 = heapFloat[(fp+-66)];
	f10 = heapFloat[(fp+-98)];
	f7 = f7+f10;
	heapFloat[(fp+-98)] = f7;
	f10 = f18-f19;
	f11 = f16+f17;
	heapFloat[(fp+-65)] = f11;
	f13 = heapFloat[(fp+-80)];
	f14 = heapFloat[(fp+-97)];
	f1 = f13+f14;
	heapFloat[(fp+-80)] = f1;
	f5 = f28-f20;
	f6 = f27+f6;
	heapFloat[(fp+-66)] = f6;
	f7 = heapFloat[(fp+-64)];
	f8 = heapFloat[(fp+-82)];
	f1 = f7+f8;
	heapFloat[(fp+-64)] = f1;
	f1 = f0*f30;
	heapFloat[(fp+-82)] = f1;
	f6 = heapFloat[(fp+-79)];
	f7 = heapFloat[(fp+-84)];
	f1 = f6+f7;
	heapFloat[(fp+-79)] = f1;
	f1 = f2*f30;
	heapFloat[(fp+-84)] = f1;
	f6 = heapFloat[(fp+-81)];
	f7 = heapFloat[(fp+-86)];
	f1 = f6+f7;
	heapFloat[(fp+-81)] = f1;
	f1 = f4*f30;
	heapFloat[(fp+-86)] = f1;
	f6 = heapFloat[(fp+-83)];
	f7 = heapFloat[(fp+-88)];
	f1 = f6+f7;
	heapFloat[(fp+-83)] = f1;
	f1 = f0*f3;
	heapFloat[(fp+-88)] = f1;
	f6 = heapFloat[(fp+-85)];
	f7 = heapFloat[(fp+-92)];
	f1 = f6+f7;
	heapFloat[(fp+-85)] = f1;
	f1 = f2*f3;
	heapFloat[(fp+-92)] = f1;
	f6 = heapFloat[(fp+-87)];
	f7 = heapFloat[(fp+-93)];
	f1 = f6+f7;
	heapFloat[(fp+-87)] = f1;
	f1 = f4*f3;
	heapFloat[(fp+-93)] = f1;
	f6 = heapFloat[(fp+-89)];
	f7 = heapFloat[(fp+-94)];
	f1 = f6+f7;
	heapFloat[(fp+-89)] = f1;
	f0 = f0*f26;
	f6 = heapFloat[(fp+-90)];
	f7 = heapFloat[(fp+-95)];
	f6 = f6+f7;
	f2 = f2*f26;
	f7 = heapFloat[(fp+-91)];
	f8 = heapFloat[(fp+-96)];
	f7 = f7+f8;
	f4 = f4*f26;
	f8 = heapFloat[(fp+-67)];
	f11 = heapFloat[(fp+-69)];
	f8 = f8+f11;
	f11 = f12*f30;
	f13 = heapFloat[(fp+-68)];
	f13 = f13+f29;
	f28 = heapFloat[(fp+-62)];
	f14 = f28*f30;
	f15 = heapFloat[(fp+-70)];
	f16 = heapFloat[(fp+-101)];
	f15 = f15+f16;
	f28 = heapFloat[(fp+-61)];
	f16 = f28*f30;
	f17 = heapFloat[(fp+-71)];
	f18 = heapFloat[(fp+-73)];
	f17 = f17+f18;
	f18 = f12*f3;
	f19 = heapFloat[(fp+-72)];
	f20 = heapFloat[(fp+-100)];
	f19 = f19+f20;
	f28 = heapFloat[(fp+-62)];
	f20 = f28*f3;
	f21 = heapFloat[(fp+-74)];
	f22 = heapFloat[(fp+-102)];
	f21 = f21+f22;
	f28 = heapFloat[(fp+-61)];
	f3 = f28*f3;
	f22 = heapFloat[(fp+-75)];
	f23 = heapFloat[(fp+-103)];
	f22 = f22+f23;
	f12 = f12*f26;
	f23 = heapFloat[(fp+-78)];
	f24 = heapFloat[(fp+-104)];
	f23 = f23+f24;
	f28 = heapFloat[(fp+-62)];
	f24 = f28*f26;
	f25 = heapFloat[(fp+-76)];
	f27 = heapFloat[(fp+-105)];
	f25 = f25+f27;
	f28 = heapFloat[(fp+-61)];
	f26 = f28*f26;
	f27 = heapFloat[(fp+-77)];
	f27 = f27+f9;
	f28 = heapFloat[(fp+-98)];
	f28 = f28+f10;
	f29 = heapFloat[(fp+-80)];
	f29 = f29+f5;
	f30 = heapFloat[(fp+-64)];
	f1 = heapFloat[(fp+-82)];
	f1 = f30+f1;
	heapFloat[(fp+-61)] = f1;
	f1 = heapFloat[(fp+-79)];
	f30 = heapFloat[(fp+-84)];
	f1 = f1+f30;
	heapFloat[(fp+-62)] = f1;
	f1 = heapFloat[(fp+-81)];
	f30 = heapFloat[(fp+-86)];
	f1 = f1+f30;
	heapFloat[(fp+-64)] = f1;
	f1 = heapFloat[(fp+-83)];
	f30 = heapFloat[(fp+-88)];
	f1 = f1+f30;
	heapFloat[(fp+-67)] = f1;
	f1 = heapFloat[(fp+-85)];
	f30 = heapFloat[(fp+-92)];
	f1 = f1+f30;
	heapFloat[(fp+-68)] = f1;
	f1 = heapFloat[(fp+-87)];
	f30 = heapFloat[(fp+-93)];
	f1 = f1+f30;
	f30 = heapFloat[(fp+-89)];
	f0 = f30+f0;
	f2 = f6+f2;
	f4 = f7+f4;
	f6 = heapFloat[(fp+-63)];
	f6 = f6+f9;
	f7 = heapFloat[(fp+-65)];
	f7 = f7+f10;
	f9 = heapFloat[(fp+-66)];
	f5 = f9+f5;
	f8 = f8+f11;
	f9 = f13+f14;
	f10 = f15+f16;
	f11 = f17+f18;
	f13 = f19+f20;
	f3 = f21+f3;
	f12 = f22+f12;
	f14 = f23+f24;
	f15 = f25+f26;
	r0 = sp + -16;
	r4 = r0 >> 2;
	heapFloat[(fp+-4)] = f29;
	heapFloat[(r4+1)] = f28;
	heapFloat[(r4+2)] = f27;
	heap32[(r4+3)] = 0;
	if(f5 <f29) //_LBB288_4
{
	heapFloat[(fp+-4)] = f5;
	f16 = f5;
}
else{
	f16 = f29;
}
	if(f7 <f28) //_LBB288_7
{
	heapFloat[(r4+1)] = f7;
	f17 = f7;
}
else{
	f17 = f28;
}
	if(f6 <f27) //_LBB288_10
{
	heapFloat[(r4+2)] = f6;
	f18 = f6;
}
else{
	f18 = f27;
}
	r5 = sp + -32;
	r6 = r5 >> 2;
	heapFloat[(fp+-8)] = f29;
	heapFloat[(r6+1)] = f28;
	heapFloat[(r6+2)] = f27;
	heap32[(r6+3)] = 0;
	if(f29 <f5) //_LBB288_13
{
	heapFloat[(fp+-8)] = f5;
	f19 = f5;
}
else{
	f19 = f29;
}
	if(f28 <f7) //_LBB288_16
{
	heapFloat[(r6+1)] = f7;
	f20 = f7;
}
else{
	f20 = f28;
}
	if(f27 <f6) //_LBB288_19
{
	heapFloat[(r6+2)] = f6;
	f21 = f6;
}
else{
	f21 = f27;
}
	f22 = heapFloat[(r3+61)];
	f16 = f16-f22;
	f17 = f17-f22;
	heapFloat[(fp+-4)] = f16;
	f16 = f18-f22;
	heapFloat[(r4+1)] = f17;
	f17 = f19+f22;
	heapFloat[(r4+2)] = f16;
	f16 = f20+f22;
	heapFloat[(fp+-8)] = f17;
	r4 = _ZTVZN33btConvexConcaveCollisionAlgorithm21calculateTimeOfImpactEP17btCollisionObjectS1_RK16btDispatcherInfoP16btManifoldResultE31LocalTriangleSphereCastCallback;
	f17 = f21+f22;
	heapFloat[(r6+1)] = f16;
	r7 = sp + -240;
	r4 = (r4 + 8)|0;
	heapFloat[(r6+2)] = f17;
	r6 = r7 >> 2;
	heap32[(fp+-60)] = r4;
	heapFloat[(r6+1)] = f4;
	heapFloat[(r6+2)] = f2;
	heapFloat[(r6+3)] = f0;
	heap32[(r6+4)] = 0;
	heapFloat[(r6+5)] = f1;
	f0 = heapFloat[(fp+-68)];
	heapFloat[(r6+6)] = f0;
	f0 = heapFloat[(fp+-67)];
	heapFloat[(r6+7)] = f0;
	heap32[(r6+8)] = 0;
	f0 = heapFloat[(fp+-64)];
	heapFloat[(r6+9)] = f0;
	f0 = heapFloat[(fp+-62)];
	heapFloat[(r6+10)] = f0;
	f0 = heapFloat[(fp+-61)];
	heapFloat[(r6+11)] = f0;
	heap32[(r6+12)] = 0;
	heapFloat[(r6+13)] = f29;
	heapFloat[(r6+14)] = f28;
	heapFloat[(r6+15)] = f27;
	heap32[(r6+16)] = 0;
	heapFloat[(r6+17)] = f15;
	heapFloat[(r6+18)] = f14;
	heapFloat[(r6+19)] = f12;
	heap32[(r6+20)] = 0;
	heapFloat[(r6+21)] = f3;
	heapFloat[(r6+22)] = f13;
	heapFloat[(r6+23)] = f11;
	heap32[(r6+24)] = 0;
	heapFloat[(r6+25)] = f10;
	heapFloat[(r6+26)] = f9;
	heapFloat[(r6+27)] = f8;
	heap32[(r6+28)] = 0;
	heapFloat[(r6+29)] = f5;
	heapFloat[(r6+30)] = f7;
	heapFloat[(r6+31)] = f6;
	heap32[(r6+32)] = 0;
	heapFloat[(r6+49)] = f22;
	heap32[(r6+50)] = heap32[(r3+60)];
if(!(r1 ==0)) //_LBB288_23
{
	r2 = heap32[(r2)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+15)];
	heap32[(g0)] = r1;
	heap32[(g0+1)] = r7;
	heap32[(g0+2)] = r0;
	heap32[(g0+3)] = r5;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	f0 = heapFloat[(r6+50)];
	f1 = heapFloat[(r3+60)];
if(!(f0 >=f1)) //_LBB288_23
{
	heapFloat[(r3+60)] = f0;
	f_g0 = f0;
	return;
}
}
}
}
	f0 =                         1;
	f_g0 = f0;
	return;
}