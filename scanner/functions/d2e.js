function d2e(){return w(oe,{children:[o("h2",{children:"Create Your First Input"}),o(de,{children:"useField allows you to create your very own inputs."}),o(de,{type:"notice",children:"You do this once and then never have to do it agian!"}),o(Ee,{leftHeader:o(xN,{}),rightHeader:o("h3",{children:"Code:"}),left:o(Tie,{}),right:o(N,{links:!0,input1:Die})}),w(de,{children:["Above is the most simplicitc informed input. You simply:",w("ol",{children:[o("li",{children:"Call useField hook"}),o("li",{children:"Spread informed onto the native input."}),o("li",{children:"Return the result of render"})]}),"And walla! You have an informed input."]}),o("hr",{}),o("h2",{children:"Do It yourself"}),o(de,{children:"That was pretty simple but whats happening under the hood? To understand this lets re-write the previous example in a more verbose way!"}),o(Ee,{leftHeader:o(xN,{}),rightHeader:o("h3",{children:"Code:"}),left:o(Rie,{}),right:o(N,{links:!0,input1:Iie})}),o("hr",{}),o("h2",{children:"Create More Inputs"}),w(de,{children:["Most of the time you will want to hook up more than just the basics. Below shows how you can create your very owned inputs with informed.",o("br",{}),o("br",{}),o("strong",{children:"Note: "}),"this is the exact same example that we showed in the intro, but this time instead of using Adobe's inputs it uses the ones we define here!"]}),o(Ee,{leftHeader:o("h3",{children:"Example:"}),rightHeader:o("h3",{children:"Code:"}),left:o(G3e,{}),right:o(N,{links:!0,input1:X3e})}),o("hr",{}),o("h2",{children:"Schema Adapter"}),w(de,{children:["Informed comes with a custom schema adapter that maps field types to actual JSX elements.",o("br",{}),o("br",{}),"Whenever you create your own inputs, you have to create or add to informds adapter."]}),o(Ee,{leftHeader:o("h3",{children:"Example:"}),rightHeader:o("h3",{children:"Code:"}),left:o(u2e,{}),right:o(N,{links:!0,input1:c2e})})]})}