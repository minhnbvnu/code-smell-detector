function _ogg_stream_iovecin($os,$iov,$count,$e_o_s,$0,$1) {
 $os = $os|0;
 $iov = $iov|0;
 $count = $count|0;
 $e_o_s = $e_o_s|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$$i2 = 0, $$0 = 0, $$phi$trans$insert21 = 0, $$pre = 0, $$pre$phi28Z2D = 0, $$pre22 = 0, $$pre27 = 0, $$pre30 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $bytes$0$lcssa = 0, $bytes$012 = 0, $exitcond = 0, $i$013 = 0, $i$110 = 0, $i$2$lcssa = 0, $i$29 = 0, $or$cond = 0, $smax = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($os|0)==(0|0);
 if ($2) {
  $$0 = -1;
  return ($$0|0);
 }
 $3 = HEAP32[$os>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0 = -1;
  return ($$0|0);
 }
 $5 = ($iov|0)==(0|0);
 if ($5) {
  $$0 = 0;
  return ($$0|0);
 }
 $6 = ($count|0)>(0);
 L10: do {
  if ($6) {
   $bytes$012 = 0;$i$013 = 0;
   while(1) {
    $7 = (((($iov) + ($i$013<<3)|0)) + 4|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = ($8|0)<(0);
    $10 = (2147483647 - ($8))|0;
    $11 = ($bytes$012|0)>($10|0);
    $or$cond = $9 | $11;
    if ($or$cond) {
     $$0 = -1;
     break;
    }
    $12 = (($8) + ($bytes$012))|0;
    $13 = (($i$013) + 1)|0;
    $14 = ($13|0)<($count|0);
    if ($14) {
     $bytes$012 = $12;$i$013 = $13;
    } else {
     $bytes$0$lcssa = $12;
     break L10;
    }
   }
   return ($$0|0);
  } else {
   $bytes$0$lcssa = 0;
  }
 } while(0);
 $15 = (($bytes$0$lcssa|0) / 255)&-1;
 $16 = (($15) + 1)|0;
 $17 = ((($os)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0);
 $$pre30 = ((($os)) + 8|0);
 if (!($19)) {
  $20 = HEAP32[$$pre30>>2]|0;
  $21 = (($20) - ($18))|0;
  HEAP32[$$pre30>>2] = $21;
  $22 = ($20|0)==($18|0);
  if (!($22)) {
   $23 = (($3) + ($18)|0);
   _memmove(($3|0),($23|0),($21|0))|0;
  }
  HEAP32[$17>>2] = 0;
 }
 $24 = ((($os)) + 4|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = (($25) - ($bytes$0$lcssa))|0;
 $27 = HEAP32[$$pre30>>2]|0;
 $28 = ($26|0)>($27|0);
 do {
  if (!($28)) {
   $29 = (2147483647 - ($bytes$0$lcssa))|0;
   $30 = ($25|0)>($29|0);
   if ($30) {
    $31 = HEAP32[$os>>2]|0;
    $32 = ($31|0)==(0|0);
    if (!($32)) {
     _free($31);
    }
    $33 = ((($os)) + 16|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = ($34|0)==(0|0);
    if (!($35)) {
     _free($34);
    }
    $36 = ((($os)) + 20|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($37|0)==(0|0);
    if (!($38)) {
     _free($37);
    }
    _memset(($os|0),0,360)|0;
    $$0 = -1;
    return ($$0|0);
   }
   $39 = (($25) + ($bytes$0$lcssa))|0;
   $40 = ($39|0)<(2147482623);
   $41 = (($39) + 1024)|0;
   $$$i2 = $40 ? $41 : $39;
   $42 = HEAP32[$os>>2]|0;
   $43 = (_realloc($42,$$$i2)|0);
   $44 = ($43|0)==(0|0);
   if (!($44)) {
    HEAP32[$24>>2] = $$$i2;
    HEAP32[$os>>2] = $43;
    break;
   }
   $45 = HEAP32[$os>>2]|0;
   $46 = ($45|0)==(0|0);
   if (!($46)) {
    _free($45);
   }
   $47 = ((($os)) + 16|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ($48|0)==(0|0);
   if (!($49)) {
    _free($48);
   }
   $50 = ((($os)) + 20|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ($51|0)==(0|0);
   if (!($52)) {
    _free($51);
   }
   _memset(($os|0),0,360)|0;
   $$0 = -1;
   return ($$0|0);
  }
 } while(0);
 $53 = (__os_lacing_expand($os,$16)|0);
 $54 = ($53|0)==(0);
 if (!($54)) {
  $$0 = -1;
  return ($$0|0);
 }
 if ($6) {
  $$pre = HEAP32[$$pre30>>2]|0;
  $66 = $$pre;$i$110 = 0;
  while(1) {
   $64 = HEAP32[$os>>2]|0;
   $65 = (($64) + ($66)|0);
   $67 = (($iov) + ($i$110<<3)|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = (((($iov) + ($i$110<<3)|0)) + 4|0);
   $70 = HEAP32[$69>>2]|0;
   _memcpy(($65|0),($68|0),($70|0))|0;
   $71 = HEAP32[$69>>2]|0;
   $72 = HEAP32[$$pre30>>2]|0;
   $73 = (($72) + ($71))|0;
   HEAP32[$$pre30>>2] = $73;
   $74 = (($i$110) + 1)|0;
   $exitcond = ($74|0)==($count|0);
   if ($exitcond) {
    break;
   } else {
    $66 = $73;$i$110 = $74;
   }
  }
 }
 $55 = ($bytes$0$lcssa|0)>(254);
 $56 = ((($os)) + 28|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = ((($os)) + 16|0);
 $59 = HEAP32[$58>>2]|0;
 if ($55) {
  $60 = ((($os)) + 352|0);
  $61 = ((($os)) + 20|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = ($15|0)>(1);
  $i$29 = 0;
  while(1) {
   $75 = (($57) + ($i$29))|0;
   $76 = (($59) + ($75<<2)|0);
   HEAP32[$76>>2] = 255;
   $77 = $60;
   $78 = $77;
   $79 = HEAP32[$78>>2]|0;
   $80 = (($77) + 4)|0;
   $81 = $80;
   $82 = HEAP32[$81>>2]|0;
   $83 = (($62) + ($75<<3)|0);
   $84 = $83;
   $85 = $84;
   HEAP32[$85>>2] = $79;
   $86 = (($84) + 4)|0;
   $87 = $86;
   HEAP32[$87>>2] = $82;
   $88 = (($i$29) + 1)|0;
   $89 = ($88|0)<($15|0);
   if ($89) {
    $i$29 = $88;
   } else {
    break;
   }
  }
  $smax = $63 ? $15 : 1;
  $$pre$phi28Z2D = $60;$94 = $62;$i$2$lcssa = $smax;
 } else {
  $$phi$trans$insert21 = ((($os)) + 20|0);
  $$pre22 = HEAP32[$$phi$trans$insert21>>2]|0;
  $$pre27 = ((($os)) + 352|0);
  $$pre$phi28Z2D = $$pre27;$94 = $$pre22;$i$2$lcssa = 0;
 }
 $90 = (($bytes$0$lcssa|0) % 255)&-1;
 $91 = (($57) + ($i$2$lcssa))|0;
 $92 = (($59) + ($91<<2)|0);
 HEAP32[$92>>2] = $90;
 $93 = (($94) + ($91<<3)|0);
 $95 = $93;
 $96 = $95;
 HEAP32[$96>>2] = $0;
 $97 = (($95) + 4)|0;
 $98 = $97;
 HEAP32[$98>>2] = $1;
 $99 = $$pre$phi28Z2D;
 $100 = $99;
 HEAP32[$100>>2] = $0;
 $101 = (($99) + 4)|0;
 $102 = $101;
 HEAP32[$102>>2] = $1;
 $103 = (($59) + ($57<<2)|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = $104 | 256;
 HEAP32[$103>>2] = $105;
 $106 = (($57) + ($16))|0;
 HEAP32[$56>>2] = $106;
 $107 = ((($os)) + 344|0);
 $108 = $107;
 $109 = $108;
 $110 = HEAP32[$109>>2]|0;
 $111 = (($108) + 4)|0;
 $112 = $111;
 $113 = HEAP32[$112>>2]|0;
 $114 = (_i64Add(($110|0),($113|0),1,0)|0);
 $115 = tempRet0;
 $116 = $107;
 $117 = $116;
 HEAP32[$117>>2] = $114;
 $118 = (($116) + 4)|0;
 $119 = $118;
 HEAP32[$119>>2] = $115;
 $120 = ($e_o_s|0)==(0);
 if ($120) {
  $$0 = 0;
  return ($$0|0);
 }
 $121 = ((($os)) + 328|0);
 HEAP32[$121>>2] = 1;
 $$0 = 0;
 return ($$0|0);
}