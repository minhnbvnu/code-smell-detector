function gDe(e,t){const r=e[t][1],n=e[t][2];let i=t-1;const a=[],l=r._tokenizer||n.parser[r.contentType](r.start),s=l.events,u=[],c={};let d,f,h=-1,p=r,m=0,g=0;const b=[g];for(;p;){for(;e[++i][1]!==p;);a.push(i),p._tokenizer||(d=n.sliceStream(p),p.next||d.push(null),f&&l.defineSkip(p.start),p._isInFirstContentOfListItem&&(l._gfmTasklistFirstContentOfListItem=!0),l.write(d),p._isInFirstContentOfListItem&&(l._gfmTasklistFirstContentOfListItem=void 0)),f=p,p=p.next}for(p=r;++h<s.length;)s[h][0]==="exit"&&s[h-1][0]==="enter"&&s[h][1].type===s[h-1][1].type&&s[h][1].start.line!==s[h][1].end.line&&(g=h+1,b.push(g),p._tokenizer=void 0,p.previous=void 0,p=p.next);for(l.events=[],p?(p._tokenizer=void 0,p.previous=void 0):b.pop(),h=b.length;h--;){const v=s.slice(b[h],b[h+1]),y=a.pop();u.unshift([y,y+v.length-1]),_l(e,y,2,v)}for(h=-1;++h<u.length;)c[m+u[h][0]]=m+u[h][1],m+=u[h][1]-u[h][0]-1;return c}