function _ZN23btDiscreteDynamicsWorld14debugDrawWorldEv(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var r7;
	var r8;
	var r9;
	var r10;
	var r11;
	var r12;
	var r13;
	var r14;
	var r15;
	var r16;
	var r17;
	var r18;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
	var f6;
	var f7;
	var f8;
	var f9;
	var f10;
	var f11;
	var f12;
	var f13;
	var f14;
	var f15;
	var f16;
	var f17;
	var f18;
	var f19;
	var f20;
	var f21;
	var f22;
	var f23;
	var f24;
	var f25;
	var f26;
	var f27;
	var f28;
	var f29;
	var f30;
var __label__ = 0;
	i7 = sp + -824;var g0 = i7>>2; // save stack
	r0 = _2E_str16101;
	heap32[(g0)] = r0;
	_ZN15CProfileManager13Start_ProfileEPKc(i7);
	r0 = heap32[(fp)];
	heap32[(g0)] = r0;
	_ZN16btCollisionWorld14debugDrawWorldEv(i7);
	r1 = r0 >> 2;
	r2 = heap32[(r1)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r2 = r_g0;
if(!(r2 ==0)) //_LBB669_53
{
	r2 = heap32[(r1)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r3 = r_g0 >> 2;
	r3 = heap32[(r3)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+12)];
	heap32[(g0)] = r_g0;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	r2 = r_g0 & 6144;
if(!(r2 ==0)) //_LBB669_53
{
	r2 = heap32[(r1)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+24)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r2 = r_g0;
	r3 = (r2 + -1)|0;
if(!(r3 <0)) //_LBB669_53
{
	r3 = sp + -296;
	r4 = sp + -392;
	r5 = (r3 + 48)|0;
	r6 = (r4 + 48)|0;
	r2 = (r2 + -1)|0;
_5: while(true){
	r7 = r2;
	r2 = heap32[(r1)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+25)];
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r7;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r2 = r_g0;
	r8 = heap32[(r1)];
	r8 = r8 >> 2;
	r8 = heap32[(r8+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	r9 = r_g0 >> 2;
	r9 = heap32[(r9)];
	r9 = r9 >> 2;
	r9 = heap32[(r9+12)];
	heap32[(g0)] = r_g0;
	__FUNCTION_TABLE__[(r9)>>2](i7);
	r8 = r_g0;
	r9 = heap32[(r1)];
	r9 = r9 >> 2;
	r9 = heap32[(r9+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r9)>>2](i7);
	r10 = r_g0 >> 2;
	r10 = heap32[(r10)];
	r10 = r10 >> 2;
	r10 = heap32[(r10+12)];
	heap32[(g0)] = r_g0;
	__FUNCTION_TABLE__[(r10)>>2](i7);
	r9 = r_g0;
	r10 = r2 >> 2;
	f0 = heapFloat[(r10+8)];
	heapFloat[(fp+-191)] = f0;
	f1 =                         0;
	heapFloat[(fp+-192)] = f1;
_7: do {
if(!(f0 <=f1)) //_LBB669_52
{
	r8 = r8 >>> 11;
	r9 = r9 >>> 12;
	r8 = r8 & 1;
	r9 = r9 & 1;
	r10 = r2 >> 2;
	r11 = heap32[(r10+1)];
	if(r11 >4) //_LBB669_8
{
	if(r11 ==5) //_LBB669_20
{
	r11 = heap32[(r10+5)];
	r11 = r11 >> 2;
	f0 = heapFloat[(r11+1)];
	f1 = heapFloat[(r10+72)];
	f2 = heapFloat[(r11+2)];
	f3 = heapFloat[(r10+76)];
	f4 = heapFloat[(r10+73)];
	f5 = heapFloat[(r10+77)];
	f6 = f1*f0;
	f7 = f3*f2;
	f8 = heapFloat[(r11+3)];
	f9 = heapFloat[(r10+80)];
	f10 = heapFloat[(r11+9)];
	f11 = heapFloat[(r10+84)];
	f12 = heapFloat[(r11+5)];
	f13 = heapFloat[(r10+74)];
	f14 = heapFloat[(r11+10)];
	f15 = heapFloat[(r10+85)];
	f16 = heapFloat[(r11+6)];
	f17 = heapFloat[(r10+78)];
	f18 = heapFloat[(r11+11)];
	f19 = heapFloat[(r10+86)];
	f20 = heapFloat[(r11+7)];
	f21 = heapFloat[(r10+82)];
	f22 = heapFloat[(r10+81)];
	f23 = f4*f0;
	f24 = f5*f2;
	f6 = f6+f7;
	f7 = f9*f8;
	f25 = heapFloat[(r11+15)];
	f26 = heapFloat[(r11+14)];
	f27 = heapFloat[(r11+13)];
	f28 = f13*f0;
	f29 = f17*f2;
	f23 = f23+f24;
	f24 = f22*f8;
	f6 = f6+f7;
	r11 = r4 >> 2;
	f7 = f28+f29;
	f28 = f21*f8;
	f23 = f23+f24;
	heapFloat[(fp+-98)] = f6;
	f6 = f1*f12;
	f24 = f3*f16;
	f7 = f7+f28;
	heapFloat[(r11+1)] = f23;
	heapFloat[(r11+2)] = f7;
	f7 = f4*f12;
	f23 = f5*f16;
	f6 = f6+f24;
	f24 = f9*f20;
	f28 = f13*f12;
	f29 = f17*f16;
	f7 = f7+f23;
	f23 = f22*f20;
	f6 = f6+f24;
	heap32[(r11+3)] = 0;
	f24 = f28+f29;
	f28 = f21*f20;
	f7 = f7+f23;
	heapFloat[(r11+4)] = f6;
	f1 = f1*f10;
	f3 = f3*f14;
	f6 = f24+f28;
	heapFloat[(r11+5)] = f7;
	heapFloat[(r11+6)] = f6;
	f4 = f4*f10;
	f5 = f5*f14;
	f1 = f1+f3;
	f3 = f9*f18;
	f6 = f13*f10;
	f7 = f17*f14;
	f4 = f4+f5;
	f5 = f22*f18;
	f1 = f1+f3;
	heap32[(r11+7)] = 0;
	f0 = f0*f11;
	f2 = f2*f15;
	f3 = f6+f7;
	f6 = f21*f18;
	f4 = f4+f5;
	heapFloat[(r11+8)] = f1;
	f1 = f12*f11;
	f5 = f16*f15;
	f0 = f0+f2;
	f2 = f8*f19;
	f3 = f3+f6;
	heapFloat[(r11+9)] = f4;
	f0 = f0+f2;
	heapFloat[(r11+10)] = f3;
	f2 = f10*f11;
	f3 = f14*f15;
	f1 = f1+f5;
	f4 = f20*f19;
	f1 = f1+f4;
	f2 = f2+f3;
	f3 = f18*f19;
	f0 = f0+f27;
	heap32[(r11+11)] = 0;
	f2 = f2+f3;
	f1 = f1+f26;
	heapFloat[(r11+12)] = f0;
	f0 = f2+f25;
	heapFloat[(r11+13)] = f1;
	heapFloat[(r11+14)] = f0;
	heap32[(r11+15)] = 0;
if(!(r8 ==0)) //_LBB669_22
{
	r12 = heap32[(r1)];
	r12 = r12 >> 2;
	r12 = heap32[(r12+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r12)>>2](i7);
	r13 = r_g0 >> 2;
	r13 = heap32[(r13)];
	r13 = r13 >> 2;
	r13 = heap32[(r13+14)];
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r4;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+2)] = f0;
	__FUNCTION_TABLE__[(r13)>>2](i7);
}
	r12 = heap32[(r10+6)];
	r12 = r12 >> 2;
	f0 = heapFloat[(r12+1)];
	f1 = heapFloat[(r10+88)];
	f2 = heapFloat[(r12+2)];
	f3 = heapFloat[(r10+92)];
	f4 = heapFloat[(r10+89)];
	f5 = heapFloat[(r10+93)];
	f6 = f1*f0;
	f7 = f3*f2;
	f8 = heapFloat[(r12+3)];
	f9 = heapFloat[(r10+96)];
	f10 = heapFloat[(r12+9)];
	f11 = heapFloat[(r10+100)];
	f12 = heapFloat[(r12+5)];
	f13 = heapFloat[(r10+90)];
	f14 = heapFloat[(r12+10)];
	f15 = heapFloat[(r10+101)];
	f16 = heapFloat[(r12+6)];
	f17 = heapFloat[(r10+94)];
	f18 = heapFloat[(r12+11)];
	f19 = heapFloat[(r10+102)];
	f20 = heapFloat[(r12+7)];
	f21 = heapFloat[(r10+98)];
	f22 = heapFloat[(r10+97)];
	f23 = f4*f0;
	f24 = f5*f2;
	f6 = f6+f7;
	f7 = f9*f8;
	f25 = heapFloat[(r12+15)];
	f26 = heapFloat[(r12+14)];
	f27 = heapFloat[(r12+13)];
	f28 = f13*f0;
	f29 = f17*f2;
	f23 = f23+f24;
	f24 = f22*f8;
	f6 = f6+f7;
	f7 = f28+f29;
	f28 = f21*f8;
	f23 = f23+f24;
	heapFloat[(fp+-98)] = f6;
	f6 = f1*f12;
	f24 = f3*f16;
	f7 = f7+f28;
	heapFloat[(r11+1)] = f23;
	heapFloat[(r11+2)] = f7;
	f7 = f4*f12;
	f23 = f5*f16;
	f6 = f6+f24;
	f24 = f9*f20;
	f28 = f13*f12;
	f29 = f17*f16;
	f7 = f7+f23;
	f23 = f22*f20;
	f6 = f6+f24;
	heap32[(r11+3)] = 0;
	f24 = f28+f29;
	f28 = f21*f20;
	f7 = f7+f23;
	heapFloat[(r11+4)] = f6;
	f1 = f1*f10;
	f3 = f3*f14;
	f6 = f24+f28;
	heapFloat[(r11+5)] = f7;
	heapFloat[(r11+6)] = f6;
	f4 = f4*f10;
	f5 = f5*f14;
	f1 = f1+f3;
	f3 = f9*f18;
	f6 = f13*f10;
	f7 = f17*f14;
	f4 = f4+f5;
	f5 = f22*f18;
	f1 = f1+f3;
	heap32[(r11+7)] = 0;
	f0 = f0*f11;
	f2 = f2*f15;
	f3 = f6+f7;
	f6 = f21*f18;
	f4 = f4+f5;
	heapFloat[(r11+8)] = f1;
	f1 = f12*f11;
	f5 = f16*f15;
	f0 = f0+f2;
	f2 = f8*f19;
	f3 = f3+f6;
	heapFloat[(r11+9)] = f4;
	f0 = f0+f2;
	heapFloat[(r11+10)] = f3;
	f2 = f10*f11;
	f3 = f14*f15;
	f1 = f1+f5;
	f4 = f20*f19;
	f1 = f1+f4;
	f2 = f2+f3;
	f3 = f18*f19;
	f0 = f0+f27;
	heap32[(r11+11)] = 0;
	f2 = f2+f3;
	f1 = f1+f26;
	heapFloat[(r11+12)] = f0;
	f0 = f2+f25;
	heapFloat[(r11+13)] = f1;
	heapFloat[(r11+14)] = f0;
	heap32[(r11+15)] = 0;
if(!(r8 ==0)) //_LBB669_24
{
	r8 = heap32[(r1)];
	r8 = r8 >> 2;
	r8 = heap32[(r8+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	r12 = r_g0 >> 2;
	r12 = heap32[(r12)];
	r12 = r12 >> 2;
	r12 = heap32[(r12+14)];
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r4;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+2)] = f0;
	__FUNCTION_TABLE__[(r12)>>2](i7);
}
	if(r9 ==0) //_LBB669_52
{
break _7;
}
else{
	r8 = sp + -408;
	heap32[(g0)] = r8;
	heap32[(g0+1)] = r2;
	heap32[(g0+2)] = 1086506843;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+3)] = f0;
	_ZNK21btConeTwistConstraint16GetPointForAngleEff(i7);
	r9 = r8 >> 2;
	f0 = heapFloat[(fp+-102)];
	f1 = heapFloat[(fp+-98)];
	f2 = heapFloat[(r9+1)];
	f3 = heapFloat[(r11+1)];
	f4 = heapFloat[(r11+4)];
	f5 = heapFloat[(r11+5)];
	f1 = f1*f0;
	f3 = f3*f2;
	f6 = heapFloat[(r9+2)];
	f7 = heapFloat[(r11+2)];
	f8 = heapFloat[(r11+8)];
	f9 = heapFloat[(r11+9)];
	f10 = heapFloat[(r11+6)];
	f4 = f4*f0;
	f5 = f5*f2;
	f1 = f1+f3;
	f3 = f7*f6;
	f7 = heapFloat[(r11+10)];
	f0 = f8*f0;
	f2 = f9*f2;
	f4 = f4+f5;
	f5 = f10*f6;
	f1 = f1+f3;
	f3 = heapFloat[(r11+12)];
	f8 = heapFloat[(r11+14)];
	f9 = heapFloat[(r11+13)];
	f4 = f4+f5;
	f0 = f0+f2;
	f2 = f7*f6;
	f1 = f1+f3;
	f0 = f0+f2;
	f2 = f4+f9;
	heapFloat[(fp+-102)] = f1;
	f0 = f0+f8;
	heapFloat[(r9+1)] = f2;
	r12 = 0;
	heapFloat[(r9+2)] = f0;
	heap32[(r9+3)] = 0;
_20: while(true){
	f0 = r12; //fitos r12, f0
	f1 =        6.2831850051879883;
	f0 = f0*f1;
	f1 =                        32;
	r13 = sp + -472;
	f0 = f0/f1;
	heap32[(g0)] = r13;
	heap32[(g0+1)] = r2;
	heapFloat[(g0+2)] = f0;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+3)] = f0;
	_ZNK21btConeTwistConstraint16GetPointForAngleEff(i7);
	r14 = r13 >> 2;
	f0 = heapFloat[(fp+-118)];
	f1 = heapFloat[(fp+-98)];
	f2 = heapFloat[(r14+1)];
	f3 = heapFloat[(r11+1)];
	f4 = heapFloat[(r11+4)];
	f5 = heapFloat[(r11+5)];
	f1 = f1*f0;
	f3 = f3*f2;
	f6 = heapFloat[(r14+2)];
	f7 = heapFloat[(r11+2)];
	f8 = heapFloat[(r11+8)];
	f9 = heapFloat[(r11+9)];
	f10 = heapFloat[(r11+6)];
	f4 = f4*f0;
	f5 = f5*f2;
	f1 = f1+f3;
	f3 = f7*f6;
	f7 = heapFloat[(r11+10)];
	f0 = f8*f0;
	f2 = f9*f2;
	f4 = f4+f5;
	f5 = f10*f6;
	f1 = f1+f3;
	f3 = heapFloat[(r11+12)];
	f8 = heapFloat[(r11+14)];
	f9 = heapFloat[(r11+13)];
	f4 = f4+f5;
	f0 = f0+f2;
	f2 = f7*f6;
	f1 = f1+f3;
	f0 = f0+f2;
	f2 = f4+f9;
	heapFloat[(fp+-118)] = f1;
	f0 = f0+f8;
	heapFloat[(r14+1)] = f2;
	heapFloat[(r14+2)] = f0;
	heap32[(r14+3)] = 0;
	r15 = heap32[(r1)];
	r15 = r15 >> 2;
	r15 = heap32[(r15+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r15)>>2](i7);
	r16 = r_g0 >> 2;
	r16 = heap32[(r16)];
	r16 = r16 >> 2;
	r16 = heap32[(r16+2)];
	r17 = sp + -152;
	r18 = r17 >> 2;
	heap32[(fp+-38)] = 0;
	heap32[(r18+1)] = 0;
	heap32[(r18+2)] = 0;
	heap32[(r18+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r8;
	heap32[(g0+2)] = r13;
	heap32[(g0+3)] = r17;
	r15 = r12 & 3;
	__FUNCTION_TABLE__[(r16)>>2](i7);
if(!(r15 !=0)) //_LBB669_28
{
	r15 = heap32[(r1)];
	r15 = r15 >> 2;
	r15 = heap32[(r15+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r15)>>2](i7);
	r16 = r_g0 >> 2;
	r16 = heap32[(r16)];
	r16 = r16 >> 2;
	r16 = heap32[(r16+2)];
	r17 = sp + -136;
	r18 = r17 >> 2;
	heap32[(fp+-34)] = 0;
	heap32[(r18+1)] = 0;
	heap32[(r18+2)] = 0;
	heap32[(r18+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r6;
	heap32[(g0+2)] = r13;
	heap32[(g0+3)] = r17;
	__FUNCTION_TABLE__[(r16)>>2](i7);
}
	heap32[(fp+-102)] = heap32[(fp+-118)];
	heap32[(r9+1)] = heap32[(r14+1)];
	r12 = (r12 + 1)|0;
	heap32[(r9+2)] = heap32[(r14+2)];
	heap32[(r9+3)] = heap32[(r14+3)];
if(!(r12 !=32)) //_LBB669_26
{
break _20;
}
}
	r2 = heap32[(r10+6)];
	f0 = heapFloat[(r10+110)];
	heapFloat[(fp+-193)] = f0;
	f0 = heapFloat[(r10+125)];
	heapFloat[(fp+-194)] = f0;
	r2 = r2 >> 2;
	f0 = heapFloat[(r2+84)];
	f1 = heapFloat[(fp+-192)];
	if(f0 <=f1) //_LBB669_31
{
	r2 = heap32[(r10+5)];
	r2 = r2 >> 2;
	f0 = heapFloat[(r10+84)];
	f1 = heapFloat[(r2+9)];
	f2 = heapFloat[(r2+5)];
	f3 = heapFloat[(r2+1)];
	f4 = heapFloat[(r10+85)];
	f5 = heapFloat[(r2+10)];
	f6 = heapFloat[(r2+6)];
	f8 = heapFloat[(r2+2)];
	f12 = heapFloat[(r10+74)];
	f13 = heapFloat[(r10+78)];
	f14 = heapFloat[(r10+73)];
	f15 = heapFloat[(r10+77)];
	f7 = heapFloat[(r10+72)];
	f9 = heapFloat[(r10+76)];
	f10 = f1*f0;
	f11 = f5*f4;
	f16 = f2*f0;
	f17 = f6*f4;
	f0 = f3*f0;
	f4 = f8*f4;
	f18 = heapFloat[(r10+86)];
	f19 = heapFloat[(r2+11)];
	f20 = heapFloat[(r2+7)];
	f21 = heapFloat[(r2+3)];
	f22 = heapFloat[(r10+82)];
	f23 = heapFloat[(r10+81)];
	f24 = heapFloat[(r10+80)];
	f10 = f10+f11;
	f11 = f19*f18;
	f16 = f16+f17;
	f17 = f20*f18;
	f0 = f0+f4;
	heapFloat[(fp+-192)] = f0;
	f4 = f21*f18;
	f18 = f12*f1;
	f25 = f13*f5;
	f26 = f14*f1;
	f27 = f15*f5;
	f1 = f7*f1;
	f5 = f9*f5;
	f28 = f12*f2;
	f29 = f13*f6;
	f30 = f14*f2;
	f0 = f15*f6;
	f2 = f7*f2;
	f6 = f9*f6;
	f12 = f12*f3;
	f13 = f13*f8;
	f14 = f14*f3;
	f15 = f15*f8;
	f3 = f7*f3;
	f8 = f9*f8;
	f7 = f10+f11;
	f9 = heapFloat[(r2+15)];
	f10 = f16+f17;
	f11 = heapFloat[(r2+14)];
	f16 = heapFloat[(fp+-192)];
	f4 = f16+f4;
	f16 = heapFloat[(r2+13)];
	f17 = f18+f25;
	f18 = f22*f19;
	f25 = f26+f27;
	f26 = f23*f19;
	f1 = f1+f5;
	f5 = f24*f19;
	f19 = f28+f29;
	f27 = f22*f20;
	f0 = f30+f0;
	f28 = f23*f20;
	f2 = f2+f6;
	f6 = f24*f20;
	f20 = f12+f13;
	f22 = f22*f21;
	f29 = f14+f15;
	f23 = f23*f21;
	f3 = f3+f8;
	f21 = f24*f21;
	f12 = f7+f9;
	f13 = f10+f11;
	f4 = f4+f16;
	f14 = f17+f18;
	f15 = f25+f26;
	f1 = f1+f5;
	f5 = f19+f27;
	f0 = f0+f28;
	f2 = f2+f6;
	f6 = f20+f22;
	f8 = f29+f23;
	f3 = f3+f21;
}
else{
	f0 = heapFloat[(r10+100)];
	f1 = heapFloat[(r2+9)];
	f2 = heapFloat[(r2+5)];
	f3 = heapFloat[(r2+1)];
	f4 = heapFloat[(r10+101)];
	f5 = heapFloat[(r2+10)];
	f6 = heapFloat[(r2+6)];
	f7 = heapFloat[(r2+2)];
	f8 = heapFloat[(r10+90)];
	f9 = heapFloat[(r10+94)];
	f10 = heapFloat[(r10+89)];
	f11 = heapFloat[(r10+93)];
	f12 = heapFloat[(r10+88)];
	f13 = heapFloat[(r10+92)];
	f14 = f1*f0;
	f15 = f5*f4;
	f16 = f2*f0;
	f17 = f6*f4;
	f0 = f3*f0;
	f4 = f7*f4;
	f18 = heapFloat[(r10+102)];
	f19 = heapFloat[(r2+11)];
	f20 = heapFloat[(r2+7)];
	f21 = heapFloat[(r2+3)];
	f22 = heapFloat[(r10+98)];
	f23 = heapFloat[(r10+97)];
	f24 = heapFloat[(r10+96)];
	f14 = f14+f15;
	f15 = f19*f18;
	f16 = f16+f17;
	f17 = f20*f18;
	f0 = f0+f4;
	heapFloat[(fp+-192)] = f0;
	f4 = f21*f18;
	f18 = f8*f1;
	f25 = f9*f5;
	f26 = f10*f1;
	f27 = f11*f5;
	f1 = f12*f1;
	f5 = f13*f5;
	f28 = f8*f2;
	f29 = f9*f6;
	f30 = f10*f2;
	f0 = f11*f6;
	f2 = f12*f2;
	f6 = f13*f6;
	f8 = f8*f3;
	f9 = f9*f7;
	f10 = f10*f3;
	f11 = f11*f7;
	f3 = f12*f3;
	f7 = f13*f7;
	f12 = f14+f15;
	f13 = heapFloat[(r2+15)];
	f14 = f16+f17;
	f15 = heapFloat[(r2+14)];
	f16 = heapFloat[(fp+-192)];
	f4 = f16+f4;
	f16 = heapFloat[(r2+13)];
	f17 = f18+f25;
	f18 = f22*f19;
	f25 = f26+f27;
	f26 = f23*f19;
	f1 = f1+f5;
	f5 = f24*f19;
	f19 = f28+f29;
	f27 = f22*f20;
	f0 = f30+f0;
	f28 = f23*f20;
	f2 = f2+f6;
	f6 = f24*f20;
	f8 = f8+f9;
	f9 = f22*f21;
	f10 = f10+f11;
	f11 = f23*f21;
	f3 = f3+f7;
	f7 = f24*f21;
	f12 = f12+f13;
	f13 = f14+f15;
	f4 = f4+f16;
	f14 = f17+f18;
	f15 = f25+f26;
	f1 = f1+f5;
	f5 = f19+f27;
	f0 = f0+f28;
	f2 = f2+f6;
	f6 = f8+f9;
	f8 = f10+f11;
	f3 = f3+f7;
}
	heapFloat[(fp+-98)] = f3;
	heapFloat[(r11+1)] = f8;
	heapFloat[(r11+2)] = f6;
	heap32[(r11+3)] = 0;
	heapFloat[(r11+4)] = f2;
	heapFloat[(r11+5)] = f0;
	heapFloat[(r11+6)] = f5;
	heap32[(r11+7)] = 0;
	heapFloat[(r11+8)] = f1;
	heapFloat[(r11+9)] = f15;
	heapFloat[(r11+10)] = f14;
	heap32[(r11+11)] = 0;
	heapFloat[(r11+12)] = f4;
	heapFloat[(r11+13)] = f13;
	heapFloat[(r11+14)] = f12;
	r2 = sp + -424;
	heap32[(r11+15)] = 0;
	r8 = r2 >> 2;
	heapFloat[(fp+-106)] = f4;
	heapFloat[(r8+1)] = f13;
	heapFloat[(r8+2)] = f12;
	r9 = sp + -440;
	heap32[(r8+3)] = 0;
	r8 = r9 >> 2;
	heapFloat[(fp+-110)] = f3;
	heapFloat[(r8+1)] = f2;
	heapFloat[(r8+2)] = f1;
	r10 = sp + -456;
	heap32[(r8+3)] = 0;
	r8 = r10 >> 2;
	heapFloat[(fp+-114)] = f8;
	heapFloat[(r8+1)] = f0;
	heapFloat[(r8+2)] = f15;
	heap32[(r8+3)] = 0;
	r8 = heap32[(r1)];
	r8 = r8 >> 2;
	r8 = heap32[(r8+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	r11 = r_g0 >> 2;
	r11 = heap32[(r11)];
	r11 = r11 >> 2;
	r11 = heap32[(r11+15)];
	r12 = sp + -120;
	r13 = r12 >> 2;
	heap32[(fp+-30)] = 0;
	heap32[(r13+1)] = 0;
	heap32[(r13+2)] = 0;
	heap32[(r13+3)] = 0;
	f0 = heapFloat[(fp+-194)];
	f1 = -f0;
	f2 = heapFloat[(fp+-193)];
	f1 = f1-f2;
	f0 = f2-f0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r2;
	heap32[(g0+2)] = r9;
	heap32[(g0+3)] = r10;
	f2 = heapFloat[(fp+-191)];
	heapFloat[(g0+4)] = f2;
	heapFloat[(g0+5)] = f2;
	heapFloat[(g0+6)] = f1;
	heapFloat[(g0+7)] = f0;
	heap32[(g0+8)] = r12;
	heap32[(g0+9)] = 1;
	heap32[(g0+10)] = 1092616192;
	__FUNCTION_TABLE__[(r11)>>2](i7);
}
}
else{
	if(r11 ==6) //_LBB669_33
{
	r11 = sp + -536;
	r12 = r11 >> 2;
	heap32[(fp+-134)] = heap32[(r10+263)];
	heap32[(r12+1)] = heap32[(r10+264)];
	heap32[(r12+2)] = heap32[(r10+265)];
	heap32[(r12+3)] = heap32[(r10+266)];
	heap32[(r12+4)] = heap32[(r10+267)];
	heap32[(r12+5)] = heap32[(r10+268)];
	heap32[(r12+6)] = heap32[(r10+269)];
	heap32[(r12+7)] = heap32[(r10+270)];
	heap32[(r12+8)] = heap32[(r10+271)];
	heap32[(r12+9)] = heap32[(r10+272)];
	heap32[(r12+10)] = heap32[(r10+273)];
	heap32[(r12+11)] = heap32[(r10+274)];
	heap32[(r12+12)] = heap32[(r10+275)];
	heap32[(r12+13)] = heap32[(r10+276)];
	heap32[(r12+14)] = heap32[(r10+277)];
	heap32[(r12+15)] = heap32[(r10+278)];
if(!(r8 ==0)) //_LBB669_35
{
	r13 = heap32[(r1)];
	r13 = r13 >> 2;
	r13 = heap32[(r13+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r13)>>2](i7);
	r14 = r_g0 >> 2;
	r14 = heap32[(r14)];
	r14 = r14 >> 2;
	r14 = heap32[(r14+14)];
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r11;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+2)] = f0;
	__FUNCTION_TABLE__[(r14)>>2](i7);
}
	heap32[(fp+-134)] = heap32[(r10+279)];
	heap32[(r12+1)] = heap32[(r10+280)];
	heap32[(r12+2)] = heap32[(r10+281)];
	heap32[(r12+3)] = heap32[(r10+282)];
	heap32[(r12+4)] = heap32[(r10+283)];
	heap32[(r12+5)] = heap32[(r10+284)];
	heap32[(r12+6)] = heap32[(r10+285)];
	heap32[(r12+7)] = heap32[(r10+286)];
	heap32[(r12+8)] = heap32[(r10+287)];
	heap32[(r12+9)] = heap32[(r10+288)];
	heap32[(r12+10)] = heap32[(r10+289)];
	heap32[(r12+11)] = heap32[(r10+290)];
	heap32[(r12+12)] = heap32[(r10+291)];
	heap32[(r12+13)] = heap32[(r10+292)];
	heap32[(r12+14)] = heap32[(r10+293)];
	heap32[(r12+15)] = heap32[(r10+294)];
if(!(r8 ==0)) //_LBB669_37
{
	r8 = heap32[(r1)];
	r8 = r8 >> 2;
	r8 = heap32[(r8+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	r13 = r_g0 >> 2;
	r13 = heap32[(r13)];
	r13 = r13 >> 2;
	r13 = heap32[(r13+14)];
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r11;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+2)] = f0;
	__FUNCTION_TABLE__[(r13)>>2](i7);
}
	if(r9 ==0) //_LBB669_52
{
break _7;
}
else{
	r2 = (r2 + 1164)|0;
	f0 = heapFloat[(r10+263)];
	heapFloat[(fp+-134)] = f0;
	heap32[(r12+1)] = heap32[(r10+264)];
	f1 = heapFloat[(r10+265)];
	heapFloat[(r12+2)] = f1;
	heap32[(r12+3)] = heap32[(r10+266)];
	f2 = heapFloat[(r10+267)];
	heapFloat[(r12+4)] = f2;
	heap32[(r12+5)] = heap32[(r10+268)];
	f3 = heapFloat[(r10+269)];
	heapFloat[(r12+6)] = f3;
	heap32[(r12+7)] = heap32[(r10+270)];
	f4 = heapFloat[(r10+271)];
	heapFloat[(r12+8)] = f4;
	heap32[(r12+9)] = heap32[(r10+272)];
	f5 = heapFloat[(r10+273)];
	heapFloat[(r12+10)] = f5;
	heap32[(r12+11)] = heap32[(r10+274)];
	heap32[(r12+12)] = heap32[(r10+275)];
	heap32[(r12+13)] = heap32[(r10+276)];
	heap32[(r12+14)] = heap32[(r10+277)];
	r8 = sp + -552;
	heap32[(r12+15)] = heap32[(r10+278)];
	r9 = r8 >> 2;
	heapFloat[(fp+-138)] = f1;
	heapFloat[(r9+1)] = f3;
	heapFloat[(r9+2)] = f5;
	heap32[(r9+3)] = 0;
	r9 = sp + -568;
	heapFloat[(fp+-142)] = f0;
	r13 = r9 >> 2;
	heapFloat[(r13+1)] = f2;
	heapFloat[(r13+2)] = f4;
	heap32[(r13+3)] = 0;
	r14 = heap32[(r1)];
	r14 = r14 >> 2;
	r14 = heap32[(r14+4)];
	f0 = heapFloat[(r10+230)];
	f1 = heapFloat[(r10+231)];
	f2 = heapFloat[(r10+246)];
	f3 = heapFloat[(r10+247)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r14)>>2](i7);
	r15 = r_g0 >> 2;
	r15 = heap32[(r15)];
	r15 = r15 >> 2;
	r15 = heap32[(r15+16)];
	r16 = sp + -104;
	r17 = r16 >> 2;
	heap32[(fp+-26)] = 0;
	heap32[(r17+1)] = 0;
	heap32[(r17+2)] = 0;
	heap32[(r17+3)] = 0;
	f4 =       0.89999997615814209;
	f5 = heapFloat[(fp+-191)];
	f4 = f5*f4;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r2;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = r9;
	heapFloat[(g0+4)] = f4;
	heapFloat[(g0+5)] = f0;
	heapFloat[(g0+6)] = f1;
	heapFloat[(g0+7)] = f2;
	heapFloat[(g0+8)] = f3;
	heap32[(g0+9)] = r16;
	heap32[(g0+10)] = 1092616192;
	__FUNCTION_TABLE__[(r15)>>2](i7);
	f0 = heapFloat[(r12+9)];
	f1 = heapFloat[(r12+5)];
	heap32[(fp+-142)] = heap32[(r12+1)];
	heapFloat[(r13+1)] = f1;
	heapFloat[(r13+2)] = f0;
	heap32[(r13+3)] = 0;
	f0 = heapFloat[(r10+296)];
	f1 = heapFloat[(r10+297)];
	heapFloat[(g0)] = f0;
	cosf(i7);
	f2 = f_g0;
	heapFloat[(g0)] = f0;
	sinf(i7);
	f0 = f_g0;
	heapFloat[(g0)] = f1;
	cosf(i7);
	f3 = f_g0;
	heapFloat[(g0)] = f1;
	sinf(i7);
	f4 = heapFloat[(fp+-142)];
	f5 = f2*f3;
	f6 = heapFloat[(r13+1)];
	f7 = f2*f_g0;
	f8 = heapFloat[(r13+2)];
	f5 = f5*f4;
	f7 = f7*f6;
	f9 = f3*f0;
	f10 = f_g0*f0;
	f5 = f5+f7;
	f0 = f8*f0;
	r8 = sp + -584;
	f7 = f9*f4;
	f9 = f10*f6;
	f3 = f6*f3;
	f1 = f4*f_g0;
	f0 = f5-f0;
	r9 = r8 >> 2;
	f4 = f7+f9;
	f2 = f8*f2;
	f1 = f3-f1;
	heapFloat[(fp+-146)] = f0;
	f0 = f4+f2;
	heapFloat[(r9+1)] = f1;
	heapFloat[(r9+2)] = f0;
	f0 = heapFloat[(r10+279)];
	heapFloat[(fp+-134)] = f0;
	heap32[(r12+1)] = heap32[(r10+280)];
	heap32[(r12+2)] = heap32[(r10+281)];
	heap32[(r12+3)] = heap32[(r10+282)];
	f1 = heapFloat[(r10+283)];
	heapFloat[(r12+4)] = f1;
	heap32[(r12+5)] = heap32[(r10+284)];
	heap32[(r12+6)] = heap32[(r10+285)];
	heap32[(r12+7)] = heap32[(r10+286)];
	f2 = heapFloat[(r10+287)];
	heapFloat[(r12+8)] = f2;
	heap32[(r12+9)] = heap32[(r10+288)];
	heap32[(r12+10)] = heap32[(r10+289)];
	heap32[(r12+11)] = heap32[(r10+290)];
	heap32[(r12+12)] = heap32[(r10+291)];
	heap32[(r12+13)] = heap32[(r10+292)];
	heap32[(r12+14)] = heap32[(r10+293)];
	r9 = sp + -600;
	f0 = -f0;
	heap32[(r12+15)] = heap32[(r10+294)];
	r13 = r9 >> 2;
	f1 = -f1;
	heapFloat[(fp+-150)] = f0;
	f0 = -f2;
	heapFloat[(r13+1)] = f1;
	heapFloat[(r13+2)] = f0;
	heap32[(r13+3)] = 0;
	f0 = heapFloat[(r10+214)];
	f1 = heapFloat[(r10+215)];
	if(f0 <=f1) //_LBB669_40
{
if(!(f0 >=f1)) //_LBB669_42
{
	r13 = heap32[(r1)];
	r13 = r13 >> 2;
	r13 = heap32[(r13+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r13)>>2](i7);
	r14 = r_g0 >> 2;
	r14 = heap32[(r14)];
	r14 = r14 >> 2;
	r14 = heap32[(r14+15)];
	r15 = sp + -72;
	r16 = r15 >> 2;
	heap32[(fp+-18)] = 0;
	heap32[(r16+1)] = 0;
	heap32[(r16+2)] = 0;
	heap32[(r16+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r2;
	heap32[(g0+2)] = r9;
	heap32[(g0+3)] = r8;
	f2 = heapFloat[(fp+-191)];
	heapFloat[(g0+4)] = f2;
	heapFloat[(g0+5)] = f2;
	heapFloat[(g0+6)] = f0;
	heapFloat[(g0+7)] = f1;
	heap32[(g0+8)] = r15;
	heap32[(g0+9)] = 1;
	heap32[(g0+10)] = 1092616192;
	__FUNCTION_TABLE__[(r14)>>2](i7);
}
}
else{
	r13 = heap32[(r1)];
	r13 = r13 >> 2;
	r13 = heap32[(r13+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r13)>>2](i7);
	r14 = r_g0 >> 2;
	r14 = heap32[(r14)];
	r14 = r14 >> 2;
	r14 = heap32[(r14+15)];
	r15 = sp + -88;
	r16 = r15 >> 2;
	heap32[(fp+-22)] = 0;
	heap32[(r16+1)] = 0;
	heap32[(r16+2)] = 0;
	heap32[(r16+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r2;
	heap32[(g0+2)] = r9;
	heap32[(g0+3)] = r8;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+4)] = f0;
	heapFloat[(g0+5)] = f0;
	heap32[(g0+6)] = -1068953637;
	heap32[(g0+7)] = 1078530011;
	heap32[(g0+8)] = r15;
	heap32[(g0+9)] = 0;
	heap32[(g0+10)] = 1092616192;
	__FUNCTION_TABLE__[(r14)>>2](i7);
}
	heap32[(fp+-134)] = heap32[(r10+263)];
	heap32[(r12+1)] = heap32[(r10+264)];
	heap32[(r12+2)] = heap32[(r10+265)];
	heap32[(r12+3)] = heap32[(r10+266)];
	heap32[(r12+4)] = heap32[(r10+267)];
	heap32[(r12+5)] = heap32[(r10+268)];
	heap32[(r12+6)] = heap32[(r10+269)];
	heap32[(r12+7)] = heap32[(r10+270)];
	heap32[(r12+8)] = heap32[(r10+271)];
	heap32[(r12+9)] = heap32[(r10+272)];
	heap32[(r12+10)] = heap32[(r10+273)];
	heap32[(r12+11)] = heap32[(r10+274)];
	heap32[(r12+12)] = heap32[(r10+275)];
	heap32[(r12+13)] = heap32[(r10+276)];
	heap32[(r12+14)] = heap32[(r10+277)];
	r2 = sp + -616;
	heap32[(r12+15)] = heap32[(r10+278)];
	r8 = r2 >> 2;
	heap32[(fp+-154)] = heap32[(r10+167)];
	heap32[(r8+1)] = heap32[(r10+168)];
	heap32[(r8+2)] = heap32[(r10+169)];
	r9 = sp + -632;
	heap32[(r8+3)] = heap32[(r10+170)];
	r8 = r9 >> 2;
	heap32[(fp+-158)] = heap32[(r10+171)];
	heap32[(r8+1)] = heap32[(r10+172)];
	heap32[(r8+2)] = heap32[(r10+173)];
	heap32[(r8+3)] = heap32[(r10+174)];
	r8 = heap32[(r1)];
	r8 = r8 >> 2;
	r8 = heap32[(r8+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	r10 = r_g0 >> 2;
	r10 = heap32[(r10)];
	r10 = r10 >> 2;
	r10 = heap32[(r10+18)];
	r12 = sp + -56;
	r13 = r12 >> 2;
	heap32[(fp+-14)] = 0;
	heap32[(r13+1)] = 0;
	heap32[(r13+2)] = 0;
	heap32[(r13+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r2;
	heap32[(g0+2)] = r9;
	heap32[(g0+3)] = r11;
	heap32[(g0+4)] = r12;
	__FUNCTION_TABLE__[(r10)>>2](i7);
}
}
else{
	if(r11 ==7) //_LBB669_43
{
	r11 = sp + -696;
	r12 = r11 >> 2;
	heap32[(fp+-174)] = heap32[(r10+203)];
	heap32[(r12+1)] = heap32[(r10+204)];
	heap32[(r12+2)] = heap32[(r10+205)];
	heap32[(r12+3)] = heap32[(r10+206)];
	heap32[(r12+4)] = heap32[(r10+207)];
	heap32[(r12+5)] = heap32[(r10+208)];
	heap32[(r12+6)] = heap32[(r10+209)];
	heap32[(r12+7)] = heap32[(r10+210)];
	heap32[(r12+8)] = heap32[(r10+211)];
	heap32[(r12+9)] = heap32[(r10+212)];
	heap32[(r12+10)] = heap32[(r10+213)];
	heap32[(r12+11)] = heap32[(r10+214)];
	heap32[(r12+12)] = heap32[(r10+215)];
	heap32[(r12+13)] = heap32[(r10+216)];
	heap32[(r12+14)] = heap32[(r10+217)];
	heap32[(r12+15)] = heap32[(r10+218)];
if(!(r8 ==0)) //_LBB669_45
{
	r13 = heap32[(r1)];
	r13 = r13 >> 2;
	r13 = heap32[(r13+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r13)>>2](i7);
	r14 = r_g0 >> 2;
	r14 = heap32[(r14)];
	r14 = r14 >> 2;
	r14 = heap32[(r14+14)];
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r11;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+2)] = f0;
	__FUNCTION_TABLE__[(r14)>>2](i7);
}
	heap32[(fp+-174)] = heap32[(r10+219)];
	heap32[(r12+1)] = heap32[(r10+220)];
	heap32[(r12+2)] = heap32[(r10+221)];
	heap32[(r12+3)] = heap32[(r10+222)];
	heap32[(r12+4)] = heap32[(r10+223)];
	heap32[(r12+5)] = heap32[(r10+224)];
	heap32[(r12+6)] = heap32[(r10+225)];
	heap32[(r12+7)] = heap32[(r10+226)];
	heap32[(r12+8)] = heap32[(r10+227)];
	heap32[(r12+9)] = heap32[(r10+228)];
	heap32[(r12+10)] = heap32[(r10+229)];
	heap32[(r12+11)] = heap32[(r10+230)];
	heap32[(r12+12)] = heap32[(r10+231)];
	heap32[(r12+13)] = heap32[(r10+232)];
	heap32[(r12+14)] = heap32[(r10+233)];
	heap32[(r12+15)] = heap32[(r10+234)];
if(!(r8 ==0)) //_LBB669_47
{
	r8 = heap32[(r1)];
	r8 = r8 >> 2;
	r8 = heap32[(r8+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	r12 = r_g0 >> 2;
	r12 = heap32[(r12)];
	r12 = r12 >> 2;
	r12 = heap32[(r12+14)];
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r11;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+2)] = f0;
	__FUNCTION_TABLE__[(r12)>>2](i7);
}
	if(r9 ==0) //_LBB669_52
{
break _7;
}
else{
	r8 = (r2 + 924)|0;
	r9 = heapU8[r2+168];
	if(r9 ==0) //_LBB669_50
{
	r2 = (r2 + 876)|0;
}
else{
	r2 = (r2 + 812)|0;
}
	r2 = r2 >> 2;
	f0 = heapFloat[(r2+1)];
	f1 = heapFloat[(r10+43)];
	f2 = heapFloat[(r2)];
	f3 = heapFloat[(r2+2)];
	f4 = heapFloat[(r2+5)];
	f5 = heapFloat[(r2+4)];
	f6 = f2*f1;
	f7 = heapFloat[(fp+-192)];
	f8 = f0*f7;
	f9 = heapFloat[(r2+6)];
	f10 = heapFloat[(r2+9)];
	f11 = heapFloat[(r2+8)];
	f12 = f5*f1;
	f13 = f4*f7;
	f6 = f6+f8;
	f3 = f3*f7;
	f14 = heapFloat[(r2+10)];
	f1 = f11*f1;
	f15 = f10*f7;
	f12 = f12+f13;
	f9 = f9*f7;
	f6 = f6+f3;
	f16 = heapFloat[(r2+12)];
	f17 = heapFloat[(r2+13)];
	f18 = heapFloat[(r2+14)];
	r2 = sp + -712;
	f12 = f12+f9;
	f1 = f1+f15;
	f7 = f14*f7;
	f6 = f6+f16;
	f1 = f1+f7;
	r9 = r2 >> 2;
	f12 = f12+f17;
	heapFloat[(fp+-178)] = f6;
	f1 = f1+f18;
	heapFloat[(r9+1)] = f12;
	heapFloat[(r9+2)] = f1;
	heap32[(r9+3)] = 0;
	f1 = heapFloat[(r10+44)];
	f6 = f2*f1;
	f12 = f5*f1;
	f6 = f6+f8;
	f1 = f11*f1;
	f8 = f12+f13;
	f3 = f6+f3;
	r9 = sp + -728;
	f1 = f1+f15;
	f6 = f8+f9;
	f3 = f3+f16;
	f1 = f1+f7;
	r11 = r9 >> 2;
	f6 = f6+f17;
	heapFloat[(fp+-182)] = f3;
	f1 = f1+f18;
	heapFloat[(r11+1)] = f6;
	heapFloat[(r11+2)] = f1;
	heap32[(r11+3)] = 0;
	r11 = heap32[(r1)];
	r11 = r11 >> 2;
	r11 = heap32[(r11+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r11)>>2](i7);
	r12 = r_g0 >> 2;
	r12 = heap32[(r12)];
	r12 = r12 >> 2;
	r12 = heap32[(r12+2)];
	r13 = sp + -40;
	r14 = r13 >> 2;
	heap32[(fp+-10)] = 0;
	heap32[(r14+1)] = 0;
	heap32[(r14+2)] = 0;
	heap32[(r14+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r2;
	heap32[(g0+2)] = r9;
	heap32[(g0+3)] = r13;
	__FUNCTION_TABLE__[(r12)>>2](i7);
	r2 = sp + -744;
	r9 = r2 >> 2;
	heapFloat[(fp+-186)] = f2;
	heapFloat[(r9+1)] = f5;
	heapFloat[(r9+2)] = f11;
	r11 = sp + -760;
	heap32[(r9+3)] = 0;
	r9 = r11 >> 2;
	heapFloat[(fp+-190)] = f0;
	heapFloat[(r9+1)] = f4;
	heapFloat[(r9+2)] = f10;
	heap32[(r9+3)] = 0;
	r9 = heap32[(r1)];
	r9 = r9 >> 2;
	r9 = heap32[(r9+4)];
	f0 = heapFloat[(r10+45)];
	f1 = heapFloat[(r10+46)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r9)>>2](i7);
	r10 = r_g0 >> 2;
	r10 = heap32[(r10)];
	r10 = r10 >> 2;
	r10 = heap32[(r10+15)];
	r12 = sp + -24;
	r13 = r12 >> 2;
	heap32[(fp+-6)] = 0;
	heap32[(r13+1)] = 0;
	heap32[(r13+2)] = 0;
	heap32[(r13+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r8;
	heap32[(g0+2)] = r2;
	heap32[(g0+3)] = r11;
	f2 = heapFloat[(fp+-191)];
	heapFloat[(g0+4)] = f2;
	heapFloat[(g0+5)] = f2;
	heapFloat[(g0+6)] = f0;
	heapFloat[(g0+7)] = f1;
	heap32[(g0+8)] = r12;
	heap32[(g0+9)] = 1;
	heap32[(g0+10)] = 1092616192;
	__FUNCTION_TABLE__[(r10)>>2](i7);
}
}
else{
break _7;
}
}
}
}
else{
	if(r11 ==3) //_LBB669_11
{
	r2 = sp + -232;
	r9 = r2 >> 2;
	heap32[(fp+-58)] = 1065353216;
	heap32[(r9+1)] = 0;
	heap32[(r9+2)] = 0;
	heap32[(r9+3)] = 0;
	heap32[(r9+4)] = 0;
	heap32[(r9+5)] = 1065353216;
	heap32[(r9+6)] = 0;
	heap32[(r9+7)] = 0;
	heap32[(r9+8)] = 0;
	heap32[(r9+9)] = 0;
	heap32[(r9+10)] = 1065353216;
	heap32[(r9+11)] = 0;
	heap32[(r9+12)] = 0;
	heap32[(r9+13)] = 0;
	heap32[(r9+14)] = 0;
	heap32[(r9+15)] = 0;
	r11 = heap32[(r10+5)];
	r11 = r11 >> 2;
	f0 = heapFloat[(r10+72)];
	f1 = heapFloat[(r11+1)];
	f2 = heapFloat[(r10+73)];
	f3 = heapFloat[(r11+2)];
	f4 = heapFloat[(r11+5)];
	f5 = heapFloat[(r11+6)];
	f1 = f1*f0;
	f3 = f3*f2;
	f6 = heapFloat[(r10+74)];
	f7 = heapFloat[(r11+3)];
	f8 = heapFloat[(r11+9)];
	f9 = heapFloat[(r11+10)];
	f10 = heapFloat[(r11+7)];
	f4 = f4*f0;
	f5 = f5*f2;
	f1 = f1+f3;
	f3 = f7*f6;
	f7 = heapFloat[(r11+11)];
	f0 = f8*f0;
	f2 = f9*f2;
	f4 = f4+f5;
	f5 = f10*f6;
	f1 = f1+f3;
	f3 = heapFloat[(r11+13)];
	f8 = heapFloat[(r11+15)];
	f9 = heapFloat[(r11+14)];
	f4 = f4+f5;
	f0 = f0+f2;
	f2 = f7*f6;
	f1 = f1+f3;
	f0 = f0+f2;
	f2 = f4+f9;
	heapFloat[(r9+12)] = f1;
	f0 = f0+f8;
	heapFloat[(r9+13)] = f2;
	heapFloat[(r9+14)] = f0;
	heap32[(r9+15)] = 0;
	r11 = heap32[(r1)];
	r11 = r11 >> 2;
	r11 = heap32[(r11+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r11)>>2](i7);
	r12 = r_g0 >> 2;
	r12 = heap32[(r12)];
	r12 = r12 >> 2;
	r12 = heap32[(r12+14)];
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r2;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+2)] = f0;
	__FUNCTION_TABLE__[(r12)>>2](i7);
	r11 = heap32[(r10+6)];
	r11 = r11 >> 2;
	f0 = heapFloat[(r10+76)];
	f1 = heapFloat[(r11+1)];
	f2 = heapFloat[(r10+77)];
	f3 = heapFloat[(r11+2)];
	f4 = heapFloat[(r11+5)];
	f5 = heapFloat[(r11+6)];
	f1 = f1*f0;
	f3 = f3*f2;
	f6 = heapFloat[(r10+78)];
	f7 = heapFloat[(r11+3)];
	f8 = heapFloat[(r11+9)];
	f9 = heapFloat[(r11+10)];
	f10 = heapFloat[(r11+7)];
	f4 = f4*f0;
	f5 = f5*f2;
	f1 = f1+f3;
	f3 = f7*f6;
	f7 = heapFloat[(r11+11)];
	f0 = f8*f0;
	f2 = f9*f2;
	f4 = f4+f5;
	f5 = f10*f6;
	f1 = f1+f3;
	f3 = heapFloat[(r11+13)];
	f8 = heapFloat[(r11+15)];
	f9 = heapFloat[(r11+14)];
	f4 = f4+f5;
	f0 = f0+f2;
	f2 = f7*f6;
	f1 = f1+f3;
	f0 = f0+f2;
	f2 = f4+f9;
	heapFloat[(r9+12)] = f1;
	f0 = f0+f8;
	heapFloat[(r9+13)] = f2;
	heapFloat[(r9+14)] = f0;
	heap32[(r9+15)] = 0;
if(!(r8 ==0)) //_LBB669_52
{
	r8 = heap32[(r1)];
	r8 = r8 >> 2;
	r8 = heap32[(r8+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	r9 = r_g0 >> 2;
	r9 = heap32[(r9)];
	r9 = r9 >> 2;
	r9 = heap32[(r9+14)];
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r2;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+2)] = f0;
	__FUNCTION_TABLE__[(r9)>>2](i7);
}
}
else{
	if(r11 ==4) //_LBB669_13
{
	r2 = heap32[(r10+5)];
	r2 = r2 >> 2;
	f0 = heapFloat[(r2+1)];
	f1 = heapFloat[(r10+135)];
	f2 = heapFloat[(r2+2)];
	f3 = heapFloat[(r10+139)];
	f4 = heapFloat[(r10+136)];
	f5 = heapFloat[(r10+140)];
	f6 = f1*f0;
	f7 = f3*f2;
	f8 = heapFloat[(r2+3)];
	f9 = heapFloat[(r10+143)];
	f10 = heapFloat[(r2+9)];
	f11 = heapFloat[(r10+147)];
	f12 = heapFloat[(r2+5)];
	f13 = heapFloat[(r10+137)];
	f14 = heapFloat[(r2+10)];
	f15 = heapFloat[(r10+148)];
	f16 = heapFloat[(r2+6)];
	f17 = heapFloat[(r10+141)];
	f18 = heapFloat[(r2+11)];
	f19 = heapFloat[(r10+149)];
	f20 = heapFloat[(r2+7)];
	f21 = heapFloat[(r10+145)];
	f22 = heapFloat[(r10+144)];
	f23 = f4*f0;
	f24 = f5*f2;
	f6 = f6+f7;
	f7 = f9*f8;
	f25 = heapFloat[(r2+15)];
	f26 = heapFloat[(r2+14)];
	f27 = heapFloat[(r2+13)];
	f28 = f13*f0;
	f29 = f17*f2;
	f23 = f23+f24;
	f24 = f22*f8;
	f6 = f6+f7;
	r2 = r3 >> 2;
	f7 = f28+f29;
	f28 = f21*f8;
	f23 = f23+f24;
	heapFloat[(fp+-74)] = f6;
	f6 = f1*f12;
	f24 = f3*f16;
	f7 = f7+f28;
	heapFloat[(r2+1)] = f23;
	heapFloat[(r2+2)] = f7;
	f7 = f4*f12;
	f23 = f5*f16;
	f6 = f6+f24;
	f24 = f9*f20;
	f28 = f13*f12;
	f29 = f17*f16;
	f7 = f7+f23;
	f23 = f22*f20;
	f6 = f6+f24;
	heap32[(r2+3)] = 0;
	f24 = f28+f29;
	f28 = f21*f20;
	f7 = f7+f23;
	heapFloat[(r2+4)] = f6;
	f1 = f1*f10;
	f3 = f3*f14;
	f6 = f24+f28;
	heapFloat[(r2+5)] = f7;
	heapFloat[(r2+6)] = f6;
	f4 = f4*f10;
	f5 = f5*f14;
	f1 = f1+f3;
	f3 = f9*f18;
	f6 = f13*f10;
	f7 = f17*f14;
	f4 = f4+f5;
	f5 = f22*f18;
	f1 = f1+f3;
	heap32[(r2+7)] = 0;
	f0 = f0*f11;
	f2 = f2*f15;
	f3 = f6+f7;
	f6 = f21*f18;
	f4 = f4+f5;
	heapFloat[(r2+8)] = f1;
	f1 = f12*f11;
	f5 = f16*f15;
	f0 = f0+f2;
	f2 = f8*f19;
	f3 = f3+f6;
	heapFloat[(r2+9)] = f4;
	f0 = f0+f2;
	heapFloat[(r2+10)] = f3;
	f2 = f10*f11;
	f3 = f14*f15;
	f1 = f1+f5;
	f4 = f20*f19;
	f1 = f1+f4;
	f2 = f2+f3;
	f3 = f18*f19;
	f0 = f0+f27;
	heap32[(r2+11)] = 0;
	f2 = f2+f3;
	f1 = f1+f26;
	heapFloat[(r2+12)] = f0;
	f0 = f2+f25;
	heapFloat[(r2+13)] = f1;
	heapFloat[(r2+14)] = f0;
	heap32[(r2+15)] = 0;
if(!(r8 ==0)) //_LBB669_15
{
	r11 = heap32[(r1)];
	r11 = r11 >> 2;
	r11 = heap32[(r11+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r11)>>2](i7);
	r12 = r_g0 >> 2;
	r12 = heap32[(r12)];
	r12 = r12 >> 2;
	r12 = heap32[(r12+14)];
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r3;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+2)] = f0;
	__FUNCTION_TABLE__[(r12)>>2](i7);
}
	r11 = heap32[(r10+6)];
	r11 = r11 >> 2;
	f0 = heapFloat[(r11+1)];
	f1 = heapFloat[(r10+151)];
	f2 = heapFloat[(r11+2)];
	f3 = heapFloat[(r10+155)];
	f4 = heapFloat[(r10+152)];
	f5 = heapFloat[(r10+156)];
	f6 = f1*f0;
	f7 = f3*f2;
	f8 = heapFloat[(r11+3)];
	f9 = heapFloat[(r10+159)];
	f10 = heapFloat[(r11+9)];
	f11 = heapFloat[(r10+163)];
	f12 = heapFloat[(r11+5)];
	f13 = heapFloat[(r10+153)];
	f14 = heapFloat[(r11+10)];
	f15 = heapFloat[(r10+164)];
	f16 = heapFloat[(r11+6)];
	f17 = heapFloat[(r10+157)];
	f18 = heapFloat[(r11+11)];
	f19 = heapFloat[(r10+165)];
	f20 = heapFloat[(r11+7)];
	f21 = heapFloat[(r10+161)];
	f22 = heapFloat[(r10+160)];
	f23 = f4*f0;
	f24 = f5*f2;
	f6 = f6+f7;
	f7 = f9*f8;
	f25 = heapFloat[(r11+15)];
	f26 = heapFloat[(r11+14)];
	f27 = heapFloat[(r11+13)];
	f28 = f13*f0;
	f29 = f17*f2;
	f23 = f23+f24;
	f24 = f22*f8;
	f6 = f6+f7;
	f7 = f28+f29;
	f28 = f21*f8;
	f23 = f23+f24;
	heapFloat[(fp+-74)] = f6;
	f6 = f1*f12;
	f24 = f3*f16;
	f7 = f7+f28;
	heapFloat[(r2+1)] = f23;
	heapFloat[(r2+2)] = f7;
	f7 = f4*f12;
	f23 = f5*f16;
	f6 = f6+f24;
	f24 = f9*f20;
	f28 = f13*f12;
	f29 = f17*f16;
	f7 = f7+f23;
	f23 = f22*f20;
	f6 = f6+f24;
	heap32[(r2+3)] = 0;
	f24 = f28+f29;
	f28 = f21*f20;
	f7 = f7+f23;
	heapFloat[(r2+4)] = f6;
	f1 = f1*f10;
	f3 = f3*f14;
	f6 = f24+f28;
	heapFloat[(r2+5)] = f7;
	heapFloat[(r2+6)] = f6;
	f4 = f4*f10;
	f5 = f5*f14;
	f1 = f1+f3;
	f3 = f9*f18;
	f6 = f13*f10;
	f7 = f17*f14;
	f4 = f4+f5;
	f5 = f22*f18;
	f1 = f1+f3;
	heap32[(r2+7)] = 0;
	f0 = f0*f11;
	f2 = f2*f15;
	f3 = f6+f7;
	f6 = f21*f18;
	f4 = f4+f5;
	heapFloat[(r2+8)] = f1;
	f1 = f12*f11;
	f5 = f16*f15;
	f0 = f0+f2;
	f2 = f8*f19;
	f3 = f3+f6;
	heapFloat[(r2+9)] = f4;
	f0 = f0+f2;
	heapFloat[(r2+10)] = f3;
	f2 = f10*f11;
	f3 = f14*f15;
	f1 = f1+f5;
	f4 = f20*f19;
	f1 = f1+f4;
	f2 = f2+f3;
	f3 = f18*f19;
	f0 = f0+f27;
	heap32[(r2+11)] = 0;
	f2 = f2+f3;
	f1 = f1+f26;
	heapFloat[(r2+12)] = f0;
	f0 = f2+f25;
	heapFloat[(r2+13)] = f1;
	heapFloat[(r2+14)] = f0;
	heap32[(r2+15)] = 0;
if(!(r8 ==0)) //_LBB669_17
{
	r8 = heap32[(r1)];
	r8 = r8 >> 2;
	r8 = heap32[(r8+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	r11 = r_g0 >> 2;
	r11 = heap32[(r11)];
	r11 = r11 >> 2;
	r11 = heap32[(r11+14)];
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r3;
	f0 = heapFloat[(fp+-191)];
	heapFloat[(g0+2)] = f0;
	__FUNCTION_TABLE__[(r11)>>2](i7);
}
	f0 = heapFloat[(r10+172)];
	f1 = heapFloat[(r10+173)];
if(!(f0 ==f1)) //_LBB669_52
{
if(!(r9 ==0)) //_LBB669_52
{
	r8 = sp + -312;
	r9 = r8 >> 2;
	heap32[(fp+-78)] = heap32[(r2+2)];
	heap32[(r9+1)] = heap32[(r2+6)];
	heap32[(r9+2)] = heap32[(r2+10)];
	r10 = sp + -328;
	heap32[(r9+3)] = 0;
	r9 = r10 >> 2;
	heap32[(fp+-82)] = heap32[(fp+-74)];
	heap32[(r9+1)] = heap32[(r2+4)];
	heap32[(r9+2)] = heap32[(r2+8)];
	heap32[(r9+3)] = 0;
	r2 = heap32[(r1)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r9 = r_g0 >> 2;
	r9 = heap32[(r9)];
	r9 = r9 >> 2;
	r9 = heap32[(r9+15)];
	r11 = sp + -168;
	r12 = r11 >> 2;
	heap32[(fp+-42)] = 0;
	heap32[(r12+1)] = 0;
	heap32[(r12+2)] = 0;
	heap32[(r12+3)] = 0;
	f2 =        6.2831854820251465;
	r12 = f0 <= f1;
	f3 = heapFloat[(fp+-192)];
	f3 = f0 > f1 ? f3 : f0;
	f0 = f0 > f1 ? f2 : f1;
	r12 = r12 & 1;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r5;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = r10;
	f1 = heapFloat[(fp+-191)];
	heapFloat[(g0+4)] = f1;
	heapFloat[(g0+5)] = f1;
	heapFloat[(g0+6)] = f3;
	heapFloat[(g0+7)] = f0;
	heap32[(g0+8)] = r11;
	heap32[(g0+9)] = r12;
	heap32[(g0+10)] = 1092616192;
	__FUNCTION_TABLE__[(r9)>>2](i7);
}
}
}
}
}
}
} while(0);
	r2 = (r7 + -1)|0;
	if(r7 !=0) //_LBB669_4
{
continue _5;
}
else{
break _5;
}
}
}
}
}
	r2 = heap32[(r1)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r2 = r_g0;
_74: do {
if(!(r2 ==0)) //_LBB669_60
{
	r2 = heap32[(r1)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r3 = r_g0 >> 2;
	r3 = heap32[(r3)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+12)];
	heap32[(g0)] = r_g0;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	r2 = r_g0 & 3;
if(!(r2 ==0)) //_LBB669_60
{
	r2 = heap32[(r1)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r2 = r_g0;
if(!(r2 ==0)) //_LBB669_60
{
	r2 = heap32[(r1)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r2 = r_g0 >> 2;
	r2 = heap32[(r2)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+12)];
	heap32[(g0)] = r_g0;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r0 = r_g0;
if(!(r0 ==0)) //_LBB669_60
{
	r0 = heap32[(r1+63)];
if(!(r0 <1)) //_LBB669_60
{
	r0 = 0;
_80: while(true){
	r2 = heap32[(r1+65)];
	r3 = r0 << 2;
	r2 = (r2 + r3)|0;
	r2 = r2 >> 2;
	r2 = heap32[(r2)];
	r3 = r2 >> 2;
	r3 = heap32[(r3)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+3)];
	r4 = heap32[(r1+21)];
	heap32[(g0)] = r2;
	heap32[(g0+1)] = r4;
	r0 = (r0 + 1)|0;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	r2 = heap32[(r1+63)];
	if(r2 >r0) //_LBB669_59
{
continue _80;
}
else{
break _74;
}
}
}
}
}
}
}
} while(0);
	r0 = _ZN15CProfileManager11CurrentNodeE;
	r0 = r0 >> 2;
	r1 = heap32[(r0)];
	r2 = r1 >> 2;
	r3 = heap32[(r2+4)];
	r3 = (r3 + -1)|0;
	heap32[(r2+4)] = r3;
_83: do {
if(!(r3 !=0)) //_LBB669_66
{
	r3 = heap32[(r2+1)];
	if(r3 !=0) //_LBB669_63
{
	r1 = sp + -8;
	heap32[(g0)] = r1;
	heap32[(g0+1)] = 0;
	r3 = _ZL13gProfileClock_2E_0;
	gettimeofday(i7);
	r3 = r3 >> 2;
	r3 = heap32[(r3)];
	r3 = r3 >> 2;
	r1 = r1 >> 2;
	r4 = heap32[(fp+-2)];
	r5 = heap32[(r3)];
	r4 = (r4 - r5)|0;
	r1 = heap32[(r1+1)];
	r3 = heap32[(r3+1)];
	r1 = (r1 - r3)|0;
	r3 = (r4 * 1000000)|0;
	r1 = (r1 + r3)|0;
	r3 = heap32[(r2+3)];
	r1 = (r1 - r3)|0;
	f0 = uint(r1); //fuitos r1, f0
	f1 =                      1000;
	f2 = heapFloat[(r2+2)];
	f0 = f0/f1;
	f0 = f2+f0;
	heapFloat[(r2+2)] = f0;
	r1 = heap32[(r2+4)];
	if(r1 !=0) //_LBB669_66
{
break _83;
}
else{
	r1 = heap32[(r0)];
}
}
	r1 = r1 >> 2;
	r1 = heap32[(r1+5)];
	heap32[(r0)] = r1;
}
} while(0);
	return;
}