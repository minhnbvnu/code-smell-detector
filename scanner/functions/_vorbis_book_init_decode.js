function _vorbis_book_init_decode($c,$s) {
 $c = $c|0;
 $s = $s|0;
 var $$ = 0, $$0 = 0, $$01$i = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$lcssa63 = 0, $$n$0 = 0, $$pre = 0, $$pre52 = 0, $$pre54 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond48 = 0, $exitcond49 = 0, $exitcond50 = 0, $hi$012 = 0, $hi$1$lcssa = 0, $hi$18 = 0, $hi$2 = 0, $hival$0 = 0, $i$040 = 0;
 var $i$136 = 0, $i$233 = 0, $i$330 = 0, $i$425 = 0, $i$519 = 0, $i$616 = 0, $i$710 = 0, $j$014 = 0, $lo$011 = 0, $lo$1 = 0, $lo$1$lcssa = 0, $lo$1$op = 0, $lo$1$op$op = 0, $lo$2 = 0, $n$039 = 0, $n$2$lcssa = 0, $n$224 = 0, $n$3 = 0, $n$4$lcssa55 = 0, $n$418 = 0;
 var $n$5 = 0, $n$5$lcssa = 0, $phitmp = 0, $ret$0$lcssa$i = 0, $ret$02$i = 0, $ret$02$i$lcssa = 0, $storemerge2 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 dest=$c; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($s)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)>(0);
 if ($2) {
  $3 = ((($s)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $i$040 = 0;$n$039 = 0;
  while(1) {
   $5 = (($4) + ($i$040)|0);
   $6 = HEAP8[$5>>0]|0;
   $7 = ($6<<24>>24)>(0);
   $8 = $7&1;
   $$n$0 = (($8) + ($n$039))|0;
   $9 = (($i$040) + 1)|0;
   $10 = ($9|0)<($1|0);
   if ($10) {
    $i$040 = $9;$n$039 = $$n$0;
   } else {
    $13 = $$n$0;
    break;
   }
  }
 } else {
  $13 = 0;
 }
 $11 = ((($c)) + 4|0);
 HEAP32[$11>>2] = $1;
 $12 = ((($c)) + 8|0);
 HEAP32[$12>>2] = $13;
 $14 = HEAP32[$s>>2]|0;
 HEAP32[$c>>2] = $14;
 $15 = ($13|0)>(0);
 if (!($15)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $16 = ((($s)) + 8|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (__make_words($17,$1,$13)|0);
 $19 = $13 << 2;
 $$alloca_mul = $19;
 $20 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0;;
 $21 = ($18|0)==(0|0);
 if ($21) {
  $221 = ((($c)) + 16|0);
  $222 = HEAP32[$221>>2]|0;
  $223 = ($222|0)==(0|0);
  if (!($223)) {
   _free($222);
  }
  $224 = ((($c)) + 20|0);
  $225 = HEAP32[$224>>2]|0;
  $226 = ($225|0)==(0|0);
  if (!($226)) {
   _free($225);
  }
  $227 = ((($c)) + 24|0);
  $228 = HEAP32[$227>>2]|0;
  $229 = ($228|0)==(0|0);
  if (!($229)) {
   _free($228);
  }
  $230 = ((($c)) + 28|0);
  $231 = HEAP32[$230>>2]|0;
  $232 = ($231|0)==(0|0);
  if (!($232)) {
   _free($231);
  }
  $233 = ((($c)) + 32|0);
  $234 = HEAP32[$233>>2]|0;
  $235 = ($234|0)==(0|0);
  if (!($235)) {
   _free($234);
  }
  dest=$c; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 } else {
  $i$136 = 0;
 }
 while(1) {
  $22 = (($18) + ($i$136<<2)|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = $23 >>> 16;
  $25 = $23 << 16;
  $26 = $24 | $25;
  $27 = $26 >>> 8;
  $28 = $27 & 16711935;
  $29 = $26 << 8;
  $30 = $29 & -16711936;
  $31 = $28 | $30;
  $32 = $31 >>> 4;
  $33 = $32 & 252645135;
  $34 = $31 << 4;
  $35 = $34 & -252645136;
  $36 = $33 | $35;
  $37 = $36 >>> 2;
  $38 = $37 & 858993459;
  $39 = $36 << 2;
  $40 = $39 & -858993460;
  $41 = $38 | $40;
  $42 = $41 >>> 1;
  $43 = $42 & 1431655765;
  $44 = $41 << 1;
  $45 = $44 & -1431655766;
  $46 = $43 | $45;
  HEAP32[$22>>2] = $46;
  $47 = (($20) + ($i$136<<2)|0);
  HEAP32[$47>>2] = $22;
  $48 = (($i$136) + 1)|0;
  $exitcond50 = ($48|0)==($13|0);
  if ($exitcond50) {
   break;
  } else {
   $i$136 = $48;
  }
 }
 _qsort($20,$13,4,10);
 $$alloca_mul1 = $19;
 $49 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0;;
 $50 = (_malloc($19)|0);
 $51 = ((($c)) + 20|0);
 HEAP32[$51>>2] = $50;
 $52 = $18;
 $i$233 = 0;
 while(1) {
  $53 = (($20) + ($i$233<<2)|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = $54;
  $56 = (($55) - ($52))|0;
  $57 = $56 >> 2;
  $58 = (($49) + ($57<<2)|0);
  HEAP32[$58>>2] = $i$233;
  $59 = (($i$233) + 1)|0;
  $exitcond49 = ($59|0)==($13|0);
  if ($exitcond49) {
   $i$330 = 0;
   break;
  } else {
   $i$233 = $59;
  }
 }
 while(1) {
  $60 = (($18) + ($i$330<<2)|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = (($49) + ($i$330<<2)|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = (($50) + ($63<<2)|0);
  HEAP32[$64>>2] = $61;
  $65 = (($i$330) + 1)|0;
  $exitcond48 = ($65|0)==($13|0);
  if ($exitcond48) {
   break;
  } else {
   $i$330 = $65;
  }
 }
 _free($18);
 $66 = (__book_unquantize($s,$13,$49)|0);
 $67 = ((($c)) + 16|0);
 HEAP32[$67>>2] = $66;
 $68 = (_malloc($19)|0);
 $69 = ((($c)) + 24|0);
 HEAP32[$69>>2] = $68;
 $70 = HEAP32[$0>>2]|0;
 $71 = ($70|0)>(0);
 if ($71) {
  $$pre = HEAP32[$16>>2]|0;
  $i$425 = 0;$n$224 = 0;
  while(1) {
   $72 = (($$pre) + ($i$425)|0);
   $73 = HEAP8[$72>>0]|0;
   $74 = ($73<<24>>24)>(0);
   if ($74) {
    $75 = (($n$224) + 1)|0;
    $76 = (($49) + ($n$224<<2)|0);
    $77 = HEAP32[$76>>2]|0;
    $78 = (($68) + ($77<<2)|0);
    HEAP32[$78>>2] = $i$425;
    $n$3 = $75;
   } else {
    $n$3 = $n$224;
   }
   $79 = (($i$425) + 1)|0;
   $80 = ($79|0)<($70|0);
   if ($80) {
    $i$425 = $79;$n$224 = $n$3;
   } else {
    $n$2$lcssa = $n$3;
    break;
   }
  }
 } else {
  $n$2$lcssa = 0;
 }
 $81 = (_malloc($n$2$lcssa)|0);
 $82 = ((($c)) + 28|0);
 HEAP32[$82>>2] = $81;
 $83 = ((($c)) + 40|0);
 HEAP32[$83>>2] = 0;
 if ($71) {
  $$pre52 = HEAP32[$16>>2]|0;
  $236 = 0;$85 = $$pre52;$i$519 = 0;$n$418 = 0;
  while(1) {
   $84 = (($85) + ($i$519)|0);
   $86 = HEAP8[$84>>0]|0;
   $87 = ($86<<24>>24)>(0);
   if ($87) {
    $88 = (($n$418) + 1)|0;
    $89 = (($49) + ($n$418<<2)|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = HEAP32[$82>>2]|0;
    $92 = (($91) + ($90)|0);
    HEAP8[$92>>0] = $86;
    $93 = HEAP32[$16>>2]|0;
    $94 = (($93) + ($i$519)|0);
    $95 = HEAP8[$94>>0]|0;
    $96 = $95 << 24 >> 24;
    $97 = HEAP32[$83>>2]|0;
    $98 = ($96|0)>($97|0);
    if ($98) {
     HEAP32[$83>>2] = $96;
     $237 = $96;$238 = $93;$n$5 = $88;
    } else {
     $237 = $97;$238 = $93;$n$5 = $88;
    }
   } else {
    $237 = $236;$238 = $85;$n$5 = $n$418;
   }
   $99 = (($i$519) + 1)|0;
   $100 = HEAP32[$0>>2]|0;
   $101 = ($99|0)<($100|0);
   if ($101) {
    $236 = $237;$85 = $238;$i$519 = $99;$n$418 = $n$5;
   } else {
    $$lcssa63 = $237;$n$5$lcssa = $n$5;
    break;
   }
  }
  $102 = ($n$5$lcssa|0)==(1);
  if ($102) {
   $103 = ($$lcssa63|0)==(1);
   if ($103) {
    $104 = ((($c)) + 36|0);
    HEAP32[$104>>2] = 1;
    $105 = (_calloc(2,4)|0);
    $106 = ((($c)) + 32|0);
    HEAP32[$106>>2] = $105;
    $107 = ((($105)) + 4|0);
    HEAP32[$107>>2] = 1;
    HEAP32[$105>>2] = 1;
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   } else {
    $n$4$lcssa55 = 1;
   }
  } else {
   $n$4$lcssa55 = $n$5$lcssa;
  }
 } else {
  $n$4$lcssa55 = 0;
 }
 $108 = HEAP32[$12>>2]|0;
 $109 = ($108|0)==(0);
 if ($109) {
  $ret$0$lcssa$i = -4;
 } else {
  $$01$i = $108;$ret$02$i = 0;
  while(1) {
   $110 = $$01$i >>> 1;
   $111 = (($ret$02$i) + 1)|0;
   $112 = ($110|0)==(0);
   if ($112) {
    $ret$02$i$lcssa = $ret$02$i;
    break;
   } else {
    $$01$i = $110;$ret$02$i = $111;
   }
  }
  $phitmp = (($ret$02$i$lcssa) + -3)|0;
  $ret$0$lcssa$i = $phitmp;
 }
 $113 = ((($c)) + 36|0);
 $114 = ($ret$0$lcssa$i|0)<(5);
 $$ = $114 ? 5 : $ret$0$lcssa$i;
 $115 = ($$|0)>(8);
 $storemerge2 = $115 ? 8 : $$;
 HEAP32[$113>>2] = $storemerge2;
 $116 = 1 << $storemerge2;
 $117 = (_calloc($116,4)|0);
 $118 = ((($c)) + 32|0);
 HEAP32[$118>>2] = $117;
 $119 = ($n$4$lcssa55|0)>(0);
 if ($119) {
  $124 = $storemerge2;$i$616 = 0;
  while(1) {
   $120 = HEAP32[$82>>2]|0;
   $121 = (($120) + ($i$616)|0);
   $122 = HEAP8[$121>>0]|0;
   $123 = $122 << 24 >> 24;
   $125 = ($124|0)<($123|0);
   if ($125) {
    $239 = $124;
   } else {
    $126 = HEAP32[$51>>2]|0;
    $127 = (($126) + ($i$616<<2)|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = $128 >>> 16;
    $130 = $128 << 16;
    $131 = $129 | $130;
    $132 = $131 >>> 8;
    $133 = $132 & 16711935;
    $134 = $131 << 8;
    $135 = $134 & -16711936;
    $136 = $133 | $135;
    $137 = $136 >>> 4;
    $138 = $137 & 252645135;
    $139 = $136 << 4;
    $140 = $139 & -252645136;
    $141 = $138 | $140;
    $142 = $141 >>> 2;
    $143 = $142 & 858993459;
    $144 = $141 << 2;
    $145 = $144 & -858993460;
    $146 = $143 | $145;
    $147 = $146 >>> 1;
    $148 = $147 & 1431655765;
    $149 = $146 << 1;
    $150 = $149 & -1431655766;
    $151 = $148 | $150;
    $152 = (($124) - ($123))|0;
    $153 = ($152|0)==(31);
    if ($153) {
     $239 = $124;
    } else {
     $154 = (($i$616) + 1)|0;
     $156 = $123;$j$014 = 0;
     while(1) {
      $155 = $j$014 << $156;
      $157 = $151 | $155;
      $158 = (($117) + ($157<<2)|0);
      HEAP32[$158>>2] = $154;
      $159 = (($j$014) + 1)|0;
      $160 = HEAP32[$113>>2]|0;
      $161 = HEAP8[$121>>0]|0;
      $162 = $161 << 24 >> 24;
      $163 = (($160) - ($162))|0;
      $164 = 1 << $163;
      $165 = ($159|0)<($164|0);
      if ($165) {
       $156 = $162;$j$014 = $159;
      } else {
       $239 = $160;
       break;
      }
     }
    }
   }
   $166 = (($i$616) + 1)|0;
   $exitcond = ($166|0)==($n$4$lcssa55|0);
   if ($exitcond) {
    $168 = $239;
    break;
   } else {
    $124 = $239;$i$616 = $166;
   }
  }
 } else {
  $168 = $storemerge2;
 }
 $167 = (31 - ($168))|0;
 $169 = -2 << $167;
 $170 = ($storemerge2|0)==(31);
 if ($170) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else {
  $172 = $168;$hi$012 = 0;$i$710 = 0;$lo$011 = 0;
 }
 while(1) {
  $171 = (32 - ($172))|0;
  $173 = $i$710 << $171;
  $174 = $173 >>> 16;
  $175 = $173 << 16;
  $176 = $174 | $175;
  $177 = $176 >>> 8;
  $178 = $177 & 16711935;
  $179 = $176 << 8;
  $180 = $179 & -16711936;
  $181 = $178 | $180;
  $182 = $181 >>> 4;
  $183 = $182 & 252645135;
  $184 = $181 << 4;
  $185 = $184 & -252645136;
  $186 = $183 | $185;
  $187 = $186 >>> 2;
  $188 = $187 & 858993459;
  $189 = $186 << 2;
  $190 = $189 & -858993460;
  $191 = $188 | $190;
  $192 = $191 >>> 1;
  $193 = $192 & 1431655765;
  $194 = $191 << 1;
  $195 = $194 & -1431655766;
  $196 = $193 | $195;
  $197 = (($117) + ($196<<2)|0);
  $198 = HEAP32[$197>>2]|0;
  $199 = ($198|0)==(0);
  if ($199) {
   $lo$1 = $lo$011;
   while(1) {
    $200 = (($lo$1) + 1)|0;
    $201 = ($200|0)<($n$4$lcssa55|0);
    if (!($201)) {
     $lo$1$lcssa = $lo$1;
     break;
    }
    $202 = HEAP32[$51>>2]|0;
    $203 = (($202) + ($200<<2)|0);
    $204 = HEAP32[$203>>2]|0;
    $205 = ($204>>>0)>($173>>>0);
    if ($205) {
     $lo$1$lcssa = $lo$1;
     break;
    } else {
     $lo$1 = $200;
    }
   }
   $206 = ($n$4$lcssa55|0)>($hi$012|0);
   L80: do {
    if ($206) {
     $207 = HEAP32[$51>>2]|0;
     $hi$18 = $hi$012;
     while(1) {
      $208 = (($207) + ($hi$18<<2)|0);
      $209 = HEAP32[$208>>2]|0;
      $210 = $209 & $169;
      $211 = ($173>>>0)<($210>>>0);
      if ($211) {
       $hi$1$lcssa = $hi$18;
       break L80;
      }
      $212 = (($hi$18) + 1)|0;
      $213 = ($n$4$lcssa55|0)>($212|0);
      if ($213) {
       $hi$18 = $212;
      } else {
       $hi$1$lcssa = $212;
       break;
      }
     }
    } else {
     $hi$1$lcssa = $hi$012;
    }
   } while(0);
   $214 = (($n$4$lcssa55) - ($hi$1$lcssa))|0;
   $215 = ($lo$1$lcssa>>>0)>(32767);
   $216 = ($214>>>0)>(32767);
   $hival$0 = $216 ? 32767 : $214;
   $lo$1$op = $lo$1$lcssa << 15;
   $lo$1$op$op = $lo$1$op | -2147483648;
   $217 = $215 ? -1073774592 : $lo$1$op$op;
   $218 = $217 | $hival$0;
   HEAP32[$197>>2] = $218;
   $hi$2 = $hi$1$lcssa;$lo$2 = $lo$1$lcssa;
  } else {
   $hi$2 = $hi$012;$lo$2 = $lo$011;
  }
  $219 = (($i$710) + 1)|0;
  $220 = ($219|0)<($116|0);
  if (!($220)) {
   $$0 = 0;
   break;
  }
  $$pre54 = HEAP32[$113>>2]|0;
  $172 = $$pre54;$hi$012 = $hi$2;$i$710 = $219;$lo$011 = $lo$2;
 }
 STACKTOP = sp;return ($$0|0);
}