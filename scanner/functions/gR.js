function gR(e){let t=["abstract","and","as","assert","base","begin","class","default","delegate","do","done","downcast","downto","elif","else","end","exception","extern","finally","fixed","for","fun","function","global","if","in","inherit","inline","interface","internal","lazy","let","match","member","module","mutable","namespace","new","of","open","or","override","private","public","rec","return","static","struct","then","to","try","type","upcast","use","val","void","when","while","with","yield"],n={scope:"keyword",match:/\b(yield|return|let|do|match|use)!/},o=["if","else","endif","line","nowarn","light","r","i","I","load","time","help","quit"],s=["true","false","null","Some","None","Ok","Error","infinity","infinityf","nan","nanf"],c=["__LINE__","__SOURCE_DIRECTORY__","__SOURCE_FILE__"],u=["bool","byte","sbyte","int8","int16","int32","uint8","uint16","uint32","int","uint","int64","uint64","nativeint","unativeint","decimal","float","double","float32","single","char","string","unit","bigint","option","voption","list","array","seq","byref","exn","inref","nativeptr","obj","outref","voidptr","Result"],S={keyword:t,literal:s,built_in:["not","ref","raise","reraise","dict","readOnlyDict","set","get","enum","sizeof","typeof","typedefof","nameof","nullArg","invalidArg","invalidOp","id","fst","snd","ignore","lock","using","box","unbox","tryUnbox","printf","printfn","sprintf","eprintf","eprintfn","fprintf","fprintfn","failwith","failwithf"],"variable.constant":c},h={variants:[e.COMMENT(/\(\*(?!\))/,/\*\)/,{contains:["self"]}),e.C_LINE_COMMENT_MODE]},A=/[a-zA-Z_](\w|')*/,N={scope:"variable",begin:/``/,end:/``/},I=/\B('|\^)/,w={scope:"symbol",variants:[{match:Lt(I,/``.*?``/)},{match:Lt(I,e.UNDERSCORE_IDENT_RE)}],relevance:0},y=function({includeEqual:Q}){let H;Q?H="!%&*+-/<=>@^|~?":H="!%&*+-/<>@^|~?";let ge=Array.from(H),Ce=Lt("[",...ge.map(pR),"]"),Ae=wr(Ce,/\./),Fe=Lt(Ae,Gn(Ae)),Ze=wr(Lt(Fe,Ae,"*"),Lt(Ce,"+"));return{scope:"operator",match:wr(Ze,/:\?>/,/:\?/,/:>/,/:=/,/::?/,/\$/),relevance:0}},B=y({includeEqual:!0}),Y=y({includeEqual:!1}),z=function(Q,H){return{begin:Lt(Q,Gn(Lt(/\s*/,wr(/\w/,/'/,/\^/,/#/,/``/,/\(/,/{\|/)))),beginScope:H,end:Gn(wr(/\n/,/=/)),relevance:0,keywords:e.inherit(S,{type:u}),contains:[h,w,e.inherit(N,{scope:null}),Y]}},V=z(/:/,"operator"),X=z(/\bof\b/,"keyword"),ee={begin:[/(^|\s+)/,/type/,/\s+/,A],beginScope:{2:"keyword",4:"title.class"},end:Gn(/\(|=|$/),keywords:S,contains:[h,e.inherit(N,{scope:null}),w,{scope:"operator",match:/<|>/},V]},ie={scope:"computation-expression",match:/\b[_a-z]\w*(?=\s*\{)/},le={begin:[/^\s*/,Lt(/#/,wr(...o)),/\b/],beginScope:{2:"meta"},end:Gn(/\s|$/)},Ee={variants:[e.BINARY_NUMBER_MODE,e.C_NUMBER_MODE]},me={scope:"string",begin:/"/,end:/"/,contains:[e.BACKSLASH_ESCAPE]},ce={scope:"string",begin:/@"/,end:/"/,contains:[{match:/""/},e.BACKSLASH_ESCAPE]},be={scope:"string",begin:/"""/,end:/"""/,relevance:2},Me={scope:"subst",begin:/\{/,end:/\}/,keywords:S},Pe={scope:"string",begin:/\$"/,end:/"/,contains:[{match:/\{\{/},{match:/\}\}/},e.BACKSLASH_ESCAPE,Me]},Le={scope:"string",begin:/(\$@|@\$)"/,end:/"/,contains:[{match:/\{\{/},{match:/\}\}/},{match:/""/},e.BACKSLASH_ESCAPE,Me]},He={scope:"string",begin:/\$"""/,end:/"""/,contains:[{match:/\{\{/},{match:/\}\}/},Me],relevance:2},tt={scope:"string",match:Lt(/'/,wr(/[^\\']/,/\\(?:.|\d{3}|x[a-fA-F\d]{2}|u[a-fA-F\d]{4}|U[a-fA-F\d]{8})/),/'/)};return Me.contains=[Le,Pe,ce,me,tt,n,h,N,V,ie,le,Ee,w,B],{name:"F#",aliases:["fs","f#"],keywords:S,illegal:/\/\*/,classNameAliases:{"computation-expression":"keyword"},contains:[n,{variants:[He,Le,Pe,be,ce,me,tt]},h,N,ee,{scope:"meta",begin:/\[</,end:/>\]/,relevance:2,contains:[N,be,ce,me,tt,Ee]},X,V,ie,le,Ee,w,B]}}