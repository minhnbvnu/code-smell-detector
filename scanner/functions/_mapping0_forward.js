function _mapping0_forward($vb) {
 $vb = $vb|0;
 var $$ = 0, $$0 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$alloca_mul3 = 0, $$alloca_mul5 = 0, $$lcssa = 0, $$pre = 0, $$pre$phi53Z2D = 0, $$pre$phi55Z2D = 0, $$pre$phiZ2D = 0, $$pre51 = 0, $$pre52 = 0, $$pre54 = 0, $$sum = 0, $$sum1$us = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0.0;
 var $101 = 0.0, $102 = 0, $103 = 0, $104 = 0, $105 = 0.0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0.0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0.0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0.0, $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0.0, $307 = 0.0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0.0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0.0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0.0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0.0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0.0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0.0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0.0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0.0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0.0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0.0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0.0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0.0, $598 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0;
 var $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $ch_in_bundle$0$lcssa = 0, $ch_in_bundle$07 = 0, $ch_in_bundle$1 = 0, $ch_in_bundle$2$lcssa = 0, $ch_in_bundle$213 = 0;
 var $ch_in_bundle$3 = 0, $global_ampmax$0$lcssa = 0.0, $global_ampmax$037 = 0.0, $global_ampmax$1 = 0.0, $i$038 = 0, $i$129 = 0, $i$129$us = 0, $i$25 = 0, $i$318 = 0, $j$033 = 0, $j$123$us = 0, $j$26 = 0, $j$312 = 0, $k$222 = 0, $not$ = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = ((($vb)) + 64|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + 104|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($vb)) + 104|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($vb)) + 36|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($3)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13 << 2;
 $$alloca_mul = $14;
 $15 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0;;
 $16 = (__vorbis_block_alloc($vb,$14)|0);
 $17 = HEAP32[$12>>2]|0;
 $18 = $17 << 2;
 $19 = (__vorbis_block_alloc($vb,$18)|0);
 $20 = HEAP32[$12>>2]|0;
 $21 = $20 << 2;
 $22 = (__vorbis_block_alloc($vb,$21)|0);
 $23 = ((($9)) + 4|0);
 $24 = +HEAPF32[$23>>2];
 $25 = HEAP32[$12>>2]|0;
 $26 = $25 << 2;
 $$alloca_mul1 = $26;
 $27 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0;;
 $28 = ((($9)) + 8|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ((($vb)) + 28|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = (((($5)) + 544|0) + ($31<<2)|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ((($7)) + 56|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = ($31|0)!=(0);
 $37 = $36 ? 2 : 0;
 $$sum = (($37) + ($29))|0;
 $38 = (($35) + (($$sum*52)|0)|0);
 $39 = ((($vb)) + 40|0);
 HEAP32[$39>>2] = $31;
 $40 = ($25|0)>(0);
 if ($40) {
  $41 = (+($11|0));
  $42 = 4.0 / $41;
  $43 = (HEAPF32[tempDoublePtr>>2]=$42,HEAP32[tempDoublePtr>>2]|0);
  $44 = (($11|0) / 2)&-1;
  $45 = $44 << 2;
  $46 = $43 & 2147483647;
  $47 = (+($46>>>0));
  $48 = $47 * 7.1771142984289327E-7;
  $49 = $48 + -764.6162109375;
  $50 = $49;
  $51 = $50 + 0.34499999999999997;
  $52 = $51;
  $53 = ((($7)) + 4|0);
  $54 = ((($vb)) + 24|0);
  $55 = ((($vb)) + 32|0);
  $56 = $52 + -764.6162109375;
  $57 = (($11) + -1)|0;
  $58 = ($57|0)>(1);
  $59 = $52 + -382.30810546875;
  $global_ampmax$037 = $24;$i$038 = 0;
  while(1) {
   $60 = HEAP32[$vb>>2]|0;
   $61 = (($60) + ($i$038<<2)|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (__vorbis_block_alloc($vb,$45)|0);
   $64 = (($19) + ($i$038<<2)|0);
   HEAP32[$64>>2] = $63;
   $65 = (__vorbis_block_alloc($vb,$45)|0);
   $66 = (($16) + ($i$038<<2)|0);
   HEAP32[$66>>2] = $65;
   $67 = HEAP32[$54>>2]|0;
   $68 = HEAP32[$30>>2]|0;
   $69 = HEAP32[$55>>2]|0;
   __vorbis_apply_window($62,$53,$5,$67,$68,$69);
   $70 = HEAP32[$30>>2]|0;
   $71 = (((($7)) + 12|0) + ($70<<2)|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = HEAP32[$72>>2]|0;
   $74 = HEAP32[$66>>2]|0;
   _mdct_forward($73,$62,$74);
   $75 = HEAP32[$30>>2]|0;
   $76 = (((($7)) + 20|0) + (($75*12)|0)|0);
   _drft_forward($76,$62);
   $77 = HEAP32[$62>>2]|0;
   $78 = $77 & 2147483647;
   $79 = (+($78>>>0));
   $80 = $79 * 7.1771142984289327E-7;
   $81 = $56 + $80;
   $82 = $81;
   $83 = $82 + 0.34499999999999997;
   $84 = $83;
   HEAPF32[$62>>2] = $84;
   $85 = (($27) + ($i$038<<2)|0);
   HEAPF32[$85>>2] = $84;
   if ($58) {
    $105 = $84;$j$033 = 1;
    while(1) {
     $86 = (($62) + ($j$033<<2)|0);
     $87 = +HEAPF32[$86>>2];
     $88 = $87 * $87;
     $89 = (($j$033) + 1)|0;
     $90 = (($62) + ($89<<2)|0);
     $91 = +HEAPF32[$90>>2];
     $92 = $91 * $91;
     $93 = $92 + $88;
     $94 = (HEAPF32[tempDoublePtr>>2]=$93,HEAP32[tempDoublePtr>>2]|0);
     $95 = $94 & 2147483647;
     $96 = (+($95>>>0));
     $97 = $96 * 3.5885571492144663E-7;
     $98 = $59 + $97;
     $99 = $98;
     $100 = $99 + 0.34499999999999997;
     $101 = $100;
     $102 = $89 >> 1;
     $103 = (($62) + ($102<<2)|0);
     HEAPF32[$103>>2] = $101;
     $104 = $101 > $105;
     if ($104) {
      HEAPF32[$85>>2] = $101;
      $597 = $101;
     } else {
      $597 = $105;
     }
     $106 = (($j$033) + 2)|0;
     $107 = ($106|0)<($57|0);
     if ($107) {
      $105 = $597;$j$033 = $106;
     } else {
      $109 = $597;
      break;
     }
    }
   } else {
    $109 = $84;
   }
   $108 = $109 > 0.0;
   if ($108) {
    HEAPF32[$85>>2] = 0.0;
    $111 = 0.0;
   } else {
    $111 = $109;
   }
   $110 = $111 > $global_ampmax$037;
   $global_ampmax$1 = $110 ? $111 : $global_ampmax$037;
   $112 = (($i$038) + 1)|0;
   $113 = HEAP32[$12>>2]|0;
   $114 = ($112|0)<($113|0);
   if ($114) {
    $global_ampmax$037 = $global_ampmax$1;$i$038 = $112;
   } else {
    $$pre$phi53Z2D = $45;$$pre$phiZ2D = $44;$global_ampmax$0$lcssa = $global_ampmax$1;
    break;
   }
  }
 } else {
  $$pre51 = (($11|0) / 2)&-1;
  $$pre52 = $$pre51 << 2;
  $$pre$phi53Z2D = $$pre52;$$pre$phiZ2D = $$pre51;$global_ampmax$0$lcssa = $24;
 }
 $115 = (__vorbis_block_alloc($vb,$$pre$phi53Z2D)|0);
 $116 = (__vorbis_block_alloc($vb,$$pre$phi53Z2D)|0);
 $117 = HEAP32[$12>>2]|0;
 $118 = ($117|0)>(0);
 L17: do {
  if ($118) {
   $119 = ($11|0)>(1);
   $120 = ((($7)) + 48|0);
   if ($119) {
    $i$129$us = 0;
   } else {
    $i$129 = 0;
    while(1) {
     $316 = (((($33)) + 4|0) + ($i$129<<2)|0);
     $317 = HEAP32[$316>>2]|0;
     $318 = (($16) + ($i$129<<2)|0);
     $319 = HEAP32[$318>>2]|0;
     $320 = HEAP32[$vb>>2]|0;
     $321 = (($320) + ($i$129<<2)|0);
     $322 = HEAP32[$321>>2]|0;
     $323 = (($322) + ($$pre$phiZ2D<<2)|0);
     HEAP32[$39>>2] = $31;
     $324 = (__vorbis_block_alloc($vb,60)|0);
     $325 = (($22) + ($i$129<<2)|0);
     HEAP32[$325>>2] = $324;
     dest=$324; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
     __vp_noisemask($38,$323,$115);
     $326 = (($27) + ($i$129<<2)|0);
     $327 = +HEAPF32[$326>>2];
     __vp_tonemask($38,$322,$116,$global_ampmax$0$lcssa,$327);
     __vp_offset_and_mix($38,$115,$116,1,$322,$319,$323);
     $328 = (((($33)) + 1028|0) + ($317<<2)|0);
     $329 = HEAP32[$328>>2]|0;
     $330 = (((($5)) + 800|0) + ($329<<2)|0);
     $331 = HEAP32[$330>>2]|0;
     $332 = ($331|0)==(1);
     if (!($332)) {
      $$0 = -1;
      break;
     }
     $333 = HEAP32[$120>>2]|0;
     $334 = (($333) + ($329<<2)|0);
     $335 = HEAP32[$334>>2]|0;
     $336 = (_floor1_fit($vb,$335,$323,$322)|0);
     $337 = HEAP32[$325>>2]|0;
     $338 = ((($337)) + 28|0);
     HEAP32[$338>>2] = $336;
     $339 = (_vorbis_bitrate_managed($vb)|0);
     $340 = ($339|0)==(0);
     if (!($340)) {
      $341 = HEAP32[$325>>2]|0;
      $342 = ((($341)) + 28|0);
      $343 = HEAP32[$342>>2]|0;
      $344 = ($343|0)==(0|0);
      if (!($344)) {
       __vp_offset_and_mix($38,$115,$116,2,$322,$319,$323);
       $345 = HEAP32[$328>>2]|0;
       $346 = HEAP32[$120>>2]|0;
       $347 = (($346) + ($345<<2)|0);
       $348 = HEAP32[$347>>2]|0;
       $349 = (_floor1_fit($vb,$348,$323,$322)|0);
       $350 = HEAP32[$325>>2]|0;
       $351 = ((($350)) + 56|0);
       HEAP32[$351>>2] = $349;
       __vp_offset_and_mix($38,$115,$116,0,$322,$319,$323);
       $352 = HEAP32[$328>>2]|0;
       $353 = HEAP32[$120>>2]|0;
       $354 = (($353) + ($352<<2)|0);
       $355 = HEAP32[$354>>2]|0;
       $356 = (_floor1_fit($vb,$355,$323,$322)|0);
       $357 = HEAP32[$325>>2]|0;
       HEAP32[$357>>2] = $356;
       $358 = HEAP32[$328>>2]|0;
       $359 = HEAP32[$120>>2]|0;
       $360 = (($359) + ($358<<2)|0);
       $361 = HEAP32[$360>>2]|0;
       $362 = HEAP32[$325>>2]|0;
       $363 = HEAP32[$362>>2]|0;
       $364 = ((($362)) + 28|0);
       $365 = HEAP32[$364>>2]|0;
       $366 = (_floor1_interpolate_fit($vb,$361,$363,$365,9362)|0);
       $367 = HEAP32[$325>>2]|0;
       $368 = ((($367)) + 4|0);
       HEAP32[$368>>2] = $366;
       $369 = HEAP32[$328>>2]|0;
       $370 = HEAP32[$120>>2]|0;
       $371 = (($370) + ($369<<2)|0);
       $372 = HEAP32[$371>>2]|0;
       $373 = HEAP32[$325>>2]|0;
       $374 = HEAP32[$373>>2]|0;
       $375 = ((($373)) + 28|0);
       $376 = HEAP32[$375>>2]|0;
       $377 = (_floor1_interpolate_fit($vb,$372,$374,$376,18724)|0);
       $378 = HEAP32[$325>>2]|0;
       $379 = ((($378)) + 8|0);
       HEAP32[$379>>2] = $377;
       $380 = HEAP32[$328>>2]|0;
       $381 = HEAP32[$120>>2]|0;
       $382 = (($381) + ($380<<2)|0);
       $383 = HEAP32[$382>>2]|0;
       $384 = HEAP32[$325>>2]|0;
       $385 = HEAP32[$384>>2]|0;
       $386 = ((($384)) + 28|0);
       $387 = HEAP32[$386>>2]|0;
       $388 = (_floor1_interpolate_fit($vb,$383,$385,$387,28086)|0);
       $389 = HEAP32[$325>>2]|0;
       $390 = ((($389)) + 12|0);
       HEAP32[$390>>2] = $388;
       $391 = HEAP32[$328>>2]|0;
       $392 = HEAP32[$120>>2]|0;
       $393 = (($392) + ($391<<2)|0);
       $394 = HEAP32[$393>>2]|0;
       $395 = HEAP32[$325>>2]|0;
       $396 = HEAP32[$395>>2]|0;
       $397 = ((($395)) + 28|0);
       $398 = HEAP32[$397>>2]|0;
       $399 = (_floor1_interpolate_fit($vb,$394,$396,$398,37449)|0);
       $400 = HEAP32[$325>>2]|0;
       $401 = ((($400)) + 16|0);
       HEAP32[$401>>2] = $399;
       $402 = HEAP32[$328>>2]|0;
       $403 = HEAP32[$120>>2]|0;
       $404 = (($403) + ($402<<2)|0);
       $405 = HEAP32[$404>>2]|0;
       $406 = HEAP32[$325>>2]|0;
       $407 = HEAP32[$406>>2]|0;
       $408 = ((($406)) + 28|0);
       $409 = HEAP32[$408>>2]|0;
       $410 = (_floor1_interpolate_fit($vb,$405,$407,$409,46811)|0);
       $411 = HEAP32[$325>>2]|0;
       $412 = ((($411)) + 20|0);
       HEAP32[$412>>2] = $410;
       $413 = HEAP32[$328>>2]|0;
       $414 = HEAP32[$120>>2]|0;
       $415 = (($414) + ($413<<2)|0);
       $416 = HEAP32[$415>>2]|0;
       $417 = HEAP32[$325>>2]|0;
       $418 = HEAP32[$417>>2]|0;
       $419 = ((($417)) + 28|0);
       $420 = HEAP32[$419>>2]|0;
       $421 = (_floor1_interpolate_fit($vb,$416,$418,$420,56173)|0);
       $422 = HEAP32[$325>>2]|0;
       $423 = ((($422)) + 24|0);
       HEAP32[$423>>2] = $421;
       $424 = HEAP32[$328>>2]|0;
       $425 = HEAP32[$120>>2]|0;
       $426 = (($425) + ($424<<2)|0);
       $427 = HEAP32[$426>>2]|0;
       $428 = HEAP32[$325>>2]|0;
       $429 = ((($428)) + 28|0);
       $430 = HEAP32[$429>>2]|0;
       $431 = ((($428)) + 56|0);
       $432 = HEAP32[$431>>2]|0;
       $433 = (_floor1_interpolate_fit($vb,$427,$430,$432,9362)|0);
       $434 = HEAP32[$325>>2]|0;
       $435 = ((($434)) + 32|0);
       HEAP32[$435>>2] = $433;
       $436 = HEAP32[$328>>2]|0;
       $437 = HEAP32[$120>>2]|0;
       $438 = (($437) + ($436<<2)|0);
       $439 = HEAP32[$438>>2]|0;
       $440 = HEAP32[$325>>2]|0;
       $441 = ((($440)) + 28|0);
       $442 = HEAP32[$441>>2]|0;
       $443 = ((($440)) + 56|0);
       $444 = HEAP32[$443>>2]|0;
       $445 = (_floor1_interpolate_fit($vb,$439,$442,$444,18724)|0);
       $446 = HEAP32[$325>>2]|0;
       $447 = ((($446)) + 36|0);
       HEAP32[$447>>2] = $445;
       $448 = HEAP32[$328>>2]|0;
       $449 = HEAP32[$120>>2]|0;
       $450 = (($449) + ($448<<2)|0);
       $451 = HEAP32[$450>>2]|0;
       $452 = HEAP32[$325>>2]|0;
       $453 = ((($452)) + 28|0);
       $454 = HEAP32[$453>>2]|0;
       $455 = ((($452)) + 56|0);
       $456 = HEAP32[$455>>2]|0;
       $457 = (_floor1_interpolate_fit($vb,$451,$454,$456,28086)|0);
       $458 = HEAP32[$325>>2]|0;
       $459 = ((($458)) + 40|0);
       HEAP32[$459>>2] = $457;
       $460 = HEAP32[$328>>2]|0;
       $461 = HEAP32[$120>>2]|0;
       $462 = (($461) + ($460<<2)|0);
       $463 = HEAP32[$462>>2]|0;
       $464 = HEAP32[$325>>2]|0;
       $465 = ((($464)) + 28|0);
       $466 = HEAP32[$465>>2]|0;
       $467 = ((($464)) + 56|0);
       $468 = HEAP32[$467>>2]|0;
       $469 = (_floor1_interpolate_fit($vb,$463,$466,$468,37449)|0);
       $470 = HEAP32[$325>>2]|0;
       $471 = ((($470)) + 44|0);
       HEAP32[$471>>2] = $469;
       $472 = HEAP32[$328>>2]|0;
       $473 = HEAP32[$120>>2]|0;
       $474 = (($473) + ($472<<2)|0);
       $475 = HEAP32[$474>>2]|0;
       $476 = HEAP32[$325>>2]|0;
       $477 = ((($476)) + 28|0);
       $478 = HEAP32[$477>>2]|0;
       $479 = ((($476)) + 56|0);
       $480 = HEAP32[$479>>2]|0;
       $481 = (_floor1_interpolate_fit($vb,$475,$478,$480,46811)|0);
       $482 = HEAP32[$325>>2]|0;
       $483 = ((($482)) + 48|0);
       HEAP32[$483>>2] = $481;
       $484 = HEAP32[$328>>2]|0;
       $485 = HEAP32[$120>>2]|0;
       $486 = (($485) + ($484<<2)|0);
       $487 = HEAP32[$486>>2]|0;
       $488 = HEAP32[$325>>2]|0;
       $489 = ((($488)) + 28|0);
       $490 = HEAP32[$489>>2]|0;
       $491 = ((($488)) + 56|0);
       $492 = HEAP32[$491>>2]|0;
       $493 = (_floor1_interpolate_fit($vb,$487,$490,$492,56173)|0);
       $494 = HEAP32[$325>>2]|0;
       $495 = ((($494)) + 52|0);
       HEAP32[$495>>2] = $493;
      }
     }
     $496 = (($i$129) + 1)|0;
     $497 = HEAP32[$12>>2]|0;
     $498 = ($496|0)<($497|0);
     if ($498) {
      $i$129 = $496;
     } else {
      $$pre$phi55Z2D = $120;$500 = $497;
      break L17;
     }
    }
    STACKTOP = sp;return ($$0|0);
   }
   while(1) {
    $311 = (((($33)) + 4|0) + ($i$129$us<<2)|0);
    $127 = HEAP32[$311>>2]|0;
    $312 = (($16) + ($i$129$us<<2)|0);
    $125 = HEAP32[$312>>2]|0;
    $313 = HEAP32[$vb>>2]|0;
    $314 = (($313) + ($i$129$us<<2)|0);
    $124 = HEAP32[$314>>2]|0;
    $121 = (($124) + ($$pre$phiZ2D<<2)|0);
    HEAP32[$39>>2] = $31;
    $315 = (__vorbis_block_alloc($vb,60)|0);
    $137 = (($22) + ($i$129$us<<2)|0);
    HEAP32[$137>>2] = $315;
    dest=$315; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    $j$123$us = 0;
    while(1) {
     $299 = (($125) + ($j$123$us<<2)|0);
     $300 = HEAP32[$299>>2]|0;
     $301 = $300 & 2147483647;
     $302 = (+($301>>>0));
     $303 = $302 * 7.1771142984289327E-7;
     $304 = $303 + -764.6162109375;
     $305 = $304;
     $306 = $305 + 0.34499999999999997;
     $307 = $306;
     $$sum1$us = (($j$123$us) + ($$pre$phiZ2D))|0;
     $308 = (($124) + ($$sum1$us<<2)|0);
     HEAPF32[$308>>2] = $307;
     $309 = (($j$123$us) + 1)|0;
     $310 = ($309|0)<($$pre$phiZ2D|0);
     if ($310) {
      $j$123$us = $309;
     } else {
      break;
     }
    }
    __vp_noisemask($38,$121,$115);
    $122 = (($27) + ($i$129$us<<2)|0);
    $123 = +HEAPF32[$122>>2];
    __vp_tonemask($38,$124,$116,$global_ampmax$0$lcssa,$123);
    __vp_offset_and_mix($38,$115,$116,1,$124,$125,$121);
    $126 = (((($33)) + 1028|0) + ($127<<2)|0);
    $128 = HEAP32[$126>>2]|0;
    $129 = (((($5)) + 800|0) + ($128<<2)|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = ($130|0)==(1);
    if (!($131)) {
     $$0 = -1;
     break;
    }
    $132 = HEAP32[$120>>2]|0;
    $133 = (($132) + ($128<<2)|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = (_floor1_fit($vb,$134,$121,$124)|0);
    $136 = HEAP32[$137>>2]|0;
    $138 = ((($136)) + 28|0);
    HEAP32[$138>>2] = $135;
    $139 = (_vorbis_bitrate_managed($vb)|0);
    $140 = ($139|0)==(0);
    if (!($140)) {
     $141 = HEAP32[$137>>2]|0;
     $142 = ((($141)) + 28|0);
     $143 = HEAP32[$142>>2]|0;
     $144 = ($143|0)==(0|0);
     if (!($144)) {
      __vp_offset_and_mix($38,$115,$116,2,$124,$125,$121);
      $145 = HEAP32[$126>>2]|0;
      $146 = HEAP32[$120>>2]|0;
      $147 = (($146) + ($145<<2)|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (_floor1_fit($vb,$148,$121,$124)|0);
      $150 = HEAP32[$137>>2]|0;
      $151 = ((($150)) + 56|0);
      HEAP32[$151>>2] = $149;
      __vp_offset_and_mix($38,$115,$116,0,$124,$125,$121);
      $152 = HEAP32[$126>>2]|0;
      $153 = HEAP32[$120>>2]|0;
      $154 = (($153) + ($152<<2)|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = (_floor1_fit($vb,$155,$121,$124)|0);
      $157 = HEAP32[$137>>2]|0;
      HEAP32[$157>>2] = $156;
      $158 = HEAP32[$126>>2]|0;
      $159 = HEAP32[$120>>2]|0;
      $160 = (($159) + ($158<<2)|0);
      $161 = HEAP32[$160>>2]|0;
      $162 = HEAP32[$137>>2]|0;
      $163 = HEAP32[$162>>2]|0;
      $164 = ((($162)) + 28|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = (_floor1_interpolate_fit($vb,$161,$163,$165,9362)|0);
      $167 = HEAP32[$137>>2]|0;
      $168 = ((($167)) + 4|0);
      HEAP32[$168>>2] = $166;
      $169 = HEAP32[$126>>2]|0;
      $170 = HEAP32[$120>>2]|0;
      $171 = (($170) + ($169<<2)|0);
      $172 = HEAP32[$171>>2]|0;
      $173 = HEAP32[$137>>2]|0;
      $174 = HEAP32[$173>>2]|0;
      $175 = ((($173)) + 28|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = (_floor1_interpolate_fit($vb,$172,$174,$176,18724)|0);
      $178 = HEAP32[$137>>2]|0;
      $179 = ((($178)) + 8|0);
      HEAP32[$179>>2] = $177;
      $180 = HEAP32[$126>>2]|0;
      $181 = HEAP32[$120>>2]|0;
      $182 = (($181) + ($180<<2)|0);
      $183 = HEAP32[$182>>2]|0;
      $184 = HEAP32[$137>>2]|0;
      $185 = HEAP32[$184>>2]|0;
      $186 = ((($184)) + 28|0);
      $187 = HEAP32[$186>>2]|0;
      $188 = (_floor1_interpolate_fit($vb,$183,$185,$187,28086)|0);
      $189 = HEAP32[$137>>2]|0;
      $190 = ((($189)) + 12|0);
      HEAP32[$190>>2] = $188;
      $191 = HEAP32[$126>>2]|0;
      $192 = HEAP32[$120>>2]|0;
      $193 = (($192) + ($191<<2)|0);
      $194 = HEAP32[$193>>2]|0;
      $195 = HEAP32[$137>>2]|0;
      $196 = HEAP32[$195>>2]|0;
      $197 = ((($195)) + 28|0);
      $198 = HEAP32[$197>>2]|0;
      $199 = (_floor1_interpolate_fit($vb,$194,$196,$198,37449)|0);
      $200 = HEAP32[$137>>2]|0;
      $201 = ((($200)) + 16|0);
      HEAP32[$201>>2] = $199;
      $202 = HEAP32[$126>>2]|0;
      $203 = HEAP32[$120>>2]|0;
      $204 = (($203) + ($202<<2)|0);
      $205 = HEAP32[$204>>2]|0;
      $206 = HEAP32[$137>>2]|0;
      $207 = HEAP32[$206>>2]|0;
      $208 = ((($206)) + 28|0);
      $209 = HEAP32[$208>>2]|0;
      $210 = (_floor1_interpolate_fit($vb,$205,$207,$209,46811)|0);
      $211 = HEAP32[$137>>2]|0;
      $212 = ((($211)) + 20|0);
      HEAP32[$212>>2] = $210;
      $213 = HEAP32[$126>>2]|0;
      $214 = HEAP32[$120>>2]|0;
      $215 = (($214) + ($213<<2)|0);
      $216 = HEAP32[$215>>2]|0;
      $217 = HEAP32[$137>>2]|0;
      $218 = HEAP32[$217>>2]|0;
      $219 = ((($217)) + 28|0);
      $220 = HEAP32[$219>>2]|0;
      $221 = (_floor1_interpolate_fit($vb,$216,$218,$220,56173)|0);
      $222 = HEAP32[$137>>2]|0;
      $223 = ((($222)) + 24|0);
      HEAP32[$223>>2] = $221;
      $224 = HEAP32[$126>>2]|0;
      $225 = HEAP32[$120>>2]|0;
      $226 = (($225) + ($224<<2)|0);
      $227 = HEAP32[$226>>2]|0;
      $228 = HEAP32[$137>>2]|0;
      $229 = ((($228)) + 28|0);
      $230 = HEAP32[$229>>2]|0;
      $231 = ((($228)) + 56|0);
      $232 = HEAP32[$231>>2]|0;
      $233 = (_floor1_interpolate_fit($vb,$227,$230,$232,9362)|0);
      $234 = HEAP32[$137>>2]|0;
      $235 = ((($234)) + 32|0);
      HEAP32[$235>>2] = $233;
      $236 = HEAP32[$126>>2]|0;
      $237 = HEAP32[$120>>2]|0;
      $238 = (($237) + ($236<<2)|0);
      $239 = HEAP32[$238>>2]|0;
      $240 = HEAP32[$137>>2]|0;
      $241 = ((($240)) + 28|0);
      $242 = HEAP32[$241>>2]|0;
      $243 = ((($240)) + 56|0);
      $244 = HEAP32[$243>>2]|0;
      $245 = (_floor1_interpolate_fit($vb,$239,$242,$244,18724)|0);
      $246 = HEAP32[$137>>2]|0;
      $247 = ((($246)) + 36|0);
      HEAP32[$247>>2] = $245;
      $248 = HEAP32[$126>>2]|0;
      $249 = HEAP32[$120>>2]|0;
      $250 = (($249) + ($248<<2)|0);
      $251 = HEAP32[$250>>2]|0;
      $252 = HEAP32[$137>>2]|0;
      $253 = ((($252)) + 28|0);
      $254 = HEAP32[$253>>2]|0;
      $255 = ((($252)) + 56|0);
      $256 = HEAP32[$255>>2]|0;
      $257 = (_floor1_interpolate_fit($vb,$251,$254,$256,28086)|0);
      $258 = HEAP32[$137>>2]|0;
      $259 = ((($258)) + 40|0);
      HEAP32[$259>>2] = $257;
      $260 = HEAP32[$126>>2]|0;
      $261 = HEAP32[$120>>2]|0;
      $262 = (($261) + ($260<<2)|0);
      $263 = HEAP32[$262>>2]|0;
      $264 = HEAP32[$137>>2]|0;
      $265 = ((($264)) + 28|0);
      $266 = HEAP32[$265>>2]|0;
      $267 = ((($264)) + 56|0);
      $268 = HEAP32[$267>>2]|0;
      $269 = (_floor1_interpolate_fit($vb,$263,$266,$268,37449)|0);
      $270 = HEAP32[$137>>2]|0;
      $271 = ((($270)) + 44|0);
      HEAP32[$271>>2] = $269;
      $272 = HEAP32[$126>>2]|0;
      $273 = HEAP32[$120>>2]|0;
      $274 = (($273) + ($272<<2)|0);
      $275 = HEAP32[$274>>2]|0;
      $276 = HEAP32[$137>>2]|0;
      $277 = ((($276)) + 28|0);
      $278 = HEAP32[$277>>2]|0;
      $279 = ((($276)) + 56|0);
      $280 = HEAP32[$279>>2]|0;
      $281 = (_floor1_interpolate_fit($vb,$275,$278,$280,46811)|0);
      $282 = HEAP32[$137>>2]|0;
      $283 = ((($282)) + 48|0);
      HEAP32[$283>>2] = $281;
      $284 = HEAP32[$126>>2]|0;
      $285 = HEAP32[$120>>2]|0;
      $286 = (($285) + ($284<<2)|0);
      $287 = HEAP32[$286>>2]|0;
      $288 = HEAP32[$137>>2]|0;
      $289 = ((($288)) + 28|0);
      $290 = HEAP32[$289>>2]|0;
      $291 = ((($288)) + 56|0);
      $292 = HEAP32[$291>>2]|0;
      $293 = (_floor1_interpolate_fit($vb,$287,$290,$292,56173)|0);
      $294 = HEAP32[$137>>2]|0;
      $295 = ((($294)) + 52|0);
      HEAP32[$295>>2] = $293;
     }
    }
    $296 = (($i$129$us) + 1)|0;
    $297 = HEAP32[$12>>2]|0;
    $298 = ($296|0)<($297|0);
    if ($298) {
     $i$129$us = $296;
    } else {
     $$pre$phi55Z2D = $120;$500 = $297;
     break L17;
    }
   }
   STACKTOP = sp;return ($$0|0);
  } else {
   $$pre54 = ((($7)) + 48|0);
   $$pre$phi55Z2D = $$pre54;$500 = $117;
  }
 } while(0);
 HEAPF32[$23>>2] = $global_ampmax$0$lcssa;
 $499 = $500 << 2;
 $$alloca_mul3 = $499;
 $501 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0;;
 $$alloca_mul5 = $499;
 $502 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul5)|0)+15)&-16)|0;;
 $503 = (_vorbis_bitrate_managed($vb)|0);
 $504 = ($503|0)!=(0);
 $505 = $504 ? 0 : 7;
 $506 = ((($7)) + 44|0);
 $507 = ((($vb)) + 24|0);
 $508 = ((($vb)) + 32|0);
 $509 = ((($5)) + 2868|0);
 $510 = ((($7)) + 52|0);
 $k$222 = $505;
 while(1) {
  $511 = (((($9)) + 12|0) + ($k$222<<2)|0);
  $512 = HEAP32[$511>>2]|0;
  _oggpack_write($512,0,1);
  $513 = HEAP32[$506>>2]|0;
  _oggpack_write($512,$31,$513);
  $514 = HEAP32[$30>>2]|0;
  $515 = ($514|0)==(0);
  if (!($515)) {
   $516 = HEAP32[$507>>2]|0;
   _oggpack_write($512,$516,1);
   $517 = HEAP32[$508>>2]|0;
   _oggpack_write($512,$517,1);
  }
  $518 = HEAP32[$12>>2]|0;
  $519 = ($518|0)>(0);
  if ($519) {
   $i$25 = 0;
   while(1) {
    $520 = (((($33)) + 4|0) + ($i$25<<2)|0);
    $521 = HEAP32[$520>>2]|0;
    $522 = (($19) + ($i$25<<2)|0);
    $523 = HEAP32[$522>>2]|0;
    $524 = (((($33)) + 1028|0) + ($521<<2)|0);
    $525 = HEAP32[$524>>2]|0;
    $526 = HEAP32[$$pre$phi55Z2D>>2]|0;
    $527 = (($526) + ($525<<2)|0);
    $528 = HEAP32[$527>>2]|0;
    $529 = (($22) + ($i$25<<2)|0);
    $530 = HEAP32[$529>>2]|0;
    $531 = (($530) + ($k$222<<2)|0);
    $532 = HEAP32[$531>>2]|0;
    $533 = (_floor1_encode($512,$vb,$528,$532,$523)|0);
    $534 = (($15) + ($i$25<<2)|0);
    HEAP32[$534>>2] = $533;
    $535 = (($i$25) + 1)|0;
    $536 = HEAP32[$12>>2]|0;
    $537 = ($535|0)<($536|0);
    if ($537) {
     $i$25 = $535;
    } else {
     $$lcssa = $536;
     break;
    }
   }
  } else {
   $$lcssa = $518;
  }
  $538 = HEAP32[$30>>2]|0;
  $539 = ((((($5)) + 3240|0) + (($538*60)|0)|0) + ($k$222<<2)|0);
  $540 = HEAP32[$539>>2]|0;
  __vp_couple_quantize_normalize($k$222,$509,$38,$33,$16,$19,$15,$540,$$lcssa);
  $541 = HEAP32[$33>>2]|0;
  $542 = ($541|0)>(0);
  if ($542) {
   $i$318 = 0;
   while(1) {
    $543 = (((($33)) + 1092|0) + ($i$318<<2)|0);
    $544 = HEAP32[$543>>2]|0;
    $545 = HEAP32[$12>>2]|0;
    $546 = ($545|0)>(0);
    if ($546) {
     $598 = $545;$ch_in_bundle$07 = 0;$j$26 = 0;
     while(1) {
      $547 = (((($33)) + 4|0) + ($j$26<<2)|0);
      $548 = HEAP32[$547>>2]|0;
      $549 = ($548|0)==($i$318|0);
      if ($549) {
       $550 = (($502) + ($ch_in_bundle$07<<2)|0);
       $551 = (($15) + ($j$26<<2)|0);
       $552 = HEAP32[$551>>2]|0;
       $not$ = ($552|0)!=(0);
       $$ = $not$&1;
       HEAP32[$550>>2] = $$;
       $553 = (($19) + ($j$26<<2)|0);
       $554 = HEAP32[$553>>2]|0;
       $555 = (($ch_in_bundle$07) + 1)|0;
       $556 = (($501) + ($ch_in_bundle$07<<2)|0);
       HEAP32[$556>>2] = $554;
       $$pre = HEAP32[$12>>2]|0;
       $559 = $$pre;$ch_in_bundle$1 = $555;
      } else {
       $559 = $598;$ch_in_bundle$1 = $ch_in_bundle$07;
      }
      $557 = (($j$26) + 1)|0;
      $558 = ($557|0)<($559|0);
      if ($558) {
       $598 = $559;$ch_in_bundle$07 = $ch_in_bundle$1;$j$26 = $557;
      } else {
       $ch_in_bundle$0$lcssa = $ch_in_bundle$1;
       break;
      }
     }
    } else {
     $ch_in_bundle$0$lcssa = 0;
    }
    $560 = (((($5)) + 1312|0) + ($544<<2)|0);
    $561 = HEAP32[$560>>2]|0;
    $562 = (25648 + ($561<<2)|0);
    $563 = HEAP32[$562>>2]|0;
    $564 = ((($563)) + 20|0);
    $565 = HEAP32[$564>>2]|0;
    $566 = HEAP32[$510>>2]|0;
    $567 = (($566) + ($544<<2)|0);
    $568 = HEAP32[$567>>2]|0;
    $569 = (FUNCTION_TABLE_iiiiii[$565 & 7]($vb,$568,$501,$502,$ch_in_bundle$0$lcssa)|0);
    $570 = HEAP32[$12>>2]|0;
    $571 = ($570|0)>(0);
    if ($571) {
     $ch_in_bundle$213 = 0;$j$312 = 0;
     while(1) {
      $572 = (((($33)) + 4|0) + ($j$312<<2)|0);
      $573 = HEAP32[$572>>2]|0;
      $574 = ($573|0)==($i$318|0);
      if ($574) {
       $575 = (($19) + ($j$312<<2)|0);
       $576 = HEAP32[$575>>2]|0;
       $577 = (($ch_in_bundle$213) + 1)|0;
       $578 = (($501) + ($ch_in_bundle$213<<2)|0);
       HEAP32[$578>>2] = $576;
       $ch_in_bundle$3 = $577;
      } else {
       $ch_in_bundle$3 = $ch_in_bundle$213;
      }
      $579 = (($j$312) + 1)|0;
      $580 = ($579|0)<($570|0);
      if ($580) {
       $ch_in_bundle$213 = $ch_in_bundle$3;$j$312 = $579;
      } else {
       $ch_in_bundle$2$lcssa = $ch_in_bundle$3;
       break;
      }
     }
    } else {
     $ch_in_bundle$2$lcssa = 0;
    }
    $581 = HEAP32[$560>>2]|0;
    $582 = (25648 + ($581<<2)|0);
    $583 = HEAP32[$582>>2]|0;
    $584 = ((($583)) + 24|0);
    $585 = HEAP32[$584>>2]|0;
    $586 = HEAP32[$510>>2]|0;
    $587 = (($586) + ($544<<2)|0);
    $588 = HEAP32[$587>>2]|0;
    (FUNCTION_TABLE_iiiiiiiii[$585 & 3]($512,$vb,$588,$501,$502,$ch_in_bundle$2$lcssa,$569,$i$318)|0);
    $589 = (($i$318) + 1)|0;
    $590 = HEAP32[$33>>2]|0;
    $591 = ($589|0)<($590|0);
    if ($591) {
     $i$318 = $589;
    } else {
     break;
    }
   }
  }
  $592 = (($k$222) + 1)|0;
  $593 = (_vorbis_bitrate_managed($vb)|0);
  $594 = ($593|0)!=(0);
  $595 = $594 ? 14 : 7;
  $596 = ($k$222|0)<($595|0);
  if ($596) {
   $k$222 = $592;
  } else {
   $$0 = 0;
   break;
  }
 }
 STACKTOP = sp;return ($$0|0);
}