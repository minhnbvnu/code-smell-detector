function SizeAwareComponent(){var _this;_classCallCheck$1(this,SizeAwareComponent);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty$2(_assertThisInitialized$3(_this=_super2.call.apply(_super2,[this].concat(args))),"domEl",null),_defineProperty$2(_assertThisInitialized$3(_this),"state",{width:void 0,height:void 0}),_defineProperty$2(_assertThisInitialized$3(_this),"uninstall",(function(){if(_this.domEl){try{_this.detector.uninstall(_this.domEl)}catch(err){console.warn("react-sizeme: an error occurred whilst stopping to listen to node size changes")}_this.domEl=null}})),_defineProperty$2(_assertThisInitialized$3(_this),"determineStrategy",(function(props){props.onSize?(_this.callbackState||(_this.callbackState=_objectSpread2({},_this.state)),_this.strategy="callback"):_this.strategy="render"})),_defineProperty$2(_assertThisInitialized$3(_this),"strategisedSetState",(function(state){"callback"===_this.strategy&&(_this.callbackState=state,_this.props.onSize(state)),_this.setState(state)})),_defineProperty$2(_assertThisInitialized$3(_this),"strategisedGetState",(function(){return"callback"===_this.strategy?_this.callbackState:_this.state})),_defineProperty$2(_assertThisInitialized$3(_this),"refCallback",(function(element){_this.element=element})),_defineProperty$2(_assertThisInitialized$3(_this),"hasSizeChanged",(function(current,next){var c=current,n=next;return monitorWidth&&c.width!==n.width||monitorHeight&&c.height!==n.height})),_defineProperty$2(_assertThisInitialized$3(_this),"checkIfSizeChanged",refreshDelayStrategy(refreshRate,(function(el){var _el$getBoundingClient=el.getBoundingClientRect(),width=_el$getBoundingClient.width,height=_el$getBoundingClient.height,next={width:monitorWidth?width:null,height:monitorHeight?height:null};_this.hasSizeChanged(_this.strategisedGetState(),next)&&_this.strategisedSetState(next)}))),_this}