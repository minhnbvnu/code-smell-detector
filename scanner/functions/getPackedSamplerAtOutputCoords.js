function getPackedSamplerAtOutputCoords(e,t,n){var r=e.name,o=r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i="get"+o+"AtOutCoords",s=t.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=u[0],c=u[1],p=getBroadcastDims(e.shapeInfo.logicalShape,t.logicalShape),d=e.shapeInfo.logicalShape.length,h=t.logicalShape.length;if(p.length)throw Error("Packed broadcast sampling is not implemented yet.");if(arraysEqual(e.shapeInfo.texShape,s))return "\n      vec4 "+i+"() {\n        return texture2D("+r+", resultUV);\n      }\n    ";var f="return texture2D("+r+", uv)";return 1===d&&h>1?f="\n      vec4 sample = texture2D("+r+", uv);\n      return vec4(sample.xy, sample.xy);\n    ":0===d&&h>0&&(f=1===h?"\n        vec4 sample = texture2D("+r+", uv);\n        return vec4(sample.x, sample.x, 0., 0.);\n      ":"\n        vec4 sample = texture2D("+r+", uv);\n        return vec4(sample.x);\n      "),"\n    vec4 "+i+"() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+u[0]+", "+u[1]+"));\n      int index = resTexRC.x * "+u[1]+" + resTexRC.y;\n\n      int texR = index / "+c+";\n      int texC = index - texR * "+c+";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+c+", "+l+");\n\n      "+f+";\n    }\n  "}