function _floor1_interpolate_fit($vb,$look,$A,$B,$del) {
 $vb = $vb|0;
 $look = $look|0;
 $A = $A|0;
 $B = $B|0;
 $del = $del|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $i$02 = 0, $or$cond = 0, $output$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($look)) + 1284|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($A|0)!=(0|0);
 $3 = ($B|0)!=(0|0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  $output$0 = 0;
  return ($output$0|0);
 }
 $4 = $1 << 2;
 $5 = (__vorbis_block_alloc($vb,$4)|0);
 $6 = ($1|0)>(0);
 if (!($6)) {
  $output$0 = $5;
  return ($output$0|0);
 }
 $7 = (65536 - ($del))|0;
 $i$02 = 0;
 while(1) {
  $8 = (($A) + ($i$02<<2)|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $9 & 32767;
  $11 = Math_imul($10, $7)|0;
  $12 = (($B) + ($i$02<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = $13 & 32767;
  $15 = Math_imul($14, $del)|0;
  $16 = (($11) + 32768)|0;
  $17 = (($16) + ($15))|0;
  $18 = $17 >> 16;
  $19 = (($5) + ($i$02<<2)|0);
  HEAP32[$19>>2] = $18;
  $20 = HEAP32[$8>>2]|0;
  $21 = $20 & 32768;
  $22 = ($21|0)==(0);
  if (!($22)) {
   $23 = HEAP32[$12>>2]|0;
   $24 = $23 & 32768;
   $25 = ($24|0)==(0);
   if (!($25)) {
    $26 = $18 | 32768;
    HEAP32[$19>>2] = $26;
   }
  }
  $27 = (($i$02) + 1)|0;
  $exitcond = ($27|0)==($1|0);
  if ($exitcond) {
   $output$0 = $5;
   break;
  } else {
   $i$02 = $27;
  }
 }
 return ($output$0|0);
}