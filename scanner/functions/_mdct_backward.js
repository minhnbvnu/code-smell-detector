function _mdct_backward($init,$in,$out) {
 $init = $init|0;
 $in = $in|0;
 $out = $out|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0.0, $100 = 0.0, $101 = 0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0;
 var $113 = 0.0, $114 = 0.0, $115 = 0, $116 = 0.0, $117 = 0, $118 = 0.0, $119 = 0.0, $12 = 0.0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0.0, $130 = 0.0;
 var $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0, $139 = 0.0, $14 = 0.0, $140 = 0.0, $141 = 0, $142 = 0.0, $143 = 0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0, $148 = 0.0, $149 = 0.0;
 var $15 = 0.0, $150 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0, $157 = 0, $158 = 0.0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0, $163 = 0.0, $164 = 0, $165 = 0.0, $166 = 0.0, $167 = 0.0;
 var $168 = 0.0, $169 = 0.0, $17 = 0.0, $170 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0.0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0.0;
 var $186 = 0, $187 = 0.0, $188 = 0, $189 = 0.0, $19 = 0.0, $190 = 0, $191 = 0.0, $192 = 0, $193 = 0, $194 = 0.0, $195 = 0, $196 = 0.0, $197 = 0, $198 = 0.0, $199 = 0.0, $2 = 0, $20 = 0.0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0.0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0;
 var $28 = 0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0;
 var $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0.0, $63 = 0.0;
 var $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0, $73 = 0.0, $74 = 0, $75 = 0.0, $76 = 0.0, $77 = 0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0;
 var $82 = 0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0.0, $98 = 0, $99 = 0.0, $T$0 = 0;
 var $T$1 = 0, $T$2 = 0, $iX$0 = 0, $iX$1 = 0, $iX1$0 = 0, $iX1$1 = 0, $iX1$2 = 0, $init$idx = 0, $init$idx$val = 0, $init$idx4$val = 0, $init$idx5$val = 0, $init$idx6 = 0, $init$idx6$val = 0, $oX$0 = 0, $oX$1 = 0, $oX1$0 = 0, $oX1$1 = 0, $oX1$2 = 0, $oX2$0 = 0, $oX2$1 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$init>>2]|0;
 $1 = $0 >> 1;
 $2 = $0 >> 2;
 $$sum = (($1) + -7)|0;
 $3 = (($in) + ($$sum<<2)|0);
 $$sum1 = (($1) + ($2))|0;
 $4 = (($out) + ($$sum1<<2)|0);
 $5 = ((($init)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + ($2<<2)|0);
 $T$0 = $7;$iX$0 = $3;$oX$0 = $4;
 while(1) {
  $8 = ((($oX$0)) + -16|0);
  $9 = ((($iX$0)) + 8|0);
  $10 = +HEAPF32[$9>>2];
  $11 = ((($T$0)) + 12|0);
  $12 = +HEAPF32[$11>>2];
  $13 = $10 * $12;
  $14 = -$13;
  $15 = +HEAPF32[$iX$0>>2];
  $16 = ((($T$0)) + 8|0);
  $17 = +HEAPF32[$16>>2];
  $18 = $17 * $15;
  $19 = $14 - $18;
  HEAPF32[$8>>2] = $19;
  $20 = +HEAPF32[$iX$0>>2];
  $21 = +HEAPF32[$11>>2];
  $22 = $21 * $20;
  $23 = +HEAPF32[$9>>2];
  $24 = +HEAPF32[$16>>2];
  $25 = $24 * $23;
  $26 = $22 - $25;
  $27 = ((($oX$0)) + -12|0);
  HEAPF32[$27>>2] = $26;
  $28 = ((($iX$0)) + 24|0);
  $29 = +HEAPF32[$28>>2];
  $30 = ((($T$0)) + 4|0);
  $31 = +HEAPF32[$30>>2];
  $32 = $29 * $31;
  $33 = -$32;
  $34 = ((($iX$0)) + 16|0);
  $35 = +HEAPF32[$34>>2];
  $36 = +HEAPF32[$T$0>>2];
  $37 = $36 * $35;
  $38 = $33 - $37;
  $39 = ((($oX$0)) + -8|0);
  HEAPF32[$39>>2] = $38;
  $40 = +HEAPF32[$34>>2];
  $41 = +HEAPF32[$30>>2];
  $42 = $41 * $40;
  $43 = +HEAPF32[$28>>2];
  $44 = +HEAPF32[$T$0>>2];
  $45 = $44 * $43;
  $46 = $42 - $45;
  $47 = ((($oX$0)) + -4|0);
  HEAPF32[$47>>2] = $46;
  $48 = ((($iX$0)) + -32|0);
  $49 = ((($T$0)) + 16|0);
  $50 = ($48>>>0)<($in>>>0);
  if ($50) {
   break;
  } else {
   $T$0 = $49;$iX$0 = $48;$oX$0 = $8;
  }
 }
 $51 = (($out) + ($1<<2)|0);
 $$sum2 = (($1) + -8)|0;
 $52 = (($in) + ($$sum2<<2)|0);
 $T$1 = $7;$iX$1 = $52;$oX$1 = $4;
 while(1) {
  $53 = ((($T$1)) + -16|0);
  $54 = ((($iX$1)) + 16|0);
  $55 = +HEAPF32[$54>>2];
  $56 = ((($T$1)) + -4|0);
  $57 = +HEAPF32[$56>>2];
  $58 = $57 * $55;
  $59 = ((($iX$1)) + 24|0);
  $60 = +HEAPF32[$59>>2];
  $61 = ((($T$1)) + -8|0);
  $62 = +HEAPF32[$61>>2];
  $63 = $62 * $60;
  $64 = $63 + $58;
  HEAPF32[$oX$1>>2] = $64;
  $65 = +HEAPF32[$54>>2];
  $66 = +HEAPF32[$61>>2];
  $67 = $66 * $65;
  $68 = +HEAPF32[$59>>2];
  $69 = +HEAPF32[$56>>2];
  $70 = $69 * $68;
  $71 = $67 - $70;
  $72 = ((($oX$1)) + 4|0);
  HEAPF32[$72>>2] = $71;
  $73 = +HEAPF32[$iX$1>>2];
  $74 = ((($T$1)) + -12|0);
  $75 = +HEAPF32[$74>>2];
  $76 = $75 * $73;
  $77 = ((($iX$1)) + 8|0);
  $78 = +HEAPF32[$77>>2];
  $79 = +HEAPF32[$53>>2];
  $80 = $79 * $78;
  $81 = $80 + $76;
  $82 = ((($oX$1)) + 8|0);
  HEAPF32[$82>>2] = $81;
  $83 = +HEAPF32[$iX$1>>2];
  $84 = +HEAPF32[$53>>2];
  $85 = $84 * $83;
  $86 = +HEAPF32[$77>>2];
  $87 = +HEAPF32[$74>>2];
  $88 = $87 * $86;
  $89 = $85 - $88;
  $90 = ((($oX$1)) + 12|0);
  HEAPF32[$90>>2] = $89;
  $91 = ((($iX$1)) + -32|0);
  $92 = ((($oX$1)) + 16|0);
  $93 = ($91>>>0)<($in>>>0);
  if ($93) {
   break;
  } else {
   $T$1 = $53;$iX$1 = $91;$oX$1 = $92;
  }
 }
 $init$idx = ((($init)) + 4|0);
 $init$idx$val = HEAP32[$init$idx>>2]|0;
 _mdct_butterflies($init$idx$val,$6,$51,$1);
 $init$idx4$val = HEAP32[$init>>2]|0;
 $init$idx5$val = HEAP32[$5>>2]|0;
 $init$idx6 = ((($init)) + 12|0);
 $init$idx6$val = HEAP32[$init$idx6>>2]|0;
 _mdct_bitreverse($init$idx4$val,$init$idx5$val,$init$idx6$val,$out);
 $94 = HEAP32[$5>>2]|0;
 $95 = (($94) + ($1<<2)|0);
 $T$2 = $95;$iX1$0 = $out;$oX1$0 = $4;$oX2$0 = $4;
 while(1) {
  $96 = ((($oX1$0)) + -16|0);
  $97 = +HEAPF32[$iX1$0>>2];
  $98 = ((($T$2)) + 4|0);
  $99 = +HEAPF32[$98>>2];
  $100 = $99 * $97;
  $101 = ((($iX1$0)) + 4|0);
  $102 = +HEAPF32[$101>>2];
  $103 = +HEAPF32[$T$2>>2];
  $104 = $103 * $102;
  $105 = $100 - $104;
  $106 = ((($oX1$0)) + -4|0);
  HEAPF32[$106>>2] = $105;
  $107 = +HEAPF32[$iX1$0>>2];
  $108 = +HEAPF32[$T$2>>2];
  $109 = $108 * $107;
  $110 = +HEAPF32[$101>>2];
  $111 = +HEAPF32[$98>>2];
  $112 = $111 * $110;
  $113 = $109 + $112;
  $114 = -$113;
  HEAPF32[$oX2$0>>2] = $114;
  $115 = ((($iX1$0)) + 8|0);
  $116 = +HEAPF32[$115>>2];
  $117 = ((($T$2)) + 12|0);
  $118 = +HEAPF32[$117>>2];
  $119 = $118 * $116;
  $120 = ((($iX1$0)) + 12|0);
  $121 = +HEAPF32[$120>>2];
  $122 = ((($T$2)) + 8|0);
  $123 = +HEAPF32[$122>>2];
  $124 = $123 * $121;
  $125 = $119 - $124;
  $126 = ((($oX1$0)) + -8|0);
  HEAPF32[$126>>2] = $125;
  $127 = +HEAPF32[$115>>2];
  $128 = +HEAPF32[$122>>2];
  $129 = $128 * $127;
  $130 = +HEAPF32[$120>>2];
  $131 = +HEAPF32[$117>>2];
  $132 = $131 * $130;
  $133 = $129 + $132;
  $134 = -$133;
  $135 = ((($oX2$0)) + 4|0);
  HEAPF32[$135>>2] = $134;
  $136 = ((($iX1$0)) + 16|0);
  $137 = +HEAPF32[$136>>2];
  $138 = ((($T$2)) + 20|0);
  $139 = +HEAPF32[$138>>2];
  $140 = $139 * $137;
  $141 = ((($iX1$0)) + 20|0);
  $142 = +HEAPF32[$141>>2];
  $143 = ((($T$2)) + 16|0);
  $144 = +HEAPF32[$143>>2];
  $145 = $144 * $142;
  $146 = $140 - $145;
  $147 = ((($oX1$0)) + -12|0);
  HEAPF32[$147>>2] = $146;
  $148 = +HEAPF32[$136>>2];
  $149 = +HEAPF32[$143>>2];
  $150 = $149 * $148;
  $151 = +HEAPF32[$141>>2];
  $152 = +HEAPF32[$138>>2];
  $153 = $152 * $151;
  $154 = $150 + $153;
  $155 = -$154;
  $156 = ((($oX2$0)) + 8|0);
  HEAPF32[$156>>2] = $155;
  $157 = ((($iX1$0)) + 24|0);
  $158 = +HEAPF32[$157>>2];
  $159 = ((($T$2)) + 28|0);
  $160 = +HEAPF32[$159>>2];
  $161 = $160 * $158;
  $162 = ((($iX1$0)) + 28|0);
  $163 = +HEAPF32[$162>>2];
  $164 = ((($T$2)) + 24|0);
  $165 = +HEAPF32[$164>>2];
  $166 = $165 * $163;
  $167 = $161 - $166;
  HEAPF32[$96>>2] = $167;
  $168 = +HEAPF32[$157>>2];
  $169 = +HEAPF32[$164>>2];
  $170 = $169 * $168;
  $171 = +HEAPF32[$162>>2];
  $172 = +HEAPF32[$159>>2];
  $173 = $172 * $171;
  $174 = $170 + $173;
  $175 = -$174;
  $176 = ((($oX2$0)) + 12|0);
  HEAPF32[$176>>2] = $175;
  $177 = ((($oX2$0)) + 16|0);
  $178 = ((($iX1$0)) + 32|0);
  $179 = ((($T$2)) + 32|0);
  $180 = ($178>>>0)<($96>>>0);
  if ($180) {
   $T$2 = $179;$iX1$0 = $178;$oX1$0 = $96;$oX2$0 = $177;
  } else {
   break;
  }
 }
 $181 = (($out) + ($2<<2)|0);
 $iX1$1 = $4;$oX1$1 = $181;$oX2$1 = $181;
 while(1) {
  $182 = ((($oX1$1)) + -16|0);
  $183 = ((($iX1$1)) + -16|0);
  $184 = ((($iX1$1)) + -4|0);
  $185 = +HEAPF32[$184>>2];
  $186 = ((($oX1$1)) + -4|0);
  HEAPF32[$186>>2] = $185;
  $187 = -$185;
  HEAPF32[$oX2$1>>2] = $187;
  $188 = ((($iX1$1)) + -8|0);
  $189 = +HEAPF32[$188>>2];
  $190 = ((($oX1$1)) + -8|0);
  HEAPF32[$190>>2] = $189;
  $191 = -$189;
  $192 = ((($oX2$1)) + 4|0);
  HEAPF32[$192>>2] = $191;
  $193 = ((($iX1$1)) + -12|0);
  $194 = +HEAPF32[$193>>2];
  $195 = ((($oX1$1)) + -12|0);
  HEAPF32[$195>>2] = $194;
  $196 = -$194;
  $197 = ((($oX2$1)) + 8|0);
  HEAPF32[$197>>2] = $196;
  $198 = +HEAPF32[$183>>2];
  HEAPF32[$182>>2] = $198;
  $199 = -$198;
  $200 = ((($oX2$1)) + 12|0);
  HEAPF32[$200>>2] = $199;
  $201 = ((($oX2$1)) + 16|0);
  $202 = ($201>>>0)<($183>>>0);
  if ($202) {
   $iX1$1 = $183;$oX1$1 = $182;$oX2$1 = $201;
  } else {
   $iX1$2 = $4;$oX1$2 = $4;
   break;
  }
 }
 while(1) {
  $203 = ((($oX1$2)) + -16|0);
  $204 = ((($iX1$2)) + 12|0);
  $205 = HEAP32[$204>>2]|0;
  HEAP32[$203>>2] = $205;
  $206 = ((($iX1$2)) + 8|0);
  $207 = HEAP32[$206>>2]|0;
  $208 = ((($oX1$2)) + -12|0);
  HEAP32[$208>>2] = $207;
  $209 = ((($iX1$2)) + 4|0);
  $210 = HEAP32[$209>>2]|0;
  $211 = ((($oX1$2)) + -8|0);
  HEAP32[$211>>2] = $210;
  $212 = HEAP32[$iX1$2>>2]|0;
  $213 = ((($oX1$2)) + -4|0);
  HEAP32[$213>>2] = $212;
  $214 = ((($iX1$2)) + 16|0);
  $215 = ($203>>>0)>($51>>>0);
  if ($215) {
   $iX1$2 = $214;$oX1$2 = $203;
  } else {
   break;
  }
 }
 return;
}