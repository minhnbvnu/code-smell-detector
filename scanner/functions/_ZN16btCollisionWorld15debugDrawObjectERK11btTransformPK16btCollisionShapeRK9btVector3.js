function _ZN16btCollisionWorld15debugDrawObjectERK11btTransformPK16btCollisionShapeRK9btVector3(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var r7;
	var r8;
	var r9;
	var r10;
	var r11;
	var r12;
	var r13;
	var r14;
	var r15;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
	var f6;
	var f7;
	var f8;
	var f9;
	var f10;
	var f11;
	var f12;
	var f13;
	var f14;
	var f15;
	var f16;
	var f17;
	var f18;
	var f19;
	var f20;
	var f21;
	var f22;
	var f23;
	var f24;
	var f25;
	var f26;
	var f27;
	var f28;
	var f29;
var __label__ = 0;
	i7 = sp + -1376;var g0 = i7>>2; // save stack
	r0 = heap32[(fp)];
	r1 = r0 >> 2;
	r2 = heap32[(r1)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r3 = r_g0 >> 2;
	r3 = heap32[(r3)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+14)];
	r4 = heap32[(fp+1)];
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r4;
	heap32[(g0+2)] = 1065353216;
	r2 = heap32[(fp+2)];
	r5 = r2 >> 2;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	r3 = heap32[(r5+1)];
	r6 = heap32[(fp+3)];
_1: do {
	if(r3 >10) //_LBB222_6
{
	if(r3 >27) //_LBB222_9
{
	if(r3 ==28) //_LBB222_23
{
	f0 = heapFloat[(r5+14)];
	f1 = heapFloat[(r5+13)];
	f2 = heapFloat[(r5+16)];
	f3 = heapFloat[(r5+12)];
	f4 = f0*f2;
	f5 = f1*f2;
	f2 = f3*f2;
	f6 =                         0;
	if(f0 <f6) //_LBB222_25
{
	f7 = -f0;
}
else{
	f7 = f0;
}
	f8 =       0.70710676908493042;
	if(f7 <=f8) //_LBB222_28
{
	f0 = f3*f3;
	f1 = f1*f1;
	f0 = f0+f1;
	heapFloat[(g0)] = f0;
	sqrtf(i7);
	f3 =                         1;
	f7 = heapFloat[(r5+13)];
	f9 = heapFloat[(r5+14)];
	f10 = f3/f_g0;
	f1 = heapFloat[(r5+12)];
	f3 = -f7;
	f8 = f1*f10;
	f1 = -f9;
	f11 = f10*f3;
	f12 =                       100;
	f1 = f8*f1;
	f3 = f9*f11;
	f7 = f0*f10;
	f0 = f11*f12;
}
else{
	f1 = f1*f1;
	f3 = f0*f0;
	f1 = f1+f3;
	heapFloat[(g0)] = f1;
	sqrtf(i7);
	f6 = heapFloat[(r5+14)];
	f0 =                         1;
	f7 = heapFloat[(r5+12)];
	f3 = f0/f_g0;
	f6 = -f6;
	f0 = heapFloat[(r5+13)];
	f8 = f3*f6;
	f6 = -f7;
	f0 = f0*f3;
	f9 =                       100;
	f1 = f1*f3;
	f3 = f0*f6;
	f7 = f7*f8;
	f6 = f0*f9;
	f0 =                         0;
}
	r2 = heap32[(r1)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+4)];
	heap32[(g0)] = r0;
	f9 =                       100;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r3 = r4 >> 2;
	f8 = f8*f9;
	r4 = r_g0 >> 2;
	f10 = f2-f0;
	f11 = heapFloat[(r3)];
	f12 = f5-f8;
	f13 = heapFloat[(r3+1)];
	r4 = heap32[(r4)];
	f14 = heapFloat[(r3+4)];
	f15 = heapFloat[(r3+5)];
	f16 = f11*f10;
	f17 = f13*f12;
	f18 = f4-f6;
	f19 = heapFloat[(r3+2)];
	r4 = r4 >> 2;
	f20 = heapFloat[(r3+8)];
	f21 = heapFloat[(r3+9)];
	f22 = heapFloat[(r3+6)];
	f23 = f14*f10;
	f24 = f15*f12;
	f16 = f16+f17;
	f17 = f19*f18;
	f25 = heapFloat[(r3+10)];
	r4 = heap32[(r4+2)];
	f10 = f20*f10;
	f12 = f21*f12;
	f23 = f23+f24;
	f24 = f22*f18;
	f16 = f16+f17;
	f17 = heapFloat[(r3+12)];
	f26 = heapFloat[(r3+14)];
	f27 = heapFloat[(r3+13)];
	f0 = f2+f0;
	f8 = f5+f8;
	r5 = sp + -64;
	f23 = f23+f24;
	f10 = f10+f12;
	f12 = f25*f18;
	f16 = f16+f17;
	f6 = f4+f6;
	f10 = f10+f12;
	f11 = f11*f0;
	f12 = f13*f8;
	r7 = r5 >> 2;
	f13 = f23+f27;
	heapFloat[(fp+-16)] = f16;
	f14 = f14*f0;
	f15 = f15*f8;
	f11 = f11+f12;
	f12 = f19*f6;
	f10 = f10+f26;
	heapFloat[(r7+1)] = f13;
	f11 = f11+f12;
	heapFloat[(r7+2)] = f10;
	f0 = f20*f0;
	f8 = f21*f8;
	f10 = f14+f15;
	f12 = f22*f6;
	r8 = sp + -48;
	f10 = f10+f12;
	f0 = f0+f8;
	f6 = f25*f6;
	f8 = f11+f17;
	heap32[(r7+3)] = 0;
	f0 = f0+f6;
	r7 = r8 >> 2;
	f6 = f10+f27;
	heapFloat[(fp+-12)] = f8;
	f0 = f0+f26;
	heapFloat[(r7+1)] = f6;
	heapFloat[(r7+2)] = f0;
	heap32[(r7+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r8;
	heap32[(g0+2)] = r5;
	heap32[(g0+3)] = r6;
	__FUNCTION_TABLE__[(r4)>>2](i7);
	r1 = heap32[(r1)];
	r1 = r1 >> 2;
	r1 = heap32[(r1+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r1)>>2](i7);
	f0 = f1*f9;
	f1 = f3*f9;
	f3 = f7*f9;
	r1 = r_g0 >> 2;
	f6 = f2-f0;
	f7 = heapFloat[(r3)];
	f8 = f5-f1;
	f9 = heapFloat[(r3+1)];
	r1 = heap32[(r1)];
	f10 = heapFloat[(r3+4)];
	f11 = heapFloat[(r3+5)];
	f12 = f7*f6;
	f13 = f9*f8;
	f14 = f4-f3;
	f15 = heapFloat[(r3+2)];
	r1 = r1 >> 2;
	f16 = heapFloat[(r3+8)];
	f17 = heapFloat[(r3+9)];
	f18 = heapFloat[(r3+6)];
	f19 = f10*f6;
	f20 = f11*f8;
	f12 = f12+f13;
	f13 = f15*f14;
	f21 = heapFloat[(r3+10)];
	r1 = heap32[(r1+2)];
	f6 = f16*f6;
	f8 = f17*f8;
	f19 = f19+f20;
	f20 = f18*f14;
	f12 = f12+f13;
	f13 = heapFloat[(r3+12)];
	f22 = heapFloat[(r3+14)];
	f23 = heapFloat[(r3+13)];
	f0 = f2+f0;
	f1 = f5+f1;
	r2 = sp + -32;
	f2 = f19+f20;
	f5 = f6+f8;
	f6 = f21*f14;
	f8 = f12+f13;
	f3 = f4+f3;
	f4 = f5+f6;
	f5 = f7*f0;
	f6 = f9*f1;
	r3 = r2 >> 2;
	f2 = f2+f23;
	heapFloat[(fp+-8)] = f8;
	f7 = f10*f0;
	f8 = f11*f1;
	f5 = f5+f6;
	f6 = f15*f3;
	f4 = f4+f22;
	heapFloat[(r3+1)] = f2;
	f2 = f5+f6;
	heapFloat[(r3+2)] = f4;
	f0 = f16*f0;
	f1 = f17*f1;
	f4 = f7+f8;
	f5 = f18*f3;
	r4 = sp + -16;
	f4 = f4+f5;
	f0 = f0+f1;
	f1 = f21*f3;
	f2 = f2+f13;
	heap32[(r3+3)] = 0;
	f0 = f0+f1;
	r3 = r4 >> 2;
	f1 = f4+f23;
	heapFloat[(fp+-4)] = f2;
	f0 = f0+f22;
	heapFloat[(r3+1)] = f1;
	heapFloat[(r3+2)] = f0;
	heap32[(r3+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r4;
__label__ = 30;
break _1;
}
else{
	if(r3 !=31) //_LBB222_32
{
__label__ = 32;
break _1;
}
else{
	r2 = heap32[(r5+4)];
	r3 = (r2 + -1)|0;
	if(r3 <0) //_LBB222_42
{
__label__ = 40;
break _1;
}
else{
	r3 = 1;
	r2 = (r3 - r2)|0;
_18: while(true){
	r3 = r2;
	r2 = (r3 * -20)|0;
	r7 = heap32[(r5+6)];
	r2 = r2 << 2;
	r2 = (r7 + r2)|0;
	r2 = r2 >> 2;
	r7 = r4 >> 2;
	r8 = heap32[(r1)];
	f0 = heapFloat[(r2)];
	f1 = heapFloat[(r7)];
	f2 = heapFloat[(r2+4)];
	f3 = heapFloat[(r7+1)];
	r8 = r8 >> 2;
	f4 = heapFloat[(r2+1)];
	f5 = heapFloat[(r2+5)];
	f6 = f0*f1;
	f7 = f2*f3;
	f8 = heapFloat[(r2+8)];
	f9 = heapFloat[(r7+2)];
	f10 = heapFloat[(r7+8)];
	f11 = heapFloat[(r2+2)];
	f12 = heapFloat[(r7+4)];
	f13 = heapFloat[(r2+12)];
	f14 = heapFloat[(r7+9)];
	f15 = heapFloat[(r2+6)];
	f16 = heapFloat[(r7+5)];
	f17 = heapFloat[(r2+13)];
	f18 = heapFloat[(r2+9)];
	f19 = heapFloat[(r7+10)];
	f20 = heapFloat[(r2+10)];
	f21 = heapFloat[(r7+6)];
	f22 = heapFloat[(r2+14)];
	r8 = heap32[(r8+6)];
	f23 = f4*f1;
	f24 = f5*f3;
	f6 = f6+f7;
	f7 = f8*f9;
	r2 = heap32[(r2+16)];
	f25 = heapFloat[(r7+14)];
	f26 = heapFloat[(r7+13)];
	f27 = heapFloat[(r7+12)];
	r7 = sp + -688;
	f28 = f11*f1;
	f29 = f15*f3;
	f23 = f23+f24;
	f24 = f18*f9;
	f6 = f6+f7;
	r9 = r7 >> 2;
	f7 = f28+f29;
	f28 = f20*f9;
	f23 = f23+f24;
	heapFloat[(fp+-172)] = f6;
	f6 = f0*f12;
	f24 = f2*f16;
	f7 = f7+f28;
	heapFloat[(r9+1)] = f23;
	heapFloat[(r9+2)] = f7;
	f7 = f4*f12;
	f23 = f5*f16;
	f6 = f6+f24;
	f24 = f8*f21;
	f28 = f11*f12;
	f29 = f15*f16;
	f7 = f7+f23;
	f23 = f18*f21;
	f6 = f6+f24;
	heap32[(r9+3)] = 0;
	f24 = f28+f29;
	f28 = f20*f21;
	f7 = f7+f23;
	heapFloat[(r9+4)] = f6;
	f0 = f0*f10;
	f2 = f2*f14;
	f6 = f24+f28;
	heapFloat[(r9+5)] = f7;
	heapFloat[(r9+6)] = f6;
	f4 = f4*f10;
	f5 = f5*f14;
	f0 = f0+f2;
	f2 = f8*f19;
	f6 = f11*f10;
	f7 = f15*f14;
	f4 = f4+f5;
	f5 = f18*f19;
	f0 = f0+f2;
	heap32[(r9+7)] = 0;
	f1 = f1*f13;
	f2 = f3*f17;
	f3 = f6+f7;
	f6 = f20*f19;
	f4 = f4+f5;
	heapFloat[(r9+8)] = f0;
	f0 = f12*f13;
	f5 = f16*f17;
	f1 = f1+f2;
	f2 = f9*f22;
	f3 = f3+f6;
	heapFloat[(r9+9)] = f4;
	f1 = f1+f2;
	heapFloat[(r9+10)] = f3;
	f2 = f10*f13;
	f3 = f14*f17;
	f0 = f0+f5;
	f4 = f21*f22;
	f0 = f0+f4;
	f2 = f2+f3;
	f3 = f19*f22;
	f1 = f1+f27;
	heap32[(r9+11)] = 0;
	f2 = f2+f3;
	f0 = f0+f26;
	heapFloat[(r9+12)] = f1;
	f1 = f2+f25;
	heapFloat[(r9+13)] = f0;
	heapFloat[(r9+14)] = f1;
	heap32[(r9+15)] = 0;
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r7;
	heap32[(g0+2)] = r2;
	heap32[(g0+3)] = r6;
	r2 = (r3 + 1)|0;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	if(r3 ==0) //_LBB222_42
{
__label__ = 40;
break _1;
}
else{
continue _18;
}
}
}
}
}
}
else{
	if(r3 ==11) //_LBB222_20
{
	r2 = r4 >> 2;
	r3 = heap32[(r5+17)];
	f0 = heapFloat[(r5+14)];
	f1 = heapFloat[(r5+15)];
	f2 = heapFloat[(r2+12)];
	f3 = heapFloat[(r2+13)];
	f4 = heapFloat[(r2+14)];
	r4 = sp + -880;
	r5 = r4 >> 2;
	heap32[(fp+-220)] = 0;
	heap32[(r5+1)] = 0;
	r7 = r3 << 2;
	r4 = (r4 + r7)|0;
	f5 =                       0.5;
	heap32[(r5+2)] = 0;
	r4 = r4 >> 2;
	f1 = f1*f5;
	heap32[(r5+3)] = 0;
	r8 = sp + -896;
	heapFloat[(r4)] = f1;
	r4 = (r3 + 1)|0;
	r4 = (r4 % 3)|0;
	r9 = r8 >> 2;
	heap32[(fp+-224)] = 0;
	heap32[(r9+1)] = 0;
	r4 = r4 << 2;
	r8 = (r8 + r4)|0;
	heap32[(r9+2)] = 0;
	r8 = r8 >> 2;
	heap32[(r9+3)] = 0;
	r3 = (r3 + 2)|0;
	r10 = sp + -912;
	heapFloat[(r8)] = f0;
	r3 = (r3 % 3)|0;
	r8 = r10 >> 2;
	heap32[(fp+-228)] = 0;
	r3 = r3 << 2;
	heap32[(r8+1)] = 0;
	r3 = (r10 + r3)|0;
	heap32[(r8+2)] = 0;
	r3 = r3 >> 2;
	heap32[(r8+3)] = 0;
	heapFloat[(r3)] = f0;
	r3 = heap32[(r1)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	f1 = heapFloat[(r5+1)];
	f5 = heapFloat[(fp+-220)];
	f6 = heapFloat[(r9+1)];
	f7 = heapFloat[(fp+-224)];
	r10 = r_g0 >> 2;
	f8 = heapFloat[(r5+2)];
	f9 = heapFloat[(r9+2)];
	f10 = heapFloat[(r2)];
	f11 = f7-f5;
	f12 = heapFloat[(r2+1)];
	f13 = f6-f1;
	f14 = heapFloat[(r2+4)];
	f15 = heapFloat[(r2+5)];
	r5 = heap32[(r10)];
	f16 = heapFloat[(r2+2)];
	f17 = f9-f8;
	f18 = f10*f11;
	f19 = f12*f13;
	f20 = heapFloat[(r2+8)];
	f21 = heapFloat[(r2+9)];
	f22 = heapFloat[(r2+6)];
	r5 = r5 >> 2;
	f23 = f14*f11;
	f24 = f15*f13;
	f18 = f18+f19;
	f19 = f16*f17;
	f25 = heapFloat[(r2+10)];
	r5 = heap32[(r5+2)];
	f18 = f18+f19;
	f11 = f20*f11;
	f13 = f21*f13;
	f19 = f23+f24;
	f23 = f22*f17;
	r9 = sp + -416;
	f19 = f19+f23;
	f11 = f11+f13;
	f13 = f25*f17;
	f17 = f2+f18;
	f11 = f11+f13;
	f10 = f10*f5;
	f12 = f12*f1;
	r10 = r9 >> 2;
	f13 = f3+f19;
	heapFloat[(fp+-104)] = f17;
	f14 = f14*f5;
	f15 = f15*f1;
	f10 = f10+f12;
	f12 = f16*f8;
	f11 = f4+f11;
	heapFloat[(r10+1)] = f13;
	f10 = f10+f12;
	heapFloat[(r10+2)] = f11;
	f11 = f20*f5;
	f12 = f21*f1;
	f13 = f14+f15;
	f14 = f22*f8;
	r11 = sp + -400;
	f13 = f13+f14;
	f11 = f11+f12;
	f12 = f25*f8;
	f10 = f2+f10;
	heap32[(r10+3)] = 0;
	f11 = f11+f12;
	r10 = r11 >> 2;
	f12 = f3+f13;
	heapFloat[(fp+-100)] = f10;
	f10 = f4+f11;
	heapFloat[(r10+1)] = f12;
	heapFloat[(r10+2)] = f10;
	heap32[(r10+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r11;
	heap32[(g0+2)] = r9;
	heap32[(g0+3)] = r6;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	r3 = heap32[(r1)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	f10 = -f5;
	f11 = -f1;
	f12 = -f8;
	r5 = r_g0 >> 2;
	f13 = heapFloat[(r2)];
	f7 = f10-f7;
	f14 = heapFloat[(r2+1)];
	f6 = f11-f6;
	f15 = heapFloat[(r2+4)];
	f16 = heapFloat[(r2+5)];
	r5 = heap32[(r5)];
	f17 = heapFloat[(r2+2)];
	f9 = f12-f9;
	f18 = f13*f7;
	f19 = f14*f6;
	f20 = heapFloat[(r2+8)];
	f21 = heapFloat[(r2+9)];
	f22 = heapFloat[(r2+6)];
	r5 = r5 >> 2;
	f23 = f15*f7;
	f24 = f16*f6;
	f18 = f18+f19;
	f19 = f17*f9;
	f25 = heapFloat[(r2+10)];
	r5 = heap32[(r5+2)];
	f18 = f18+f19;
	f7 = f20*f7;
	f6 = f21*f6;
	f19 = f23+f24;
	f23 = f22*f9;
	r9 = sp + -384;
	f19 = f19+f23;
	f6 = f7+f6;
	f7 = f25*f9;
	f9 = f2+f18;
	f6 = f6+f7;
	f7 = f13*f5;
	f13 = f14*f1;
	r10 = r9 >> 2;
	f14 = f3+f19;
	heapFloat[(fp+-96)] = f9;
	f9 = f15*f5;
	f15 = f16*f1;
	f7 = f7+f13;
	f13 = f17*f8;
	f6 = f4+f6;
	heapFloat[(r10+1)] = f14;
	f7 = f7+f13;
	heapFloat[(r10+2)] = f6;
	f6 = f20*f5;
	f13 = f21*f1;
	f9 = f9+f15;
	f14 = f22*f8;
	r11 = sp + -368;
	f9 = f9+f14;
	f6 = f6+f13;
	f13 = f25*f8;
	f7 = f2+f7;
	heap32[(r10+3)] = 0;
	f6 = f6+f13;
	r10 = r11 >> 2;
	f9 = f3+f9;
	heapFloat[(fp+-92)] = f7;
	f6 = f4+f6;
	heapFloat[(r10+1)] = f9;
	heapFloat[(r10+2)] = f6;
	heap32[(r10+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r11;
	heap32[(g0+2)] = r9;
	heap32[(g0+3)] = r6;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	r3 = heap32[(r1)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	f6 = heapFloat[(r8+1)];
	f7 = heapFloat[(fp+-228)];
	f9 = heapFloat[(r8+2)];
	r5 = r_g0 >> 2;
	f13 = heapFloat[(r2)];
	f14 = f7-f5;
	f15 = heapFloat[(r2+1)];
	f16 = f6-f1;
	f17 = heapFloat[(r2+4)];
	f18 = heapFloat[(r2+5)];
	r5 = heap32[(r5)];
	f19 = heapFloat[(r2+2)];
	f20 = f9-f8;
	f21 = f13*f14;
	f22 = f15*f16;
	f23 = heapFloat[(r2+8)];
	f24 = heapFloat[(r2+9)];
	f25 = heapFloat[(r2+6)];
	r5 = r5 >> 2;
	f26 = f17*f14;
	f27 = f18*f16;
	f21 = f21+f22;
	f22 = f19*f20;
	f28 = heapFloat[(r2+10)];
	r5 = heap32[(r5+2)];
	f21 = f21+f22;
	f14 = f23*f14;
	f16 = f24*f16;
	f22 = f26+f27;
	f26 = f25*f20;
	r8 = sp + -352;
	f22 = f22+f26;
	f14 = f14+f16;
	f16 = f28*f20;
	f20 = f2+f21;
	f14 = f14+f16;
	f13 = f13*f5;
	f15 = f15*f1;
	r9 = r8 >> 2;
	f16 = f3+f22;
	heapFloat[(fp+-88)] = f20;
	f17 = f17*f5;
	f18 = f18*f1;
	f13 = f13+f15;
	f15 = f19*f8;
	f14 = f4+f14;
	heapFloat[(r9+1)] = f16;
	f13 = f13+f15;
	heapFloat[(r9+2)] = f14;
	f14 = f23*f5;
	f15 = f24*f1;
	f16 = f17+f18;
	f17 = f25*f8;
	r10 = sp + -336;
	f16 = f16+f17;
	f14 = f14+f15;
	f15 = f28*f8;
	f13 = f2+f13;
	heap32[(r9+3)] = 0;
	f14 = f14+f15;
	r9 = r10 >> 2;
	f15 = f3+f16;
	heapFloat[(fp+-84)] = f13;
	f13 = f4+f14;
	heapFloat[(r9+1)] = f15;
	heapFloat[(r9+2)] = f13;
	heap32[(r9+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r10;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = r6;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	r3 = heap32[(r1)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	r5 = r_g0 >> 2;
	f13 = heapFloat[(r2)];
	f7 = f10-f7;
	f10 = heapFloat[(r2+1)];
	f6 = f11-f6;
	f11 = heapFloat[(r2+4)];
	f14 = heapFloat[(r2+5)];
	r5 = heap32[(r5)];
	f15 = heapFloat[(r2+2)];
	f9 = f12-f9;
	f12 = f13*f7;
	f16 = f10*f6;
	f17 = heapFloat[(r2+8)];
	f18 = heapFloat[(r2+9)];
	f19 = heapFloat[(r2+6)];
	r5 = r5 >> 2;
	f20 = f11*f7;
	f21 = f14*f6;
	f12 = f12+f16;
	f16 = f15*f9;
	f22 = heapFloat[(r2+10)];
	r5 = heap32[(r5+2)];
	f12 = f12+f16;
	f7 = f17*f7;
	f6 = f18*f6;
	f16 = f20+f21;
	f20 = f19*f9;
	r8 = sp + -320;
	f16 = f16+f20;
	f6 = f7+f6;
	f7 = f22*f9;
	f9 = f2+f12;
	f6 = f6+f7;
	f7 = f13*f5;
	f10 = f10*f1;
	r9 = r8 >> 2;
	f12 = f3+f16;
	heapFloat[(fp+-80)] = f9;
	f9 = f11*f5;
	f11 = f14*f1;
	f7 = f7+f10;
	f10 = f15*f8;
	f6 = f4+f6;
	heapFloat[(r9+1)] = f12;
	f7 = f7+f10;
	heapFloat[(r9+2)] = f6;
	f6 = f17*f5;
	f10 = f18*f1;
	f9 = f9+f11;
	f11 = f19*f8;
	r10 = sp + -304;
	f9 = f9+f11;
	f6 = f6+f10;
	f10 = f22*f8;
	f7 = f2+f7;
	heap32[(r9+3)] = 0;
	f6 = f6+f10;
	r9 = r10 >> 2;
	f9 = f3+f9;
	heapFloat[(fp+-76)] = f7;
	f6 = f4+f6;
	heapFloat[(r9+1)] = f9;
	heapFloat[(r9+2)] = f6;
	heap32[(r9+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r10;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = r6;
	r3 = sp + -928;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	r5 = r3 >> 2;
	heap32[(fp+-232)] = 0;
	heap32[(r5+1)] = 0;
	r3 = (r3 + r7)|0;
	heap32[(r5+2)] = 0;
	r3 = r3 >> 2;
	heap32[(r5+3)] = 0;
	r7 = sp + -944;
	heap32[(r3)] = 1065353216;
	r3 = r7 >> 2;
	heap32[(fp+-236)] = 0;
	heap32[(r3+1)] = 0;
	r4 = (r7 + r4)|0;
	heap32[(r3+2)] = 0;
	r4 = r4 >> 2;
	heap32[(r3+3)] = 0;
	heap32[(r4)] = 1065353216;
	r1 = heap32[(r1)];
	r1 = r1 >> 2;
	r1 = heap32[(r1+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r1)>>2](i7);
	r1 = r_g0 >> 2;
	r1 = heap32[(r1)];
	f6 = heapFloat[(r2)];
	f7 = heapFloat[(fp+-236)];
	f9 = heapFloat[(r2+1)];
	f10 = heapFloat[(r3+1)];
	f11 = heapFloat[(r2+4)];
	f12 = heapFloat[(r2+5)];
	r1 = r1 >> 2;
	f13 = heapFloat[(r2+2)];
	f14 = heapFloat[(r3+2)];
	f15 = f6*f7;
	f16 = f9*f10;
	f17 = heapFloat[(r2+8)];
	f18 = heapFloat[(r2+9)];
	f19 = heapFloat[(r2+10)];
	f20 = heapFloat[(r2+6)];
	r1 = heap32[(r1+15)];
	f21 = f11*f7;
	f22 = f12*f10;
	f15 = f15+f16;
	f16 = f13*f14;
	r2 = sp + -288;
	f7 = f17*f7;
	f10 = f18*f10;
	f21 = f21+f22;
	f22 = f20*f14;
	f15 = f15+f16;
	r3 = r2 >> 2;
	f7 = f7+f10;
	f10 = f19*f14;
	f14 = f21+f22;
	heapFloat[(fp+-72)] = f15;
	f7 = f7+f10;
	heapFloat[(r3+1)] = f14;
	heapFloat[(r3+2)] = f7;
	heap32[(r3+3)] = 0;
	f7 = heapFloat[(fp+-232)];
	f10 = heapFloat[(r5+1)];
	f14 = heapFloat[(r5+2)];
	f15 = f6*f7;
	f16 = f9*f10;
	f21 = f11*f7;
	f22 = f12*f10;
	f15 = f15+f16;
	f16 = f13*f14;
	r3 = sp + -272;
	f7 = f17*f7;
	f10 = f18*f10;
	f21 = f21+f22;
	f22 = f20*f14;
	f15 = f15+f16;
	f6 = f6*f5;
	f9 = f9*f1;
	r4 = r3 >> 2;
	f7 = f7+f10;
	f10 = f19*f14;
	f14 = f21+f22;
	heapFloat[(fp+-68)] = f15;
	f11 = f11*f5;
	f12 = f12*f1;
	f6 = f6+f9;
	f9 = f13*f8;
	f7 = f7+f10;
	heapFloat[(r4+1)] = f14;
	f6 = f6+f9;
	heapFloat[(r4+2)] = f7;
	f5 = f17*f5;
	f1 = f18*f1;
	f7 = f11+f12;
	f9 = f20*f8;
	r5 = sp + -256;
	f7 = f7+f9;
	f1 = f5+f1;
	f5 = f19*f8;
	f2 = f2-f6;
	heap32[(r4+3)] = 0;
	f1 = f1+f5;
	r4 = r5 >> 2;
	f3 = f3-f7;
	heapFloat[(fp+-64)] = f2;
	f1 = f4-f1;
	heapFloat[(r4+1)] = f3;
	heapFloat[(r4+2)] = f1;
	heap32[(r4+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r5;
	heap32[(g0+2)] = r3;
}
else{
	if(r3 ==13) //_LBB222_21
{
	r3 = heap32[(r5)];
	r3 = r3 >> 2;
	r7 = heap32[(r5+13)];
	r3 = heap32[(r3+21)];
	heap32[(g0)] = r2;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	f0 = f_g0;
	r3 = sp + -240;
	f1 = heapFloat[(r5+8)];
	f2 = heapFloat[(r5+9)];
	f3 = heapFloat[(r5+7)];
	r8 = r3 >> 2;
	heap32[(r8+3)] = heap32[(r5+10)];
	r9 = heap32[(r5)];
	r9 = r9 >> 2;
	r9 = heap32[(r9+11)];
	heap32[(g0)] = r2;
	__FUNCTION_TABLE__[(r9)>>2](i7);
	f4 = f_g0;
	r9 = heap32[(r5)];
	r9 = r9 >> 2;
	r9 = heap32[(r9+11)];
	heap32[(g0)] = r2;
	__FUNCTION_TABLE__[(r9)>>2](i7);
	f5 = f_g0;
	r5 = heap32[(r5)];
	r5 = r5 >> 2;
	r5 = heap32[(r5+11)];
	heap32[(g0)] = r2;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	f3 = f3+f_g0;
	r2 = r7 << 2;
	f1 = f1+f5;
	heapFloat[(fp+-60)] = f3;
	r3 = (r3 + r2)|0;
	f2 = f2+f4;
	heapFloat[(r8+1)] = f1;
	r3 = r3 >> 2;
	heapFloat[(r8+2)] = f2;
	r4 = r4 >> 2;
	f1 = heapFloat[(r3)];
	f2 = heapFloat[(r4+12)];
	f3 = heapFloat[(r4+13)];
	f4 = heapFloat[(r4+14)];
	r3 = sp + -960;
	r5 = r3 >> 2;
	heap32[(fp+-240)] = 0;
	heap32[(r5+1)] = 0;
	r3 = (r3 + r2)|0;
	heap32[(r5+2)] = 0;
	r3 = r3 >> 2;
	heap32[(r5+3)] = 0;
	r8 = sp + -976;
	heapFloat[(r3)] = f1;
	r3 = (r7 + 1)|0;
	r3 = (r3 % 3)|0;
	r7 = r8 >> 2;
	heap32[(fp+-244)] = 0;
	heap32[(r7+1)] = 0;
	r3 = r3 << 2;
	r8 = (r8 + r3)|0;
	heap32[(r7+2)] = 0;
	r8 = r8 >> 2;
	heap32[(r7+3)] = 0;
	heapFloat[(r8)] = f0;
	r8 = heap32[(r1)];
	r8 = r8 >> 2;
	r8 = heap32[(r8+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	f1 = heapFloat[(r5+1)];
	f5 = heapFloat[(r7+1)];
	f6 = heapFloat[(fp+-240)];
	f7 = heapFloat[(fp+-244)];
	r9 = r_g0 >> 2;
	f8 = heapFloat[(r5+2)];
	f9 = heapFloat[(r7+2)];
	f10 = f7-f6;
	f11 = heapFloat[(r4)];
	f12 = f5-f1;
	f13 = heapFloat[(r4+1)];
	r5 = heap32[(r9)];
	f14 = heapFloat[(r4+4)];
	f15 = heapFloat[(r4+5)];
	f16 = f11*f10;
	f17 = f13*f12;
	f18 = f9-f8;
	f19 = heapFloat[(r4+2)];
	r5 = r5 >> 2;
	f20 = heapFloat[(r4+8)];
	f21 = heapFloat[(r4+9)];
	f22 = heapFloat[(r4+6)];
	f23 = f14*f10;
	f24 = f15*f12;
	f16 = f16+f17;
	f17 = f19*f18;
	f16 = f16+f17;
	f17 = heapFloat[(r4+10)];
	r5 = heap32[(r5+2)];
	f10 = f20*f10;
	f12 = f21*f12;
	f23 = f23+f24;
	f24 = f22*f18;
	f25 = f6+f7;
	f26 = f1+f5;
	r7 = sp + -224;
	f23 = f23+f24;
	f10 = f10+f12;
	f12 = f17*f18;
	f16 = f2+f16;
	f18 = f8+f9;
	f10 = f10+f12;
	f11 = f11*f25;
	f12 = f13*f26;
	r9 = r7 >> 2;
	f13 = f3+f23;
	heapFloat[(fp+-56)] = f16;
	f14 = f14*f25;
	f15 = f15*f26;
	f11 = f11+f12;
	f12 = f19*f18;
	f10 = f4+f10;
	heapFloat[(r9+1)] = f13;
	f11 = f11+f12;
	heapFloat[(r9+2)] = f10;
	f10 = f20*f25;
	f12 = f21*f26;
	f13 = f14+f15;
	f14 = f22*f18;
	r10 = sp + -208;
	f13 = f13+f14;
	f10 = f10+f12;
	f12 = f17*f18;
	f11 = f2+f11;
	heap32[(r9+3)] = 0;
	f10 = f10+f12;
	r9 = r10 >> 2;
	f12 = f3+f13;
	heapFloat[(fp+-52)] = f11;
	f10 = f4+f10;
	heapFloat[(r9+1)] = f12;
	heapFloat[(r9+2)] = f10;
	heap32[(r9+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r10;
	heap32[(g0+2)] = r7;
	heap32[(g0+3)] = r6;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	r5 = heap32[(r1)];
	r5 = r5 >> 2;
	r5 = heap32[(r5+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	f10 = -f6;
	f11 = -f1;
	f12 = -f8;
	r7 = r_g0 >> 2;
	f10 = f10-f7;
	f13 = heapFloat[(r4)];
	f11 = f11-f5;
	f14 = heapFloat[(r4+1)];
	r7 = heap32[(r7)];
	f15 = heapFloat[(r4+4)];
	f16 = heapFloat[(r4+5)];
	f17 = f13*f10;
	f18 = f14*f11;
	f12 = f12-f9;
	f19 = heapFloat[(r4+2)];
	r7 = r7 >> 2;
	f20 = heapFloat[(r4+8)];
	f21 = heapFloat[(r4+9)];
	f22 = heapFloat[(r4+6)];
	f23 = f15*f10;
	f24 = f16*f11;
	f17 = f17+f18;
	f18 = f19*f12;
	f17 = f17+f18;
	f18 = heapFloat[(r4+10)];
	r7 = heap32[(r7+2)];
	f10 = f20*f10;
	f11 = f21*f11;
	f23 = f23+f24;
	f24 = f22*f12;
	f7 = f6-f7;
	f5 = f1-f5;
	r8 = sp + -192;
	f23 = f23+f24;
	f10 = f10+f11;
	f11 = f18*f12;
	f12 = f2+f17;
	f9 = f8-f9;
	f10 = f10+f11;
	f11 = f13*f7;
	f13 = f14*f5;
	r9 = r8 >> 2;
	f14 = f3+f23;
	heapFloat[(fp+-48)] = f12;
	f12 = f15*f7;
	f15 = f16*f5;
	f11 = f11+f13;
	f13 = f19*f9;
	f10 = f4+f10;
	heapFloat[(r9+1)] = f14;
	f11 = f11+f13;
	heapFloat[(r9+2)] = f10;
	f7 = f20*f7;
	f5 = f21*f5;
	f10 = f12+f15;
	f12 = f22*f9;
	r10 = sp + -176;
	f10 = f10+f12;
	f5 = f7+f5;
	f7 = f18*f9;
	f9 = f2+f11;
	heap32[(r9+3)] = 0;
	f5 = f5+f7;
	r9 = r10 >> 2;
	f7 = f3+f10;
	heapFloat[(fp+-44)] = f9;
	f5 = f4+f5;
	heapFloat[(r9+1)] = f7;
	heapFloat[(r9+2)] = f5;
	heap32[(r9+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r10;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = r6;
	r5 = sp + -992;
	__FUNCTION_TABLE__[(r7)>>2](i7);
	r7 = r5 >> 2;
	heap32[(fp+-248)] = 0;
	heap32[(r7+1)] = 0;
	r2 = (r5 + r2)|0;
	heap32[(r7+2)] = 0;
	r2 = r2 >> 2;
	heap32[(r7+3)] = 0;
	r5 = sp + -1008;
	heap32[(r2)] = 1065353216;
	r2 = r5 >> 2;
	heap32[(fp+-252)] = 0;
	heap32[(r2+1)] = 0;
	r3 = (r5 + r3)|0;
	heap32[(r2+2)] = 0;
	r3 = r3 >> 2;
	heap32[(r2+3)] = 0;
	heap32[(r3)] = 1065353216;
	r3 = heap32[(r1)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	r5 = r_g0 >> 2;
	r5 = heap32[(r5)];
	f5 = heapFloat[(r4)];
	f7 = heapFloat[(fp+-252)];
	f9 = heapFloat[(r4+1)];
	f10 = heapFloat[(r2+1)];
	f11 = heapFloat[(r4+4)];
	f12 = heapFloat[(r4+5)];
	r5 = r5 >> 2;
	f13 = heapFloat[(r4+2)];
	f14 = heapFloat[(r2+2)];
	f15 = f5*f7;
	f16 = f9*f10;
	f17 = heapFloat[(r4+8)];
	f18 = heapFloat[(r4+9)];
	f19 = heapFloat[(r4+10)];
	f20 = heapFloat[(r4+6)];
	r2 = heap32[(r5+15)];
	f21 = f11*f7;
	f22 = f12*f10;
	f15 = f15+f16;
	f16 = f13*f14;
	r5 = sp + -160;
	f23 = f17*f7;
	f24 = f18*f10;
	f21 = f21+f22;
	f22 = f20*f14;
	f15 = f15+f16;
	r8 = r5 >> 2;
	f16 = f23+f24;
	f23 = f19*f14;
	f21 = f21+f22;
	heapFloat[(fp+-40)] = f15;
	f15 = f16+f23;
	heapFloat[(r8+1)] = f21;
	heapFloat[(r8+2)] = f15;
	heap32[(r8+3)] = 0;
	f15 = heapFloat[(fp+-248)];
	f16 = heapFloat[(r7+1)];
	f21 = heapFloat[(r7+2)];
	f22 = f5*f15;
	f23 = f9*f16;
	f24 = f11*f15;
	f25 = f12*f16;
	f22 = f22+f23;
	f23 = f13*f21;
	r7 = sp + -144;
	f26 = f17*f15;
	f27 = f18*f16;
	f24 = f24+f25;
	f25 = f20*f21;
	f22 = f22+f23;
	f5 = f5*f6;
	f9 = f9*f1;
	r8 = r7 >> 2;
	f23 = f26+f27;
	f26 = f19*f21;
	f24 = f24+f25;
	heapFloat[(fp+-36)] = f22;
	f11 = f11*f6;
	f12 = f12*f1;
	f5 = f5+f9;
	f9 = f13*f8;
	f13 = f23+f26;
	heapFloat[(r8+1)] = f24;
	f5 = f5+f9;
	heapFloat[(r8+2)] = f13;
	f9 = f17*f6;
	f13 = f18*f1;
	f11 = f11+f12;
	f12 = f20*f8;
	r9 = sp + -128;
	f11 = f11+f12;
	f9 = f9+f13;
	f12 = f19*f8;
	f5 = f2-f5;
	heap32[(r8+3)] = 0;
	f9 = f9+f12;
	r8 = r9 >> 2;
	f11 = f3-f11;
	heapFloat[(fp+-32)] = f5;
	f5 = f4-f9;
	heapFloat[(r8+1)] = f11;
	heapFloat[(r8+2)] = f5;
	heap32[(r8+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r9;
	heap32[(g0+2)] = r7;
	heap32[(g0+3)] = r5;
	heapFloat[(g0+4)] = f0;
	heapFloat[(g0+5)] = f0;
	heap32[(g0+6)] = 0;
	heap32[(g0+7)] = 1086918619;
	heap32[(g0+8)] = r6;
	heap32[(g0+9)] = 0;
	heap32[(g0+10)] = 1092616192;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	r1 = heap32[(r1)];
	r1 = r1 >> 2;
	r1 = heap32[(r1+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r1)>>2](i7);
	r1 = r_g0 >> 2;
	f5 = heapFloat[(r4)];
	f9 = heapFloat[(r4+1)];
	r1 = heap32[(r1)];
	f11 = heapFloat[(r4+4)];
	f12 = heapFloat[(r4+5)];
	f13 = heapFloat[(r4+2)];
	r1 = r1 >> 2;
	f17 = f5*f7;
	f18 = f9*f10;
	f19 = heapFloat[(r4+8)];
	f20 = heapFloat[(r4+9)];
	f22 = heapFloat[(r4+10)];
	f23 = heapFloat[(r4+6)];
	r1 = heap32[(r1+15)];
	f24 = f11*f7;
	f25 = f12*f10;
	f17 = f17+f18;
	f18 = f13*f14;
	r2 = sp + -112;
	f7 = f19*f7;
	f10 = f20*f10;
	f24 = f24+f25;
	f25 = f23*f14;
	f17 = f17+f18;
	r3 = r2 >> 2;
	f7 = f7+f10;
	f10 = f22*f14;
	f14 = f24+f25;
	heapFloat[(fp+-28)] = f17;
	f17 = f5*f15;
	f18 = f9*f16;
	f7 = f7+f10;
	heapFloat[(r3+1)] = f14;
	heapFloat[(r3+2)] = f7;
	f7 = f11*f15;
	f10 = f12*f16;
	f14 = f17+f18;
	f17 = f13*f21;
	r4 = sp + -96;
	f15 = f19*f15;
	f16 = f20*f16;
	f7 = f7+f10;
	f10 = f23*f21;
	f14 = f14+f17;
	heap32[(r3+3)] = 0;
	f5 = f5*f6;
	f9 = f9*f1;
	r3 = r4 >> 2;
	f15 = f15+f16;
	f16 = f22*f21;
	f7 = f7+f10;
	heapFloat[(fp+-24)] = f14;
	f10 = f11*f6;
	f11 = f12*f1;
	f5 = f5+f9;
	f9 = f13*f8;
	f12 = f15+f16;
	heapFloat[(r3+1)] = f7;
	f5 = f5+f9;
	heapFloat[(r3+2)] = f12;
	f6 = f19*f6;
	f1 = f20*f1;
	f7 = f10+f11;
	f9 = f23*f8;
	r5 = sp + -80;
	f7 = f7+f9;
	f1 = f6+f1;
	f6 = f22*f8;
	f2 = f2+f5;
	heap32[(r3+3)] = 0;
	f1 = f1+f6;
	r3 = r5 >> 2;
	f3 = f3+f7;
	heapFloat[(fp+-20)] = f2;
	f1 = f4+f1;
	heapFloat[(r3+1)] = f3;
	heapFloat[(r3+2)] = f1;
	heap32[(r3+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r5;
	heap32[(g0+2)] = r4;
}
else{
__label__ = 32;
break _1;
}
}
	heap32[(g0+3)] = r2;
	heapFloat[(g0+4)] = f0;
	heapFloat[(g0+5)] = f0;
	heap32[(g0+6)] = 0;
	heap32[(g0+7)] = 1086918619;
	heap32[(g0+8)] = r6;
	heap32[(g0+9)] = 0;
	heap32[(g0+10)] = 1092616192;
	__FUNCTION_TABLE__[(r1)>>2](i7);
	return;
}
}
else{
	if(r3 >8) //_LBB222_4
{
	if(r3 ==9) //_LBB222_16
{
	r2 = heap32[(r5+23)];
	r3 = (r2 + -1)|0;
	if(r3 <0) //_LBB222_42
{
__label__ = 40;
break _1;
}
else{
	r3 = 1;
	r2 = (r3 - r2)|0;
_32: while(true){
	r3 = r2;
	r2 = heap32[(r5+25)];
	r7 = r3 << 4;
	r8 = heap32[(r1)];
	r2 = (r2 - r7)|0;
	r2 = r2 >> 2;
	r7 = r8 >> 2;
	r7 = heap32[(r7+4)];
	f0 = heapFloat[(r2)];
	f1 = heapFloat[(r2+1)];
	f2 = heapFloat[(r2+2)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r7)>>2](i7);
	r7 = r4 >> 2;
	r8 = r_g0 >> 2;
	r8 = heap32[(r8)];
	f3 = heapFloat[(r7+1)];
	f4 =                         0;
	f5 = heapFloat[(r7)];
	f6 = heapFloat[(r7+2)];
	r8 = r8 >> 2;
	f7 = f3*f4;
	f8 = f5*f4;
	f9 = heapFloat[(r7+8)];
	f10 = heapFloat[(r7+9)];
	f11 = heapFloat[(r7+10)];
	f12 = heapFloat[(r7+4)];
	f13 = heapFloat[(r7+5)];
	f14 = heapFloat[(r7+6)];
	r8 = heap32[(r8+4)];
	f15 = f5+f7;
	f16 = f6*f4;
	f17 = heapFloat[(r7+14)];
	f18 = heapFloat[(r7+13)];
	f19 = heapFloat[(r7+12)];
	r7 = sp + -608;
	f20 = f8+f3;
	f15 = f15+f16;
	f7 = f8+f7;
	r9 = r7 >> 2;
	f8 = f20+f16;
	heapFloat[(fp+-152)] = f15;
	f15 = f13*f4;
	f7 = f7+f6;
	heapFloat[(r9+1)] = f8;
	f8 = f12*f4;
	heapFloat[(r9+2)] = f7;
	f7 = f12+f15;
	f16 = f14*f4;
	f20 = f8+f13;
	f7 = f7+f16;
	heap32[(r9+3)] = 0;
	f8 = f8+f15;
	f15 = f20+f16;
	heapFloat[(r9+4)] = f7;
	f7 = f10*f4;
	f8 = f8+f14;
	heapFloat[(r9+5)] = f15;
	f15 = f9*f4;
	heapFloat[(r9+6)] = f8;
	f8 = f9+f7;
	f4 = f11*f4;
	f16 = f15+f10;
	f8 = f8+f4;
	heap32[(r9+7)] = 0;
	f7 = f15+f7;
	f5 = f5*f0;
	f3 = f3*f1;
	f4 = f16+f4;
	heapFloat[(r9+8)] = f8;
	f8 = f12*f0;
	f12 = f13*f1;
	f3 = f5+f3;
	f5 = f6*f2;
	f6 = f7+f11;
	heapFloat[(r9+9)] = f4;
	f3 = f3+f5;
	heapFloat[(r9+10)] = f6;
	f0 = f9*f0;
	f1 = f10*f1;
	f4 = f8+f12;
	f5 = f14*f2;
	f4 = f4+f5;
	f0 = f0+f1;
	f1 = f11*f2;
	f2 = f3+f19;
	heap32[(r9+11)] = 0;
	f0 = f0+f1;
	f1 = f4+f18;
	heapFloat[(r9+12)] = f2;
	f0 = f0+f17;
	heapFloat[(r9+13)] = f1;
	heapFloat[(r9+14)] = f0;
	heap32[(r9+15)] = 0;
	r9 = heap32[(r5+30)];
	r10 = r3 << 2;
	r9 = (r9 - r10)|0;
	r9 = r9 >> 2;
	f0 = heapFloat[(r9)];
	heap32[(g0)] = r_g0;
	heapFloat[(g0+1)] = f0;
	heap32[(g0+2)] = r7;
	heap32[(g0+3)] = r6;
	r2 = (r3 + 1)|0;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	if(r3 ==0) //_LBB222_42
{
__label__ = 40;
break _1;
}
else{
continue _32;
}
}
}
}
else{
	if(r3 ==10) //_LBB222_19
{
	r3 = heap32[(r5+13)];
	r5 = (r3 + 2)|0;
	r5 = (r5 % 3)|0;
	r7 = r3 << 2;
	r2 = (r2 + 28)|0;
	r5 = r5 << 2;
	r8 = (r2 + r7)|0;
	r2 = (r2 + r5)|0;
	r8 = r8 >> 2;
	r2 = r2 >> 2;
	f0 = heapFloat[(r8)];
	f1 = heapFloat[(r2)];
	r2 = sp + -720;
	r8 = r2 >> 2;
	heap32[(fp+-180)] = 0;
	heap32[(r8+1)] = 0;
	r9 = (r2 + r7)|0;
	heap32[(r8+2)] = 0;
	r9 = r9 >> 2;
	f2 = -f0;
	heap32[(r8+3)] = 0;
	r10 = sp + -736;
	heapFloat[(r9)] = f2;
	heap32[(fp+-184)] = 0;
	r9 = r10 >> 2;
	heap32[(r9+1)] = 0;
	r7 = (r10 + r7)|0;
	heap32[(r9+2)] = 0;
	r7 = r7 >> 2;
	heap32[(r9+3)] = 0;
	heapFloat[(r7)] = f0;
	r4 = r4 >> 2;
	f0 = heapFloat[(r4)];
	r7 = sp + -800;
	heapFloat[(fp+-200)] = f0;
	r11 = r7 >> 2;
	f2 = heapFloat[(r4+1)];
	heapFloat[(r11+1)] = f2;
	f3 = heapFloat[(r4+2)];
	heapFloat[(r11+2)] = f3;
	heap32[(r11+3)] = heap32[(r4+3)];
	f4 = heapFloat[(r4+4)];
	heapFloat[(r11+4)] = f4;
	f5 = heapFloat[(r4+5)];
	heapFloat[(r11+5)] = f5;
	f6 = heapFloat[(r4+6)];
	heapFloat[(r11+6)] = f6;
	heap32[(r11+7)] = heap32[(r4+7)];
	f7 = heapFloat[(r4+8)];
	heapFloat[(r11+8)] = f7;
	f8 = heapFloat[(r4+9)];
	heapFloat[(r11+9)] = f8;
	f9 = heapFloat[(r4+10)];
	heapFloat[(r11+10)] = f9;
	heap32[(r11+11)] = heap32[(r4+11)];
	f10 = heapFloat[(fp+-180)];
	f11 = heapFloat[(r8+1)];
	f12 = heapFloat[(r8+2)];
	f0 = f0*f10;
	f2 = f2*f11;
	f4 = f4*f10;
	f5 = f5*f11;
	f0 = f0+f2;
	f2 = f3*f12;
	f3 = f7*f10;
	f7 = f8*f11;
	f4 = f4+f5;
	f5 = f6*f12;
	f0 = f0+f2;
	f2 = heapFloat[(r4+12)];
	f6 = heapFloat[(r4+13)];
	f8 = heapFloat[(r4+14)];
	f4 = f4+f5;
	f3 = f3+f7;
	f5 = f9*f12;
	f0 = f0+f2;
	f2 = f3+f5;
	f3 = f4+f6;
	heapFloat[(r11+12)] = f0;
	f0 = f2+f8;
	heapFloat[(r11+13)] = f3;
	heapFloat[(r11+14)] = f0;
	heap32[(r11+15)] = 0;
	r11 = heap32[(r1)];
	r11 = r11 >> 2;
	r11 = heap32[(r11+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r11)>>2](i7);
	r12 = r_g0 >> 2;
	r12 = heap32[(r12)];
	r12 = r12 >> 2;
	r12 = heap32[(r12+4)];
	heap32[(g0)] = r_g0;
	heapFloat[(g0+1)] = f1;
	heap32[(g0+2)] = r7;
	heap32[(g0+3)] = r6;
	__FUNCTION_TABLE__[(r12)>>2](i7);
	f0 = heapFloat[(r4)];
	r7 = sp + -864;
	heapFloat[(fp+-216)] = f0;
	r11 = r7 >> 2;
	f2 = heapFloat[(r4+1)];
	heapFloat[(r11+1)] = f2;
	f3 = heapFloat[(r4+2)];
	heapFloat[(r11+2)] = f3;
	heap32[(r11+3)] = heap32[(r4+3)];
	f4 = heapFloat[(r4+4)];
	heapFloat[(r11+4)] = f4;
	f5 = heapFloat[(r4+5)];
	heapFloat[(r11+5)] = f5;
	f6 = heapFloat[(r4+6)];
	heapFloat[(r11+6)] = f6;
	heap32[(r11+7)] = heap32[(r4+7)];
	f7 = heapFloat[(r4+8)];
	heapFloat[(r11+8)] = f7;
	f8 = heapFloat[(r4+9)];
	heapFloat[(r11+9)] = f8;
	f9 = heapFloat[(r4+10)];
	heapFloat[(r11+10)] = f9;
	heap32[(r11+11)] = heap32[(r4+11)];
	f10 = heapFloat[(fp+-184)];
	f11 = heapFloat[(r9+1)];
	f12 = heapFloat[(r9+2)];
	f0 = f0*f10;
	f2 = f2*f11;
	f4 = f4*f10;
	f5 = f5*f11;
	f0 = f0+f2;
	f2 = f3*f12;
	f3 = f7*f10;
	f7 = f8*f11;
	f4 = f4+f5;
	f5 = f6*f12;
	f0 = f0+f2;
	f2 = heapFloat[(r4+12)];
	f6 = heapFloat[(r4+13)];
	f8 = heapFloat[(r4+14)];
	f4 = f4+f5;
	f3 = f3+f7;
	f5 = f9*f12;
	f0 = f0+f2;
	f2 = f3+f5;
	f3 = f4+f6;
	heapFloat[(r11+12)] = f0;
	f0 = f2+f8;
	heapFloat[(r11+13)] = f3;
	heapFloat[(r11+14)] = f0;
	heap32[(r11+15)] = 0;
	r11 = heap32[(r1)];
	r11 = r11 >> 2;
	r11 = heap32[(r11+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r11)>>2](i7);
	r12 = r_g0 >> 2;
	r12 = heap32[(r12)];
	r12 = r12 >> 2;
	r12 = heap32[(r12+4)];
	r3 = (r3 + 1)|0;
	heap32[(g0)] = r_g0;
	heapFloat[(g0+1)] = f1;
	heap32[(g0+2)] = r7;
	heap32[(g0+3)] = r6;
	r3 = (r3 % 3)|0;
	__FUNCTION_TABLE__[(r12)>>2](i7);
	r3 = r3 << 2;
	r7 = (r2 + r3)|0;
	f0 = heapFloat[(r4+12)];
	f2 = heapFloat[(r4+13)];
	f3 = heapFloat[(r4+14)];
	r3 = (r10 + r3)|0;
	r7 = r7 >> 2;
	heapFloat[(r7)] = f1;
	r3 = r3 >> 2;
	heapFloat[(r3)] = f1;
	r11 = heap32[(r1)];
	r11 = r11 >> 2;
	r11 = heap32[(r11+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r11)>>2](i7);
	r12 = r_g0 >> 2;
	f4 = heapFloat[(fp+-184)];
	f5 = heapFloat[(r4)];
	f6 = heapFloat[(r9+1)];
	f7 = heapFloat[(r4+1)];
	r12 = heap32[(r12)];
	f8 = heapFloat[(r4+4)];
	f9 = heapFloat[(r4+5)];
	f10 = f5*f4;
	f11 = f7*f6;
	f12 = heapFloat[(r9+2)];
	f13 = heapFloat[(r4+2)];
	r12 = r12 >> 2;
	f14 = heapFloat[(r4+8)];
	f15 = heapFloat[(r4+9)];
	f16 = heapFloat[(r4+6)];
	f17 = f8*f4;
	f18 = f9*f6;
	f10 = f10+f11;
	f11 = f13*f12;
	f10 = f10+f11;
	f11 = heapFloat[(r4+10)];
	r12 = heap32[(r12+2)];
	f4 = f14*f4;
	f6 = f15*f6;
	f17 = f17+f18;
	f18 = f16*f12;
	r13 = sp + -544;
	f17 = f17+f18;
	f4 = f4+f6;
	f6 = f11*f12;
	f10 = f0+f10;
	f4 = f4+f6;
	r14 = r13 >> 2;
	f6 = f2+f17;
	heapFloat[(fp+-136)] = f10;
	f4 = f3+f4;
	heapFloat[(r14+1)] = f6;
	heapFloat[(r14+2)] = f4;
	heap32[(r14+3)] = 0;
	f4 = heapFloat[(fp+-180)];
	f6 = heapFloat[(r8+1)];
	f10 = heapFloat[(r8+2)];
	f5 = f5*f4;
	f7 = f7*f6;
	f8 = f8*f4;
	f9 = f9*f6;
	f5 = f5+f7;
	f7 = f13*f10;
	f5 = f5+f7;
	f4 = f14*f4;
	f6 = f15*f6;
	f7 = f8+f9;
	f8 = f16*f10;
	r14 = sp + -528;
	f7 = f7+f8;
	f4 = f4+f6;
	f6 = f11*f10;
	f5 = f0+f5;
	f4 = f4+f6;
	r15 = r14 >> 2;
	f6 = f2+f7;
	heapFloat[(fp+-132)] = f5;
	f4 = f3+f4;
	heapFloat[(r15+1)] = f6;
	heapFloat[(r15+2)] = f4;
	heap32[(r15+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r14;
	heap32[(g0+2)] = r13;
	heap32[(g0+3)] = r6;
	__FUNCTION_TABLE__[(r12)>>2](i7);
	f4 = -f1;
	heapFloat[(r7)] = f4;
	heapFloat[(r3)] = f4;
	r11 = heap32[(r1)];
	r11 = r11 >> 2;
	r11 = heap32[(r11+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r11)>>2](i7);
	r12 = r_g0 >> 2;
	f5 = heapFloat[(fp+-184)];
	f6 = heapFloat[(r4)];
	f7 = heapFloat[(r9+1)];
	f8 = heapFloat[(r4+1)];
	r12 = heap32[(r12)];
	f9 = heapFloat[(r4+4)];
	f10 = heapFloat[(r4+5)];
	f11 = f6*f5;
	f12 = f8*f7;
	f13 = heapFloat[(r9+2)];
	f14 = heapFloat[(r4+2)];
	r12 = r12 >> 2;
	f15 = heapFloat[(r4+8)];
	f16 = heapFloat[(r4+9)];
	f17 = heapFloat[(r4+6)];
	f18 = f9*f5;
	f19 = f10*f7;
	f11 = f11+f12;
	f12 = f14*f13;
	f11 = f11+f12;
	f12 = heapFloat[(r4+10)];
	r12 = heap32[(r12+2)];
	f5 = f15*f5;
	f7 = f16*f7;
	f18 = f18+f19;
	f19 = f17*f13;
	r13 = sp + -512;
	f18 = f18+f19;
	f5 = f5+f7;
	f7 = f12*f13;
	f11 = f0+f11;
	f5 = f5+f7;
	r14 = r13 >> 2;
	f7 = f2+f18;
	heapFloat[(fp+-128)] = f11;
	f5 = f3+f5;
	heapFloat[(r14+1)] = f7;
	heapFloat[(r14+2)] = f5;
	heap32[(r14+3)] = 0;
	f5 = heapFloat[(fp+-180)];
	f7 = heapFloat[(r8+1)];
	f11 = heapFloat[(r8+2)];
	f6 = f6*f5;
	f8 = f8*f7;
	f9 = f9*f5;
	f10 = f10*f7;
	f6 = f6+f8;
	f8 = f14*f11;
	f6 = f6+f8;
	f5 = f15*f5;
	f7 = f16*f7;
	f8 = f9+f10;
	f9 = f17*f11;
	r14 = sp + -496;
	f8 = f8+f9;
	f5 = f5+f7;
	f7 = f12*f11;
	f6 = f0+f6;
	f5 = f5+f7;
	r15 = r14 >> 2;
	f7 = f2+f8;
	heapFloat[(fp+-124)] = f6;
	f5 = f3+f5;
	heapFloat[(r15+1)] = f7;
	heapFloat[(r15+2)] = f5;
	heap32[(r15+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r14;
	heap32[(g0+2)] = r13;
	heap32[(g0+3)] = r6;
	__FUNCTION_TABLE__[(r12)>>2](i7);
	heap32[(r7)] = 0;
	r2 = (r2 + r5)|0;
	r5 = (r10 + r5)|0;
	heap32[(r3)] = 0;
	r2 = r2 >> 2;
	heapFloat[(r2)] = f1;
	r3 = r5 >> 2;
	heapFloat[(r3)] = f1;
	r5 = heap32[(r1)];
	r5 = r5 >> 2;
	r5 = heap32[(r5+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	r7 = r_g0 >> 2;
	f1 = heapFloat[(fp+-184)];
	f5 = heapFloat[(r4)];
	f6 = heapFloat[(r9+1)];
	f7 = heapFloat[(r4+1)];
	r7 = heap32[(r7)];
	f8 = heapFloat[(r4+4)];
	f9 = heapFloat[(r4+5)];
	f10 = f5*f1;
	f11 = f7*f6;
	f12 = heapFloat[(r9+2)];
	f13 = heapFloat[(r4+2)];
	r7 = r7 >> 2;
	f14 = heapFloat[(r4+8)];
	f15 = heapFloat[(r4+9)];
	f16 = heapFloat[(r4+6)];
	f17 = f8*f1;
	f18 = f9*f6;
	f10 = f10+f11;
	f11 = f13*f12;
	f10 = f10+f11;
	f11 = heapFloat[(r4+10)];
	r7 = heap32[(r7+2)];
	f1 = f14*f1;
	f6 = f15*f6;
	f17 = f17+f18;
	f18 = f16*f12;
	r10 = sp + -480;
	f17 = f17+f18;
	f1 = f1+f6;
	f6 = f11*f12;
	f10 = f0+f10;
	f1 = f1+f6;
	r11 = r10 >> 2;
	f6 = f2+f17;
	heapFloat[(fp+-120)] = f10;
	f1 = f3+f1;
	heapFloat[(r11+1)] = f6;
	heapFloat[(r11+2)] = f1;
	heap32[(r11+3)] = 0;
	f1 = heapFloat[(fp+-180)];
	f6 = heapFloat[(r8+1)];
	f10 = heapFloat[(r8+2)];
	f5 = f5*f1;
	f7 = f7*f6;
	f8 = f8*f1;
	f9 = f9*f6;
	f5 = f5+f7;
	f7 = f13*f10;
	f5 = f5+f7;
	f1 = f14*f1;
	f6 = f15*f6;
	f7 = f8+f9;
	f8 = f16*f10;
	r11 = sp + -464;
	f7 = f7+f8;
	f1 = f1+f6;
	f6 = f11*f10;
	f5 = f0+f5;
	f1 = f1+f6;
	r12 = r11 >> 2;
	f6 = f2+f7;
	heapFloat[(fp+-116)] = f5;
	f1 = f3+f1;
	heapFloat[(r12+1)] = f6;
	heapFloat[(r12+2)] = f1;
	heap32[(r12+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r11;
	heap32[(g0+2)] = r10;
	heap32[(g0+3)] = r6;
	__FUNCTION_TABLE__[(r7)>>2](i7);
	heapFloat[(r2)] = f4;
	heapFloat[(r3)] = f4;
	r1 = heap32[(r1)];
	r1 = r1 >> 2;
	r1 = heap32[(r1+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r1)>>2](i7);
	r1 = r_g0 >> 2;
	f1 = heapFloat[(fp+-184)];
	f4 = heapFloat[(r4)];
	f5 = heapFloat[(r9+1)];
	f6 = heapFloat[(r4+1)];
	r1 = heap32[(r1)];
	f7 = heapFloat[(r4+4)];
	f8 = heapFloat[(r4+5)];
	f9 = f4*f1;
	f10 = f6*f5;
	f11 = heapFloat[(r9+2)];
	f12 = heapFloat[(r4+2)];
	r1 = r1 >> 2;
	f13 = heapFloat[(r4+8)];
	f14 = heapFloat[(r4+9)];
	f15 = heapFloat[(r4+6)];
	f16 = f7*f1;
	f17 = f8*f5;
	f9 = f9+f10;
	f10 = f12*f11;
	f9 = f9+f10;
	f10 = heapFloat[(r4+10)];
	r1 = heap32[(r1+2)];
	f1 = f13*f1;
	f5 = f14*f5;
	f16 = f16+f17;
	f17 = f15*f11;
	r2 = sp + -448;
	f16 = f16+f17;
	f1 = f1+f5;
	f5 = f10*f11;
	f9 = f0+f9;
	f1 = f1+f5;
	r3 = r2 >> 2;
	f5 = f2+f16;
	heapFloat[(fp+-112)] = f9;
	f1 = f3+f1;
	heapFloat[(r3+1)] = f5;
	heapFloat[(r3+2)] = f1;
	heap32[(r3+3)] = 0;
	f1 = heapFloat[(fp+-180)];
	f5 = heapFloat[(r8+1)];
	f9 = heapFloat[(r8+2)];
	f4 = f4*f1;
	f6 = f6*f5;
	f7 = f7*f1;
	f8 = f8*f5;
	f4 = f4+f6;
	f6 = f12*f9;
	f4 = f4+f6;
	f1 = f13*f1;
	f5 = f14*f5;
	f6 = f7+f8;
	f7 = f15*f9;
	r3 = sp + -432;
	f6 = f6+f7;
	f1 = f1+f5;
	f5 = f10*f9;
	f0 = f0+f4;
	f1 = f1+f5;
	r4 = r3 >> 2;
	f2 = f2+f6;
	heapFloat[(fp+-108)] = f0;
	f0 = f3+f1;
	heapFloat[(r4+1)] = f2;
	heapFloat[(r4+2)] = f0;
	heap32[(r4+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r3;
__label__ = 30;
break _1;
}
else{
__label__ = 32;
break _1;
}
}
}
else{
	if(r3 ==0) //_LBB222_14
{
	r3 = sp + -704;
	f0 = heapFloat[(r5+8)];
	f1 = heapFloat[(r5+9)];
	f2 = heapFloat[(r5+7)];
	r7 = r3 >> 2;
	heap32[(r7+3)] = heap32[(r5+10)];
	r8 = heap32[(r5)];
	r8 = r8 >> 2;
	r8 = heap32[(r8+11)];
	heap32[(g0)] = r2;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	f3 = f_g0;
	r8 = heap32[(r5)];
	r8 = r8 >> 2;
	r8 = heap32[(r8+11)];
	heap32[(g0)] = r2;
	__FUNCTION_TABLE__[(r8)>>2](i7);
	f4 = f_g0;
	r5 = heap32[(r5)];
	r5 = r5 >> 2;
	r5 = heap32[(r5+11)];
	heap32[(g0)] = r2;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	f2 = f2+f_g0;
	f0 = f0+f4;
	heapFloat[(fp+-176)] = f2;
	f1 = f1+f3;
	heapFloat[(r7+1)] = f0;
	heapFloat[(r7+2)] = f1;
	r1 = heap32[(r1)];
	r1 = r1 >> 2;
	r1 = heap32[(r1+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r1)>>2](i7);
	r1 = r_g0 >> 2;
	r1 = heap32[(r1)];
	r1 = r1 >> 2;
	f0 = heapFloat[(r7+2)];
	f1 = heapFloat[(r7+1)];
	f2 = heapFloat[(fp+-176)];
	r1 = heap32[(r1+18)];
	r2 = sp + -624;
	f2 = -f2;
	r5 = r2 >> 2;
	f1 = -f1;
	heapFloat[(fp+-156)] = f2;
	f0 = -f0;
	heapFloat[(r5+1)] = f1;
	heapFloat[(r5+2)] = f0;
	heap32[(r5+3)] = 0;
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r2;
	heap32[(g0+2)] = r3;
	heap32[(g0+3)] = r4;
	heap32[(g0+4)] = r6;
	__FUNCTION_TABLE__[(r1)>>2](i7);
	return;
}
else{
	if(r3 ==8) //_LBB222_15
{
	r3 = heap32[(r5)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+11)];
	heap32[(g0)] = r2;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	f0 = f_g0;
	r1 = heap32[(r1)];
	r1 = r1 >> 2;
	r1 = heap32[(r1+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r1)>>2](i7);
	r1 = r_g0 >> 2;
	r1 = heap32[(r1)];
	r1 = r1 >> 2;
	r1 = heap32[(r1+4)];
	heap32[(g0)] = r_g0;
	heapFloat[(g0+1)] = f0;
	heap32[(g0+2)] = r4;
__label__ = 31;
}
else{
__label__ = 32;
}
}
}
}
} while(0);
_41: do {
switch(__label__ ){//multiple entries
case 30:
	heap32[(g0+2)] = r2;
__label__ = 31;
break _41;
break;
case 32:
	r7 = (r3 + -21)|0;
	if(uint(r7) <uint(9)) //_LBB222_34
{
	r3 = sp + -1024;
	r7 = r3 >> 2;
	heap32[(fp+-256)] = 1566444395;
	heap32[(r7+1)] = 1566444395;
	heap32[(r7+2)] = 1566444395;
	r8 = sp + -1040;
	heap32[(r7+3)] = 0;
	r7 = r8 >> 2;
	heap32[(fp+-260)] = -581039253;
	heap32[(r7+1)] = -581039253;
	heap32[(r7+2)] = -581039253;
	heap32[(r7+3)] = 0;
	r7 = heap32[(r1)];
	r7 = r7 >> 2;
	r7 = heap32[(r7+4)];
	r9 = _ZTV17DebugDrawcallback;
	heap32[(g0)] = r0;
	r10 = sp + -1136;
	r11 = (r9 + 8)|0;
	__FUNCTION_TABLE__[(r7)>>2](i7);
	r12 = r10 >> 2;
	r9 = (r9 + 32)|0;
	heap32[(fp+-284)] = r11;
	heap32[(r12+1)] = r9;
	r13 = r6 >> 2;
	heap32[(r12+2)] = r_g0;
	heap32[(r12+3)] = heap32[(r13)];
	heap32[(r12+4)] = heap32[(r13+1)];
	heap32[(r12+5)] = heap32[(r13+2)];
	r7 = r4 >> 2;
	heap32[(r12+6)] = heap32[(r13+3)];
	heap32[(r12+7)] = heap32[(r7)];
	heap32[(r12+8)] = heap32[(r7+1)];
	heap32[(r12+9)] = heap32[(r7+2)];
	heap32[(r12+10)] = heap32[(r7+3)];
	heap32[(r12+11)] = heap32[(r7+4)];
	heap32[(r12+12)] = heap32[(r7+5)];
	heap32[(r12+13)] = heap32[(r7+6)];
	heap32[(r12+14)] = heap32[(r7+7)];
	heap32[(r12+15)] = heap32[(r7+8)];
	heap32[(r12+16)] = heap32[(r7+9)];
	heap32[(r12+17)] = heap32[(r7+10)];
	heap32[(r12+18)] = heap32[(r7+11)];
	heap32[(r12+19)] = heap32[(r7+12)];
	heap32[(r12+20)] = heap32[(r7+13)];
	heap32[(r12+21)] = heap32[(r7+14)];
	heap32[(r12+22)] = heap32[(r7+15)];
	r7 = heap32[(r5)];
	r7 = r7 >> 2;
	r7 = heap32[(r7+15)];
	heap32[(g0)] = r2;
	heap32[(g0+1)] = r10;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = r3;
	__FUNCTION_TABLE__[(r7)>>2](i7);
	r3 = r10 | 4;
	r7 = _ZTV31btInternalTriangleIndexCallback;
	heap32[(fp+-284)] = r11;
	r8 = _ZTV18btTriangleCallback;
	r3 = r3 >> 2;
	r7 = (r7 + 8)|0;
	heap32[(r12+1)] = r9;
	r8 = (r8 + 8)|0;
	heap32[(r3)] = r7;
	heap32[(fp+-284)] = r8;
	r3 = heap32[(r5+1)];
}
	if(r3 ==3) //_LBB222_37
{
	r3 = sp + -1152;
	r7 = r3 >> 2;
	heap32[(fp+-288)] = 1566444395;
	heap32[(r7+1)] = 1566444395;
	heap32[(r7+2)] = 1566444395;
	r8 = sp + -1168;
	heap32[(r7+3)] = 0;
	r7 = r8 >> 2;
	heap32[(fp+-292)] = -581039253;
	heap32[(r7+1)] = -581039253;
	heap32[(r7+2)] = -581039253;
	heap32[(r7+3)] = 0;
	r7 = heap32[(r1)];
	r7 = r7 >> 2;
	r7 = heap32[(r7+4)];
	r9 = _ZTV17DebugDrawcallback;
	heap32[(g0)] = r0;
	r10 = sp + -1264;
	r11 = (r9 + 8)|0;
	__FUNCTION_TABLE__[(r7)>>2](i7);
	r12 = r10 >> 2;
	r9 = (r9 + 32)|0;
	heap32[(fp+-316)] = r11;
	heap32[(r12+1)] = r9;
	r13 = r6 >> 2;
	heap32[(r12+2)] = r_g0;
	heap32[(r12+3)] = heap32[(r13)];
	heap32[(r12+4)] = heap32[(r13+1)];
	heap32[(r12+5)] = heap32[(r13+2)];
	r7 = r4 >> 2;
	heap32[(r12+6)] = heap32[(r13+3)];
	heap32[(r12+7)] = heap32[(r7)];
	heap32[(r12+8)] = heap32[(r7+1)];
	heap32[(r12+9)] = heap32[(r7+2)];
	heap32[(r12+10)] = heap32[(r7+3)];
	heap32[(r12+11)] = heap32[(r7+4)];
	heap32[(r12+12)] = heap32[(r7+5)];
	heap32[(r12+13)] = heap32[(r7+6)];
	heap32[(r12+14)] = heap32[(r7+7)];
	heap32[(r12+15)] = heap32[(r7+8)];
	heap32[(r12+16)] = heap32[(r7+9)];
	heap32[(r12+17)] = heap32[(r7+10)];
	heap32[(r12+18)] = heap32[(r7+11)];
	heap32[(r12+19)] = heap32[(r7+12)];
	heap32[(r12+20)] = heap32[(r7+13)];
	heap32[(r12+21)] = heap32[(r7+14)];
	heap32[(r12+22)] = heap32[(r7+15)];
	r7 = heap32[(r5+22)];
	r13 = r7 >> 2;
	r13 = heap32[(r13)];
	r13 = r13 >> 2;
	r13 = heap32[(r13+2)];
	r14 = (r10 + 4)|0;
	heap32[(g0)] = r7;
	heap32[(g0+1)] = r14;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = r3;
	__FUNCTION_TABLE__[(r13)>>2](i7);
	r3 = r10 | 4;
	r7 = _ZTV31btInternalTriangleIndexCallback;
	heap32[(fp+-316)] = r11;
	r8 = _ZTV18btTriangleCallback;
	r3 = r3 >> 2;
	r7 = (r7 + 8)|0;
	heap32[(r12+1)] = r9;
	r8 = (r8 + 8)|0;
	heap32[(r3)] = r7;
	heap32[(fp+-316)] = r8;
	r3 = heap32[(r5+1)];
}
	if(r3 >6) //_LBB222_42
{
__label__ = 40;
}
else{
	r3 = heap32[(r5)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+22)];
	heap32[(g0)] = r2;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	r3 = r_g0;
	if(r3 <1) //_LBB222_42
{
__label__ = 40;
}
else{
	r3 = 0;
_52: while(true){
	r7 = heap32[(r5)];
	r7 = r7 >> 2;
	r7 = heap32[(r7+23)];
	r8 = sp + -1296;
	r9 = sp + -1280;
	heap32[(g0)] = r2;
	heap32[(g0+1)] = r3;
	heap32[(g0+2)] = r9;
	heap32[(g0+3)] = r8;
	__FUNCTION_TABLE__[(r7)>>2](i7);
	r7 = r4 >> 2;
	r9 = r9 >> 2;
	f0 = heapFloat[(fp+-320)];
	f1 = heapFloat[(r7)];
	f2 = heapFloat[(r9+1)];
	f3 = heapFloat[(r7+1)];
	f4 = heapFloat[(r7+4)];
	f5 = heapFloat[(r7+5)];
	f6 = f1*f0;
	f7 = f3*f2;
	f8 = heapFloat[(r9+2)];
	f9 = heapFloat[(r7+2)];
	f10 = heapFloat[(r7+8)];
	f11 = heapFloat[(r7+9)];
	f12 = heapFloat[(r7+6)];
	f13 = f4*f0;
	f14 = f5*f2;
	f6 = f6+f7;
	f7 = f9*f8;
	f15 = heapFloat[(r7+10)];
	f0 = f10*f0;
	f2 = f11*f2;
	f13 = f13+f14;
	f14 = f12*f8;
	f6 = f6+f7;
	f7 = heapFloat[(r7+12)];
	f16 = heapFloat[(r7+14)];
	f17 = heapFloat[(r7+13)];
	r7 = sp + -1312;
	f13 = f13+f14;
	f0 = f0+f2;
	f2 = f15*f8;
	f6 = f6+f7;
	f0 = f0+f2;
	r9 = r7 >> 2;
	f2 = f13+f17;
	heapFloat[(fp+-328)] = f6;
	f0 = f0+f16;
	heapFloat[(r9+1)] = f2;
	heapFloat[(r9+2)] = f0;
	heap32[(r9+3)] = 0;
	r8 = r8 >> 2;
	f0 = heapFloat[(fp+-324)];
	f2 = heapFloat[(r8+1)];
	f6 = heapFloat[(r8+2)];
	f1 = f1*f0;
	f3 = f3*f2;
	f4 = f4*f0;
	f5 = f5*f2;
	f1 = f1+f3;
	f3 = f9*f6;
	f1 = f1+f3;
	f0 = f10*f0;
	f2 = f11*f2;
	f3 = f4+f5;
	f4 = f12*f6;
	r8 = sp + -1328;
	f3 = f3+f4;
	f0 = f0+f2;
	f2 = f15*f6;
	f1 = f1+f7;
	f0 = f0+f2;
	r9 = r8 >> 2;
	f2 = f3+f17;
	heapFloat[(fp+-332)] = f1;
	f0 = f0+f16;
	heapFloat[(r9+1)] = f2;
	heapFloat[(r9+2)] = f0;
	heap32[(r9+3)] = 0;
	r9 = heap32[(r1)];
	r9 = r9 >> 2;
	r9 = heap32[(r9+4)];
	heap32[(g0)] = r0;
	__FUNCTION_TABLE__[(r9)>>2](i7);
	r10 = r_g0 >> 2;
	r10 = heap32[(r10)];
	r10 = r10 >> 2;
	r10 = heap32[(r10+2)];
	heap32[(g0)] = r_g0;
	heap32[(g0+1)] = r7;
	heap32[(g0+2)] = r8;
	heap32[(g0+3)] = r6;
	__FUNCTION_TABLE__[(r10)>>2](i7);
	r7 = heap32[(r5)];
	r7 = r7 >> 2;
	r7 = heap32[(r7+22)];
	r3 = (r3 + 1)|0;
	heap32[(g0)] = r2;
	__FUNCTION_TABLE__[(r7)>>2](i7);
	r7 = r_g0;
	if(r7 >r3) //_LBB222_41
{
continue _52;
}
else{
__label__ = 40;
break _41;
}
}
}
}
break;
}
} while(0);
switch(__label__ ){//multiple entries
case 31:
	heap32[(g0+3)] = r6;
	__FUNCTION_TABLE__[(r1)>>2](i7);
	return;
break;
case 40:
	return;
break;
}
}