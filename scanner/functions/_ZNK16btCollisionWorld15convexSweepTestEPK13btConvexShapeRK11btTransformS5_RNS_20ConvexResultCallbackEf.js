function _ZNK16btCollisionWorld15convexSweepTestEPK13btConvexShapeRK11btTransformS5_RNS_20ConvexResultCallbackEf(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var r7;
	var r8;
	var r9;
	var r10;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
	var f6;
	var f7;
	var f8;
	var f9;
	var f10;
	var f11;
	var f12;
	var f13;
var __label__ = 0;
	i7 = sp + -528;var g0 = i7>>2; // save stack
	r0 = _2E_str1089;
	r1 = heap32[(fp+2)];
	heap32[(g0)] = r0;
	r0 = sp + -112;
	r1 = r1 >> 2;
	_ZN15CProfileManager13Start_ProfileEPKc(i7);
	r2 = r0 >> 2;
	heap32[(fp+-28)] = heap32[(r1)];
	heap32[(r2+1)] = heap32[(r1+1)];
	heap32[(r2+2)] = heap32[(r1+2)];
	heap32[(r2+3)] = heap32[(r1+3)];
	heap32[(r2+4)] = heap32[(r1+4)];
	heap32[(r2+5)] = heap32[(r1+5)];
	heap32[(r2+6)] = heap32[(r1+6)];
	heap32[(r2+7)] = heap32[(r1+7)];
	heap32[(r2+8)] = heap32[(r1+8)];
	heap32[(r2+9)] = heap32[(r1+9)];
	heap32[(r2+10)] = heap32[(r1+10)];
	heap32[(r2+11)] = heap32[(r1+11)];
	heap32[(r2+12)] = heap32[(r1+12)];
	heap32[(r2+13)] = heap32[(r1+13)];
	r3 = heap32[(fp+3)];
	heap32[(r2+14)] = heap32[(r1+14)];
	r4 = sp + -176;
	r3 = r3 >> 2;
	heap32[(r2+15)] = heap32[(r1+15)];
	r2 = r4 >> 2;
	heap32[(fp+-44)] = heap32[(r3)];
	heap32[(r2+1)] = heap32[(r3+1)];
	heap32[(r2+2)] = heap32[(r3+2)];
	heap32[(r2+3)] = heap32[(r3+3)];
	heap32[(r2+4)] = heap32[(r3+4)];
	heap32[(r2+5)] = heap32[(r3+5)];
	heap32[(r2+6)] = heap32[(r3+6)];
	heap32[(r2+7)] = heap32[(r3+7)];
	heap32[(r2+8)] = heap32[(r3+8)];
	heap32[(r2+9)] = heap32[(r3+9)];
	heap32[(r2+10)] = heap32[(r3+10)];
	heap32[(r2+11)] = heap32[(r3+11)];
	heap32[(r2+12)] = heap32[(r3+12)];
	heap32[(r2+13)] = heap32[(r3+13)];
	heap32[(r2+14)] = heap32[(r3+14)];
	heap32[(r2+15)] = heap32[(r3+15)];
	r2 = sp + -24;
	r5 = sp + -28;
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r4;
	heap32[(g0+2)] = r2;
	heap32[(g0+3)] = r5;
	_ZN15btTransformUtil22calculateDiffAxisAngleERK11btTransformS2_R9btVector3Rf(i7);
	r2 = r2 >> 2;
	f0 = heapFloat[(r2+2)];
	f1 = heapFloat[(fp+-7)];
	f2 = heapFloat[(r2+1)];
	f3 = heapFloat[(fp+-6)];
	r2 = sp + -424;
	f3 = f3*f1;
	r5 = r2 >> 2;
	f2 = f2*f1;
	heapFloat[(fp+-106)] = f3;
	f0 = f0*f1;
	heapFloat[(r5+1)] = f2;
	heapFloat[(r5+2)] = f0;
	r6 = sp + -440;
	heap32[(r5+3)] = 0;
	r5 = r6 >> 2;
	heap32[(fp+-110)] = 0;
	heap32[(r5+1)] = 0;
	heap32[(r5+2)] = 0;
	r7 = sp + -504;
	heap32[(r5+3)] = 0;
	r5 = r7 >> 2;
	heap32[(fp+-126)] = 1065353216;
	heap32[(r5+1)] = 0;
	heap32[(r5+2)] = 0;
	heap32[(r5+3)] = 0;
	heap32[(r5+4)] = 0;
	heap32[(r5+5)] = 1065353216;
	heap32[(r5+6)] = 0;
	heap32[(r5+7)] = 0;
	heap32[(r5+8)] = 0;
	heap32[(r5+9)] = 0;
	heap32[(r5+10)] = 1065353216;
	heap32[(r5+11)] = 0;
	heap32[(r5+12)] = 0;
	heap32[(r5+13)] = 0;
	heap32[(r5+14)] = 0;
	heap32[(r5+15)] = 0;
	r8 = sp + -48;
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r8;
	_ZNK11btMatrix3x311getRotationER12btQuaternion(i7);
	r8 = r8 >> 2;
	f0 = heapFloat[(fp+-12)];
	f1 = heapFloat[(r8+1)];
	f2 = heapFloat[(r8+2)];
	f3 = f0*f0;
	f4 = f1*f1;
	f5 = heapFloat[(r8+3)];
	f3 = f3+f4;
	f4 = f2*f2;
	f3 = f3+f4;
	f4 = f5*f5;
	f6 =                         2;
	f3 = f3+f4;
	f3 = f6/f3;
	f4 = f2*f3;
	f6 = f1*f3;
	f7 = f1*f6;
	f2 = f2*f4;
	f8 = f7+f2;
	f9 =                         1;
	f10 = f0*f6;
	f11 = f5*f4;
	f8 = f9-f8;
	f12 = f0*f4;
	f6 = f5*f6;
	f13 = f10-f11;
	heapFloat[(fp+-126)] = f8;
	f3 = f0*f3;
	f8 = f12+f6;
	heapFloat[(r5+1)] = f13;
	f0 = f0*f3;
	heapFloat[(r5+2)] = f8;
	f2 = f0+f2;
	f8 = f10+f11;
	heap32[(r5+3)] = 0;
	f1 = f1*f4;
	f3 = f5*f3;
	f2 = f9-f2;
	heapFloat[(r5+4)] = f8;
	f4 = f1-f3;
	heapFloat[(r5+5)] = f2;
	heapFloat[(r5+6)] = f4;
	f2 = f12-f6;
	heap32[(r5+7)] = 0;
	f0 = f0+f7;
	f1 = f1+f3;
	heapFloat[(r5+8)] = f2;
	f0 = f9-f0;
	heapFloat[(r5+9)] = f1;
	heapFloat[(r5+10)] = f0;
	heap32[(r5+11)] = 0;
	r5 = heap32[(fp+1)];
	r8 = sp + -192;
	r9 = sp + -208;
	heap32[(g0)] = r5;
	heap32[(g0+1)] = r7;
	heap32[(g0+2)] = r6;
	heap32[(g0+3)] = r2;
	heap32[(g0+4)] = r8;
	heap32[(g0+5)] = r9;
	r2 = _ZTV21btSingleSweepCallback;
	r6 = sp + -408;
	r2 = (r2 + 8)|0;
	_ZNK16btCollisionShape21calculateTemporalAabbERK11btTransformRK9btVector3S5_fRS3_S6_(i7);
	r7 = r6 >> 2;
	heap32[(fp+-102)] = r2;
	heap32[(r7+9)] = heap32[(r1)];
	heap32[(r7+10)] = heap32[(r1+1)];
	heap32[(r7+11)] = heap32[(r1+2)];
	heap32[(r7+12)] = heap32[(r1+3)];
	heap32[(r7+13)] = heap32[(r1+4)];
	heap32[(r7+14)] = heap32[(r1+5)];
	heap32[(r7+15)] = heap32[(r1+6)];
	heap32[(r7+16)] = heap32[(r1+7)];
	heap32[(r7+17)] = heap32[(r1+8)];
	heap32[(r7+18)] = heap32[(r1+9)];
	heap32[(r7+19)] = heap32[(r1+10)];
	heap32[(r7+20)] = heap32[(r1+11)];
	f0 = heapFloat[(r1+12)];
	heapFloat[(r7+21)] = f0;
	f1 = heapFloat[(r1+13)];
	heapFloat[(r7+22)] = f1;
	f2 = heapFloat[(r1+14)];
	heapFloat[(r7+23)] = f2;
	heap32[(r7+24)] = heap32[(r1+15)];
	heap32[(r7+25)] = heap32[(r3)];
	heap32[(r7+26)] = heap32[(r3+1)];
	heap32[(r7+27)] = heap32[(r3+2)];
	heap32[(r7+28)] = heap32[(r3+3)];
	heap32[(r7+29)] = heap32[(r3+4)];
	heap32[(r7+30)] = heap32[(r3+5)];
	heap32[(r7+31)] = heap32[(r3+6)];
	heap32[(r7+32)] = heap32[(r3+7)];
	heap32[(r7+33)] = heap32[(r3+8)];
	heap32[(r7+34)] = heap32[(r3+9)];
	heap32[(r7+35)] = heap32[(r3+10)];
	heap32[(r7+36)] = heap32[(r3+11)];
	f3 = heapFloat[(r3+12)];
	heapFloat[(r7+37)] = f3;
	f4 = heapFloat[(r3+13)];
	heapFloat[(r7+38)] = f4;
	f5 = heapFloat[(r3+14)];
	heapFloat[(r7+39)] = f5;
	r1 = heap32[(fp)];
	heap32[(r7+40)] = heap32[(r3+15)];
	r3 = heap32[(fp+4)];
	heap32[(r7+45)] = r1;
	heap32[(r7+46)] = r3;
	f0 = f3-f0;
	f1 = f4-f1;
	heap32[(r7+47)] = heap32[(fp+5)];
	f2 = f5-f2;
	heap32[(r7+48)] = r5;
	f3 = f0*f0;
	f4 = f1*f1;
	f3 = f3+f4;
	f4 = f2*f2;
	f3 = f3+f4;
	heapFloat[(g0)] = f3;
	sqrtf(i7);
	f3 = f9/f_g0;
	f4 = f0*f3;
	f5 = f2*f3;
	f3 = f1*f3;
	f6 =                         0;
	if(f4 !=f6) //_LBB246_2
{
	f7 = f9/f4;
}
else{
	f7 =        999999984306749440;
}
	heapFloat[(r7+1)] = f7;
	if(f3 !=f6) //_LBB246_5
{
	f8 = f9/f3;
}
else{
	f8 =        999999984306749440;
}
	heapFloat[(r7+2)] = f8;
	if(f5 !=f6) //_LBB246_8
{
	f9 = f9/f5;
}
else{
	f9 =        999999984306749440;
}
	r3 = f7 < f6;
	r5 = f8 < f6;
	r3 = r3 & 1;
	heapFloat[(r7+3)] = f9;
	r10 = f9 < f6;
	f0 = f4*f0;
	f1 = f3*f1;
	r5 = r5 & 1;
	heap32[(r7+5)] = r3;
	f0 = f0+f1;
	f1 = f5*f2;
	r3 = r10 & 1;
	heap32[(r7+6)] = r5;
	f0 = f0+f1;
	heap32[(r7+7)] = r3;
	r1 = r1 >> 2;
	heapFloat[(r7+8)] = f0;
	r1 = heap32[(r1+20)];
	r3 = r1 >> 2;
	r3 = heap32[(r3)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+6)];
	r0 = (r0 + 48)|0;
	r4 = (r4 + 48)|0;
	heap32[(g0)] = r1;
	heap32[(g0+1)] = r0;
	heap32[(g0+2)] = r4;
	heap32[(g0+3)] = r6;
	heap32[(g0+4)] = r8;
	heap32[(g0+5)] = r9;
	r0 = _ZN15CProfileManager11CurrentNodeE;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	r0 = r0 >> 2;
	heap32[(fp+-102)] = r2;
	r1 = heap32[(r0)];
	r2 = r1 >> 2;
	r3 = heap32[(r2+4)];
	r3 = (r3 + -1)|0;
	heap32[(r2+4)] = r3;
_13: do {
if(!(r3 !=0)) //_LBB246_15
{
	r3 = heap32[(r2+1)];
	if(r3 !=0) //_LBB246_12
{
	r1 = sp + -8;
	heap32[(g0)] = r1;
	heap32[(g0+1)] = 0;
	r3 = _ZL13gProfileClock_2E_0;
	gettimeofday(i7);
	r3 = r3 >> 2;
	r3 = heap32[(r3)];
	r3 = r3 >> 2;
	r1 = r1 >> 2;
	r4 = heap32[(fp+-2)];
	r5 = heap32[(r3)];
	r4 = (r4 - r5)|0;
	r1 = heap32[(r1+1)];
	r3 = heap32[(r3+1)];
	r1 = (r1 - r3)|0;
	r3 = (r4 * 1000000)|0;
	r1 = (r1 + r3)|0;
	r3 = heap32[(r2+3)];
	r1 = (r1 - r3)|0;
	f0 = uint(r1); //fuitos r1, f0
	f1 =                      1000;
	f2 = heapFloat[(r2+2)];
	f0 = f0/f1;
	f0 = f2+f0;
	heapFloat[(r2+2)] = f0;
	r1 = heap32[(r2+4)];
	if(r1 !=0) //_LBB246_15
{
break _13;
}
else{
	r1 = heap32[(r0)];
}
}
	r1 = r1 >> 2;
	r1 = heap32[(r1+5)];
	heap32[(r0)] = r1;
}
} while(0);
	return;
}