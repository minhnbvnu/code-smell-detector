function PSe(e,t,r){let n,i=e.state,a=i.selection.main;if(t.from>=a.from&&t.to<=a.to&&t.to-t.from>=(a.to-a.from)/3&&(!r||r.main.empty&&r.main.from==t.from+t.insert.length)&&e.inputState.composing<0){let s=a.from<t.from?i.sliceDoc(a.from,t.from):"",u=a.to>t.to?i.sliceDoc(t.to,a.to):"";n=i.replaceSelection(e.state.toText(s+t.insert.sliceString(0,void 0,e.state.lineBreak)+u))}else{let s=i.changes(t),u=r&&r.main.to<=s.newLength?r.main:void 0;if(i.selection.ranges.length>1&&e.inputState.composing>=0&&t.to<=a.to&&t.to>=a.to-10){let c=e.state.sliceDoc(t.from,t.to),d,f=r&&Kae(e,r.main.head);if(f){let m=t.insert.length-(t.to-t.from);d={from:f.from,to:f.to-m}}else d=e.state.doc.lineAt(a.head);let h=a.to-t.to,p=a.to-a.from;n=i.changeByRange(m=>{if(m.from==a.from&&m.to==a.to)return{changes:s,range:u||m.map(s)};let g=m.to-h,b=g-c.length;if(m.to-m.from!=p||e.state.sliceDoc(b,g)!=c||m.to>=d.from&&m.from<=d.to)return{range:m};let v=i.changes({from:b,to:g,insert:t.insert}),y=m.to-a.to;return{changes:v,range:u?ve.range(Math.max(0,u.anchor+y),Math.max(0,u.head+y)):m.map(v)}})}else n={changes:s,selection:u&&i.selection.replaceRange(u)}}let l="input.type";return(e.composing||e.inputState.compositionPendingChange&&e.inputState.compositionEndedAt>Date.now()-50)&&(e.inputState.compositionPendingChange=!1,l+=".compose",e.inputState.compositionFirstChange&&(l+=".start",e.inputState.compositionFirstChange=!1)),i.update(n,{userEvent:l,scrollIntoView:!0})}