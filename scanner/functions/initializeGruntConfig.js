function initializeGruntConfig(grunt) {

  grunt.initConfig({

    // Import package manifest
    pkg: grunt.file.readJSON("package.json"),

    // Banner definitions
    meta: {
      banner: "/** File generated by Grunt -- do not modify\n" +
      " *  <%= (pkg.title || pkg.name).toUpperCase() %>\n" +
      " *\n" +
      " *  @version <%= pkg.version %>\n" +
      " *  @website <%= pkg.homepage %>\n" +
      " *  @author <%= pkg.author.name %>, <%= pkg.author.url %>\n" +
      " *  @license <%= pkg.license %>\n" +
      " */\n"
    },

    concat: {
      main:{
        files: [
          //This concatenates the core validators file after the other files
          //Per: http://gruntjs.com/configuring-tasks
          {
            src: [SRC_DIR + MAIN_DIR+'*.js', '!' + coreValidatorsPath, coreValidatorsPath],
            dest: DIST_DIR + '/' + MAIN_PLUGIN_FILE + '.js'
          },
          {
            src: [SRC_DIR + MAIN_DIR+'*.js', '!' + coreValidatorsPath, coreValidatorsPath],
            dest: DIST_DIR + '/' + MAIN_PLUGIN_FILE + '.min.js'
          }]
      },
      options: {
        banner: "<%= meta.banner %>"
      }
    },

    cssmin: {
      target: {
        files:   [
          {
            dest: DIST_DIR,
            src: CSS_FILE,
            cwd: SRC_DIR,
            expand: true,
            ext: '.min.css'
          }
        ]
      }
    },
    // Lint definitions
    jshint: {
      files: [SRC_DIR + '/*'],
      options: {
        jshintrc: ".jshintrc",
        ignores: [SRC_DIR + '/' + CSS_FILE]
      }
    },

    // Minify definitions
    uglify: {
      options: {
        banner: "<%= meta.banner %>"
      },
      main: {
        files: [
          {
            expand: true,
            cwd: DIST_DIR + '/',
            src: ['**/*.js', '!' + MAIN_PLUGIN_FILE +'.js'],
            dest: DIST_DIR + '/'
          }
        ]
      }
    },

    watch: {
      files: [SRC_DIR + '/**'],
      tasks: ['test'],
      options: {
        nospawn: true,
        livereload: true
      }
    },

    // Unit tests
    qunit: {
      all: ['test/qunit.html']
    },

    // Standalone servers
    connect: {
      server: {
        options: {
          port: 8000,
          base: '.'
        }
      }
    },

    copy: {
      main: {
        files: [
          {
            src: SRC_DIR + '/' + CSS_FILE,
            dest: DIST_DIR + '/' + CSS_FILE
          },
          {
            cwd: SRC_DIR + '/' + MODULE_DIR,
            src: '**',
            dest: DIST_DIR  + '/',
            expand: true
          },
          {
            cwd: SRC_DIR + '/' + LANG_DIR,
            src: '**',
            dest: DIST_DIR + LANG_DIR +'/',
            expand: true
          }]
      }
    },

    clean: [DIST_DIR + '/'],

    umd: {
      main: {
        options: {
          src: DIST_DIR + '/**/*.js',
          dest: './',
          deps: {
            default: ['jQuery'],
            amd: [{'jquery': 'jQuery'}],
            cjs: [{'jquery': 'jQuery'}]
          }
        }
      }
    }
  });
}