function __preextrapolate_helper($v) {
 $v = $v|0;
 var $$alloca_mul = 0, $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$08 = 0, $j$03 = 0, $j$14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $0 = sp;
 $1 = ((($v)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 << 2;
 $$alloca_mul = $3;
 $4 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0;;
 $5 = ((($v)) + 28|0);
 HEAP32[$5>>2] = 1;
 $6 = ((($v)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($2) - ($7))|0;
 $9 = ($8|0)>(32);
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ((($v)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)>(0);
 if (!($14)) {
  STACKTOP = sp;return;
 }
 $15 = ((($v)) + 8|0);
 $16 = $2;$i$08 = 0;
 while(1) {
  $17 = ($16|0)>(0);
  if ($17) {
   $18 = HEAP32[$15>>2]|0;
   $19 = (($18) + ($i$08<<2)|0);
   $20 = HEAP32[$19>>2]|0;
   $j$03 = 0;
   while(1) {
    $21 = $j$03 ^ -1;
    $22 = (($16) + ($21))|0;
    $23 = (($20) + ($22<<2)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (($4) + ($j$03<<2)|0);
    HEAP32[$25>>2] = $24;
    $26 = (($j$03) + 1)|0;
    $27 = ($16|0)>($26|0);
    if ($27) {
     $j$03 = $26;
    } else {
     break;
    }
   }
  }
  $28 = HEAP32[$6>>2]|0;
  $29 = (($16) - ($28))|0;
  (+_vorbis_lpc_from_data($4,$0,$29,16));
  $30 = HEAP32[$1>>2]|0;
  $31 = HEAP32[$6>>2]|0;
  $$sum = (($30) - ($31))|0;
  $32 = (($4) + ($$sum<<2)|0);
  $$sum1 = (($$sum) + -16)|0;
  $33 = (($4) + ($$sum1<<2)|0);
  _vorbis_lpc_predict($0,$33,16,$32,$31);
  $34 = HEAP32[$1>>2]|0;
  $35 = ($34|0)>(0);
  if ($35) {
   $36 = HEAP32[$15>>2]|0;
   $37 = (($36) + ($i$08<<2)|0);
   $38 = HEAP32[$37>>2]|0;
   $j$14 = 0;
   while(1) {
    $39 = (($4) + ($j$14<<2)|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = $j$14 ^ -1;
    $42 = (($34) + ($41))|0;
    $43 = (($38) + ($42<<2)|0);
    HEAP32[$43>>2] = $40;
    $44 = (($j$14) + 1)|0;
    $45 = ($34|0)>($44|0);
    if ($45) {
     $j$14 = $44;
    } else {
     break;
    }
   }
  }
  $46 = (($i$08) + 1)|0;
  $47 = HEAP32[$10>>2]|0;
  $48 = ((($47)) + 4|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ($46|0)<($49|0);
  if ($50) {
   $16 = $34;$i$08 = $46;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}