function _ZN11btRigidBody14setupRigidBodyERKNS_27btRigidBodyConstructionInfoE(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
	var f6;
	var f7;
	var f8;
	var f9;
	var f10;
	var f11;
	var f12;
	var f13;
	var f14;
	var f15;
var __label__ = 0;
	i7 = sp + -16;var g0 = i7>>2; // save stack
	r0 = heap32[(fp)];
	r1 = r0 >> 2;
	heap32[(r1+58)] = 2;
	heap32[(r1+76)] = 0;
	heap32[(r1+77)] = 0;
	heap32[(r1+78)] = 0;
	heap32[(r1+79)] = 0;
	heap32[(r1+80)] = 0;
	heap32[(r1+81)] = 0;
	heap32[(r1+82)] = 0;
	heap32[(r1+83)] = 0;
	heap32[(r1+134)] = 1065353216;
	heap32[(r1+135)] = 1065353216;
	heap32[(r1+136)] = 1065353216;
	heap32[(r1+137)] = 0;
	heap32[(r1+85)] = 1065353216;
	heap32[(r1+86)] = 1065353216;
	heap32[(r1+87)] = 1065353216;
	heap32[(r1+88)] = 0;
	heap32[(r1+89)] = 0;
	heap32[(r1+90)] = 0;
	heap32[(r1+91)] = 0;
	heap32[(r1+92)] = 0;
	heap32[(r1+93)] = 0;
	heap32[(r1+94)] = 0;
	heap32[(r1+95)] = 0;
	heap32[(r1+96)] = 0;
	heap32[(r1+101)] = 0;
	heap32[(r1+102)] = 0;
	heap32[(r1+103)] = 0;
	heap32[(r1+104)] = 0;
	heap32[(r1+105)] = 0;
	heap32[(r1+106)] = 0;
	heap32[(r1+107)] = 0;
	heap32[(r1+108)] = 0;
	heap32[(r1+109)] = 0;
	r2 = heap32[(fp+1)];
	heap32[(r1+110)] = 1056964608;
	r3 = r2 >> 2;
	heap32[(r1+116)] = heap32[(r3+27)];
	heap32[(r1+117)] = heap32[(r3+28)];
	r4 = heap32[(r3+1)];
	heap32[(r1+118)] = r4;
	heap32[(r1+150)] = 0;
	heap32[(r1+151)] = 0;
	r5 = heapU8[r2+116];
	heap8[r0+444] = r5;
	heap32[(r1+112)] = heap32[(r3+30)];
	heap32[(r1+113)] = heap32[(r3+31)];
	heap32[(r1+114)] = heap32[(r3+32)];
	heap32[(r1+115)] = heap32[(r3+33)];
	if(r4 ==0) //_LBB682_2
{
	f0 = heapFloat[(r3+2)];
	heapFloat[(r1+1)] = f0;
	f1 = heapFloat[(r3+3)];
	heapFloat[(r1+2)] = f1;
	f2 = heapFloat[(r3+4)];
	heapFloat[(r1+3)] = f2;
	f3 = heapFloat[(r3+5)];
	heapFloat[(r1+4)] = f3;
	f4 = heapFloat[(r3+6)];
	heapFloat[(r1+5)] = f4;
	f5 = heapFloat[(r3+7)];
	heapFloat[(r1+6)] = f5;
	f6 = heapFloat[(r3+8)];
	heapFloat[(r1+7)] = f6;
	f7 = heapFloat[(r3+9)];
	heapFloat[(r1+8)] = f7;
	f8 = heapFloat[(r3+10)];
	heapFloat[(r1+9)] = f8;
	f9 = heapFloat[(r3+11)];
	heapFloat[(r1+10)] = f9;
	f10 = heapFloat[(r3+12)];
	heapFloat[(r1+11)] = f10;
	f11 = heapFloat[(r3+13)];
	heapFloat[(r1+12)] = f11;
	f12 = heapFloat[(r3+14)];
	heapFloat[(r1+13)] = f12;
	f13 = heapFloat[(r3+15)];
	heapFloat[(r1+14)] = f13;
	f14 = heapFloat[(r3+16)];
	heapFloat[(r1+15)] = f14;
	f15 = heapFloat[(r3+17)];
	heapFloat[(r1+16)] = f15;
}
else{
	r5 = r4 >> 2;
	r5 = heap32[(r5)];
	r5 = r5 >> 2;
	r5 = heap32[(r5+2)];
	r6 = (r0 + 4)|0;
	heap32[(g0)] = r4;
	heap32[(g0+1)] = r6;
	__FUNCTION_TABLE__[(r5)>>2](i7);
	f0 = heapFloat[(r1+1)];
	f1 = heapFloat[(r1+2)];
	f2 = heapFloat[(r1+3)];
	f3 = heapFloat[(r1+4)];
	f4 = heapFloat[(r1+5)];
	f5 = heapFloat[(r1+6)];
	f6 = heapFloat[(r1+7)];
	f7 = heapFloat[(r1+8)];
	f8 = heapFloat[(r1+9)];
	f9 = heapFloat[(r1+10)];
	f10 = heapFloat[(r1+11)];
	f11 = heapFloat[(r1+12)];
	f12 = heapFloat[(r1+13)];
	f13 = heapFloat[(r1+14)];
	f14 = heapFloat[(r1+15)];
	f15 = heapFloat[(r1+16)];
}
	heapFloat[(r1+17)] = f0;
	heapFloat[(r1+18)] = f1;
	heapFloat[(r1+19)] = f2;
	heapFloat[(r1+20)] = f3;
	heapFloat[(r1+21)] = f4;
	heapFloat[(r1+22)] = f5;
	heapFloat[(r1+23)] = f6;
	heapFloat[(r1+24)] = f7;
	heapFloat[(r1+25)] = f8;
	heapFloat[(r1+26)] = f9;
	heapFloat[(r1+27)] = f10;
	heapFloat[(r1+28)] = f11;
	heapFloat[(r1+29)] = f12;
	heapFloat[(r1+30)] = f13;
	heapFloat[(r1+31)] = f14;
	heapFloat[(r1+32)] = f15;
	heap32[(r1+33)] = 0;
	heap32[(r1+34)] = 0;
	heap32[(r1+35)] = 0;
	heap32[(r1+36)] = 0;
	heap32[(r1+37)] = 0;
	heap32[(r1+38)] = 0;
	heap32[(r1+39)] = 0;
	heap32[(r1+40)] = 0;
	heap32[(r1+56)] = heap32[(r3+25)];
	heap32[(r1+57)] = heap32[(r3+26)];
	r4 = heap32[(r1)];
	r4 = r4 >> 2;
	r4 = heap32[(r4+3)];
	r5 = heap32[(r3+18)];
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r5;
	r5 = _ZL8uniqueId;
	r5 = r5 >> 2;
	__FUNCTION_TABLE__[(r4)>>2](i7);
	r4 = heap32[(r5)];
	r6 = (r4 + 1)|0;
	heap32[(r1+125)] = r4;
	heap32[(r5)] = r6;
	f0 = heapFloat[(r3)];
	r2 = (r2 + 76)|0;
	heap32[(g0)] = r0;
	heapFloat[(g0+1)] = f0;
	heap32[(g0+2)] = r2;
	_ZN11btRigidBody12setMassPropsEfRK9btVector3(i7);
	f0 = heapFloat[(r3+23)];
	f1 = heapFloat[(r3+24)];
	f2 =                         0;
	if(f0 >=f2) //_LBB682_5
{
	f3 =                         1;
	f0 = f0 > f3 ? f3 : f0;
}
else{
	f0 = f2;
}
	heapFloat[(r1+109)] = f0;
	if(f1 >=f2) //_LBB682_8
{
	f0 =                         1;
	f1 = f1 > f0 ? f0 : f1;
}
else{
	f1 =                         0;
}
	heapFloat[(r1+110)] = f1;
	heap32[(g0)] = r0;
	_ZN11btRigidBody19updateInertiaTensorEv(i7);
	heap32[(r1+124)] = 0;
	heap32[(r1+126)] = 0;
	heap32[(r1+127)] = 0;
	heap32[(r1+128)] = 0;
	heap32[(r1+129)] = 0;
	heap32[(r1+130)] = 0;
	heap32[(r1+131)] = 0;
	heap32[(r1+132)] = 0;
	heap32[(r1+133)] = 0;
	f0 = heapFloat[(r1+87)];
	f1 = heapFloat[(r1+84)];
	f2 = heapFloat[(r1+86)];
	f3 = heapFloat[(r1+85)];
	f3 = f3*f1;
	f2 = f2*f1;
	heapFloat[(r1+138)] = f3;
	f0 = f0*f1;
	heapFloat[(r1+139)] = f2;
	heapFloat[(r1+140)] = f0;
	heap32[(r1+141)] = 0;
	heap32[(r1+142)] = 0;
	heap32[(r1+143)] = 0;
	heap32[(r1+144)] = 0;
	heap32[(r1+145)] = 0;
	heap32[(r1+146)] = 0;
	heap32[(r1+147)] = 0;
	heap32[(r1+148)] = 0;
	heap32[(r1+149)] = 0;
	return;
}