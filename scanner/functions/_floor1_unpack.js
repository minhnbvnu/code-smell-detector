function _floor1_unpack($vi,$opb) {
 $vi = $vi|0;
 $opb = $opb|0;
 var $$01 = 0, $$lcssa = 0, $$maxclass$0 = 0, $$maxclass$0$lcssa = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi50Z2D = 0, $$pre$phi52Z2D = 0, $$pre45 = 0, $$pre47 = 0, $$pre48 = 0, $$pre49 = 0, $$pre51 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $count$0$lcssa = 0, $count$023 = 0, $j$037 = 0, $j$132 = 0, $j$225 = 0, $j$315 = 0, $j$414 = 0, $k$029 = 0, $k$124 = 0, $k$2$lcssa = 0, $k$219 = 0, $maxclass$036 = 0, $or$cond = 0, $sortpointer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $sortpointer = sp;
 $0 = ((($vi)) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_calloc(1,1120)|0);
 $3 = (_oggpack_read($opb,5)|0);
 HEAP32[$2>>2] = $3;
 $4 = ($3|0)>(0);
 L1: do {
  if ($4) {
   $5 = ((($2)) + 4|0);
   $j$037 = 0;$maxclass$036 = -1;
   while(1) {
    $12 = (_oggpack_read($opb,4)|0);
    $13 = (($5) + ($j$037<<2)|0);
    HEAP32[$13>>2] = $12;
    $14 = ($12|0)<(0);
    if ($14) {
     break L1;
    }
    $15 = ($maxclass$036|0)<($12|0);
    $$maxclass$0 = $15 ? $12 : $maxclass$036;
    $16 = (($j$037) + 1)|0;
    $17 = HEAP32[$2>>2]|0;
    $18 = ($16|0)<($17|0);
    if ($18) {
     $j$037 = $16;$maxclass$036 = $$maxclass$0;
    } else {
     $$maxclass$0$lcssa = $$maxclass$0;
     break;
    }
   }
   $6 = ($$maxclass$0$lcssa|0)>(-1);
   if ($6) {
    $7 = ((($2)) + 128|0);
    $8 = ((($2)) + 192|0);
    $9 = ((($2)) + 256|0);
    $10 = ((($1)) + 24|0);
    $11 = ((($2)) + 320|0);
    $j$132 = 0;
    while(1) {
     $19 = (_oggpack_read($opb,3)|0);
     $20 = (($19) + 1)|0;
     $21 = (($7) + ($j$132<<2)|0);
     HEAP32[$21>>2] = $20;
     $22 = (_oggpack_read($opb,2)|0);
     $23 = (($8) + ($j$132<<2)|0);
     HEAP32[$23>>2] = $22;
     $24 = ($22|0)<(0);
     if ($24) {
      break L1;
     }
     $25 = ($22|0)==(0);
     if ($25) {
      $$phi$trans$insert = (($9) + ($j$132<<2)|0);
      $$pre = HEAP32[$$phi$trans$insert>>2]|0;
      $28 = $$pre;
     } else {
      $26 = (_oggpack_read($opb,8)|0);
      $27 = (($9) + ($j$132<<2)|0);
      HEAP32[$27>>2] = $26;
      $28 = $26;
     }
     $29 = ($28|0)<(0);
     if ($29) {
      break L1;
     }
     $30 = HEAP32[$10>>2]|0;
     $31 = ($28|0)<($30|0);
     if (!($31)) {
      break L1;
     }
     $32 = HEAP32[$23>>2]|0;
     $33 = ($32|0)==(31);
     if (!($33)) {
      $k$029 = 0;
      while(1) {
       $38 = (_oggpack_read($opb,8)|0);
       $39 = (($38) + -1)|0;
       $40 = ((($11) + ($j$132<<5)|0) + ($k$029<<2)|0);
       HEAP32[$40>>2] = $39;
       $41 = ($38|0)<(0);
       if ($41) {
        break L1;
       }
       $42 = HEAP32[$10>>2]|0;
       $43 = ($38|0)>($42|0);
       $36 = (($k$029) + 1)|0;
       if ($43) {
        break L1;
       }
       $34 = HEAP32[$23>>2]|0;
       $35 = 1 << $34;
       $37 = ($36|0)<($35|0);
       if ($37) {
        $k$029 = $36;
       } else {
        break;
       }
      }
     }
     $44 = (($j$132) + 1)|0;
     $45 = ($j$132|0)<($$maxclass$0$lcssa|0);
     if ($45) {
      $j$132 = $44;
     } else {
      label = 18;
      break;
     }
    }
   } else {
    label = 18;
   }
  } else {
   label = 18;
  }
 } while(0);
 L23: do {
  if ((label|0) == 18) {
   $46 = (_oggpack_read($opb,2)|0);
   $47 = (($46) + 1)|0;
   $48 = ((($2)) + 832|0);
   HEAP32[$48>>2] = $47;
   $49 = (_oggpack_read($opb,4)|0);
   $50 = ($49|0)<(0);
   if (!($50)) {
    $51 = HEAP32[$2>>2]|0;
    $52 = ($51|0)>(0);
    if ($52) {
     $53 = ((($2)) + 4|0);
     $54 = ((($2)) + 128|0);
     $55 = ((($2)) + 836|0);
     $56 = 1 << $49;
     $90 = $51;$count$023 = 0;$j$225 = 0;$k$124 = 0;
     while(1) {
      $57 = (($53) + ($j$225<<2)|0);
      $58 = HEAP32[$57>>2]|0;
      $59 = (($54) + ($58<<2)|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = (($60) + ($count$023))|0;
      $62 = ($61|0)>(63);
      if ($62) {
       break L23;
      }
      $63 = ($k$124|0)<($61|0);
      if ($63) {
       $k$219 = $k$124;
       while(1) {
        $64 = (_oggpack_read($opb,$49)|0);
        $65 = (($k$219) + 2)|0;
        $66 = (($55) + ($65<<2)|0);
        HEAP32[$66>>2] = $64;
        $67 = ($64|0)>(-1);
        $68 = ($64|0)<($56|0);
        $or$cond = $67 & $68;
        if (!($or$cond)) {
         break L23;
        }
        $69 = (($k$219) + 1)|0;
        $70 = ($69|0)<($61|0);
        if ($70) {
         $k$219 = $69;
        } else {
         $$lcssa = $69;
         break;
        }
       }
       $$pre45 = HEAP32[$2>>2]|0;
       $73 = $$pre45;$k$2$lcssa = $$lcssa;
      } else {
       $73 = $90;$k$2$lcssa = $k$124;
      }
      $71 = (($j$225) + 1)|0;
      $72 = ($71|0)<($73|0);
      if ($72) {
       $90 = $73;$count$023 = $61;$j$225 = $71;$k$124 = $k$2$lcssa;
      } else {
       $$pre$phi50Z2D = $55;$$pre$phi52Z2D = $56;$count$0$lcssa = $61;
       break;
      }
     }
    } else {
     $$pre49 = ((($2)) + 836|0);
     $$pre51 = 1 << $49;
     $$pre$phi50Z2D = $$pre49;$$pre$phi52Z2D = $$pre51;$count$0$lcssa = 0;
    }
    HEAP32[$$pre$phi50Z2D>>2] = 0;
    $74 = ((($2)) + 840|0);
    HEAP32[$74>>2] = $$pre$phi52Z2D;
    $75 = (($count$0$lcssa) + 2)|0;
    $76 = ($count$0$lcssa|0)>(-2);
    if ($76) {
     $j$315 = 0;
     while(1) {
      $77 = (($$pre$phi50Z2D) + ($j$315<<2)|0);
      $78 = (($sortpointer) + ($j$315<<2)|0);
      HEAP32[$78>>2] = $77;
      $79 = (($j$315) + 1)|0;
      $80 = ($79|0)<($75|0);
      if ($80) {
       $j$315 = $79;
      } else {
       break;
      }
     }
    }
    _qsort($sortpointer,$75,4,8);
    $81 = ($75|0)>(1);
    L43: do {
     if ($81) {
      $$pre47 = HEAP32[$sortpointer>>2]|0;
      $$pre48 = HEAP32[$$pre47>>2]|0;
      $87 = $$pre48;$j$414 = 1;
      while(1) {
       $84 = (($sortpointer) + ($j$414<<2)|0);
       $85 = HEAP32[$84>>2]|0;
       $86 = HEAP32[$85>>2]|0;
       $88 = ($87|0)==($86|0);
       $82 = (($j$414) + 1)|0;
       if ($88) {
        break;
       }
       $83 = ($82|0)<($75|0);
       if ($83) {
        $87 = $86;$j$414 = $82;
       } else {
        break L43;
       }
      }
      $89 = ($2|0)==(0|0);
      if ($89) {
       $$01 = 0;
      } else {
       break L23;
      }
      STACKTOP = sp;return ($$01|0);
     }
    } while(0);
    $$01 = $2;
    STACKTOP = sp;return ($$01|0);
   }
  }
 } while(0);
 _free($2);
 $$01 = 0;
 STACKTOP = sp;return ($$01|0);
}