function fitCubic(t,r,i,o,l){var c,u,d,h,p,v,y,g,_,m,b,A,k;if(2===t.length){A=a.vectorLen(a.subtract(t[0],t[1]))/3;return[c=[t[0],a.addArrays(t[0],a.mulItems(r,A)),a.addArrays(t[1],a.mulItems(i,A)),t[1]]]}u=function chordLengthParameterize(t){var r,i,o,l=[];t.forEach((function(t,c){r=c?i+a.vectorLen(a.subtract(t,o)):0;l.push(r);i=r;o=t}));return l=l.map((function(t){return t/i}))}(t);var P=_slicedToArray(generateAndReport(t,u,u,r,i,l),3);c=P[0];h=P[1];v=P[2];if(0===h||h<o)return[c];if(h<o*o){d=u;p=h;y=v;for(k=0;k<20;k++){var S=_slicedToArray(generateAndReport(t,u,d=reparameterize(c,t,d),r,i,l),3);c=S[0];h=S[1];v=S[2];if(h<o)return[c];if(v===y){var w=h/p;if(w>.9999&&w<1.0001)break}p=h;y=v}}b=[];if((g=a.subtract(t[v-1],t[v+1])).every((function(t){return 0===t}))){var x=[-(g=a.subtract(t[v-1],t[v]))[1],g[0]];g[0]=x[0];g[1]=x[1]}_=a.normalize(g);m=a.mulItems(_,-1);return b=(b=b.concat(fitCubic(t.slice(0,v+1),r,_,o,l))).concat(fitCubic(t.slice(v),m,i,o,l))}