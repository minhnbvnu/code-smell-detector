function _mdct_init($lookup,$n) {
 $lookup = $lookup|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0.0;
 var $45 = 0.0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0.0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0.0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0.0, $9 = 0.0, $90 = 0, $acc$03 = 0, $acc$1 = 0, $acc$1$lcssa = 0, $i$07 = 0, $i$15 = 0, $i1$04 = 0, $j$02 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($n|0) / 4)&-1;
 $1 = $0 << 2;
 $2 = (_malloc($1)|0);
 $3 = (($0) + ($n))|0;
 $4 = $3 << 2;
 $5 = (_malloc($4)|0);
 $6 = $n >> 1;
 $7 = (+($n|0));
 $8 = $7;
 $9 = (+Math_log((+$8)));
 $10 = $9 * 1.4426950408889634;
 $11 = (+_rint($10));
 $12 = (~~(($11)));
 $13 = ((($lookup)) + 4|0);
 HEAP32[$13>>2] = $12;
 HEAP32[$lookup>>2] = $n;
 $14 = ((($lookup)) + 8|0);
 HEAP32[$14>>2] = $5;
 $15 = ((($lookup)) + 12|0);
 HEAP32[$15>>2] = $2;
 $16 = ($n|0)>(3);
 if (!($16)) {
  $89 = 4.0 / $7;
  $90 = ((($lookup)) + 16|0);
  HEAPF32[$90>>2] = $89;
  return;
 }
 $17 = (+($n|0));
 $18 = 3.1415926535897931 / $17;
 $19 = $n << 1;
 $20 = (+($19|0));
 $21 = 3.1415926535897931 / $20;
 $i$07 = 0;
 while(1) {
  $26 = $i$07 << 2;
  $27 = (+($26|0));
  $28 = $18 * $27;
  $29 = (+Math_cos((+$28)));
  $30 = $29;
  $31 = $i$07 << 1;
  $32 = (($5) + ($31<<2)|0);
  HEAPF32[$32>>2] = $30;
  $33 = (+Math_sin((+$28)));
  $34 = $33;
  $35 = -$34;
  $36 = $31 | 1;
  $37 = (($5) + ($36<<2)|0);
  HEAPF32[$37>>2] = $35;
  $38 = (+($36|0));
  $39 = $21 * $38;
  $40 = (+Math_cos((+$39)));
  $41 = $40;
  $42 = (($31) + ($6))|0;
  $43 = (($5) + ($42<<2)|0);
  HEAPF32[$43>>2] = $41;
  $44 = (+Math_sin((+$39)));
  $45 = $44;
  $46 = (($42) + 1)|0;
  $47 = (($5) + ($46<<2)|0);
  HEAPF32[$47>>2] = $45;
  $48 = (($i$07) + 1)|0;
  $49 = ($48|0)<($0|0);
  if ($49) {
   $i$07 = $48;
  } else {
   break;
  }
 }
 $22 = (($n|0) / 8)&-1;
 $23 = ($n|0)>(7);
 if (!($23)) {
  $89 = 4.0 / $7;
  $90 = ((($lookup)) + 16|0);
  HEAPF32[$90>>2] = $89;
  return;
 }
 $24 = (+($n|0));
 $25 = 3.1415926535897931 / $24;
 $i$15 = 0;
 while(1) {
  $50 = $i$15 << 2;
  $51 = $50 | 2;
  $52 = (+($51|0));
  $53 = $25 * $52;
  $54 = (+Math_cos((+$53)));
  $55 = $54 * 0.5;
  $56 = $55;
  $57 = $i$15 << 1;
  $58 = (($57) + ($n))|0;
  $59 = (($5) + ($58<<2)|0);
  HEAPF32[$59>>2] = $56;
  $60 = (+Math_sin((+$53)));
  $61 = $60 * -0.5;
  $62 = $61;
  $63 = (($58) + 1)|0;
  $64 = (($5) + ($63<<2)|0);
  HEAPF32[$64>>2] = $62;
  $65 = (($i$15) + 1)|0;
  $66 = ($65|0)<($22|0);
  if ($66) {
   $i$15 = $65;
  } else {
   break;
  }
 }
 $67 = (($12) + -1)|0;
 $68 = 1 << $67;
 $69 = (($68) + -1)|0;
 $70 = (($12) + -2)|0;
 $71 = 1 << $70;
 if ($23) {
  $i1$04 = 0;
 } else {
  $89 = 4.0 / $7;
  $90 = ((($lookup)) + 16|0);
  HEAPF32[$90>>2] = $89;
  return;
 }
 while(1) {
  $73 = $71;$acc$03 = 0;$j$02 = 0;
  while(1) {
   $72 = $73 & $i1$04;
   $74 = ($72|0)==(0);
   $75 = 1 << $j$02;
   $76 = $74 ? 0 : $75;
   $acc$1 = $76 | $acc$03;
   $77 = (($j$02) + 1)|0;
   $78 = $71 >> $77;
   $79 = ($78|0)==(0);
   if ($79) {
    $acc$1$lcssa = $acc$1;
    break;
   } else {
    $73 = $78;$acc$03 = $acc$1;$j$02 = $77;
   }
  }
  $80 = $acc$1$lcssa ^ -1;
  $81 = $69 & $80;
  $82 = (($81) + -1)|0;
  $83 = $i1$04 << 1;
  $84 = (($2) + ($83<<2)|0);
  HEAP32[$84>>2] = $82;
  $85 = $83 | 1;
  $86 = (($2) + ($85<<2)|0);
  HEAP32[$86>>2] = $acc$1$lcssa;
  $87 = (($i1$04) + 1)|0;
  $88 = ($87|0)<($22|0);
  if ($88) {
   $i1$04 = $87;
  } else {
   break;
  }
 }
 $89 = 4.0 / $7;
 $90 = ((($lookup)) + 16|0);
 HEAPF32[$90>>2] = $89;
 return;
}