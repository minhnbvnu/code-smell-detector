function _wgpu_device_create_bind_group(device,layout,entries,numEntries){device=wgpu[device];entries>>=2;let e=[];while(numEntries--){let bindingIdx=HEAPU32[entries],resource=wgpu[HEAPU32[entries+1]];let binding={"binding":bindingIdx,"resource":resource};if(resource.isBuffer){let resourceBinding={"buffer":resource,"offset":wgpuReadI53FromU64HeapIdx(entries+2)},size=wgpuReadI53FromU64HeapIdx(entries+4);if(size)resourceBinding["size"]=size;binding["resource"]=resourceBinding}e.push(binding);entries+=6}return wgpuStoreAndSetParent(device["createBindGroup"](debugDir({"layout":wgpu[layout],"entries":e},"GPUDevice.createBindGroup() with desc")),device)}