function jX(n){let{inputs:t,backend:e,attrs:i}=n,{x:r,segmentIds:o}=t,{numSegments:s}=i;ut(r,"unsortedSegmentSum");let a=r.shape.length,l=o.shape.length,c=[],u=[],h=a-l,p=o;for(let f=0;f<h;++f){let m=Yl({inputs:{input:p},backend:e,attrs:{dim:f+1}});p=m,u.push(m)}for(let f=0;f<s;++f){let m=R.createScalarValue(f,"int32"),x=e.makeTensorInfo([],"int32",m),g=W_({inputs:{a:x,b:p},backend:e}),v=Ni({inputs:{x:g},backend:e,attrs:{dtype:"float32"}}),b=ra({inputs:{a:v,b:r},backend:e}),y=so({inputs:{x:b},backend:e,attrs:{axis:0,keepDims:!1}});c.push(y),u.push(x),u.push(g),u.push(v),u.push(b),u.push(y)}let d=X_({inputs:c,backend:e,attrs:{axis:0}});return u.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}