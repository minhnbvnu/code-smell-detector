function Mbe(e,t,r){return new Promise(i=>{let a=t.replace(/'/g,"''").replace(/`/g,"``");(0,C7().execFile)("powershell.exe",["-NoProfile","-NonInteractive","-InputFormat","None","-Command",`Get-AuthenticodeSignature '${a}' | ConvertTo-Json -Compress | ForEach-Object { [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($_)) }`],{timeout:20*1e3},(n,s,o)=>{try{if(n!=null||o){zbe(r,n,o),i(null);return}let u=Vbe(Buffer.from(s,"base64").toString("utf-8"));if(u.Status===0){let p=(0,FK().parseDn)(u.SignerCertificate.Subject).get("CN");if(e.includes(p)){i(null);return}}let l=`publisherNames: ${e.join(" | ")}, raw info: `+JSON.stringify(u,(p,c)=>p==="RawData"?void 0:c,2);r.warn(`Sign verification failed, installer signed with incorrect certificate: ${l}`),i(l)}catch{r.warn(`Cannot execute Get-AuthenticodeSignature: ${n}. Ignoring signature validation due to unknown error.`),i(null);return}})})}