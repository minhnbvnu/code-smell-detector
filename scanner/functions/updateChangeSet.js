async function updateChangeSet(rosClient, region, stackName, stackId, tpl, parameters = {}) {
  try {
    const params = {
      'RegionId': region,
      'ChangeSetName': generateChangeSetName(),
      'StackId': stackId,
      'ChangeSetType': 'UPDATE',
      'Description': 'generated by Funcraft',
      'TemplateBody': JSON.stringify(tpl),
      'DisableRollback': false,
      'TimeoutInMinutes': DEFAULT_ROS_TIMEOUT_IN_MINS,
      'UsePreviousParameters': true
    };

    Object.assign(params, parameters);

    debug('update stacks, params %s', params);

    const res = await rosClient.request('CreateChangeSet', params, requestOption);
    return res.ChangeSetId;
  } catch (e) {
    if (e.name === 'NotSupportedError' && e.data && e.data.Message && e.data.Message.indexOf('Update the completely same stack') !== -1) {
      throw new Error(red(`no need to update, your stack ${stackName} is already latest`)); // todo: 
    } else {
      throw e;
    }
  }
}