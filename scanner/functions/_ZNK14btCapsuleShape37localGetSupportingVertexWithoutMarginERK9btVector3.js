function _ZNK14btCapsuleShape37localGetSupportingVertexWithoutMarginERK9btVector3(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
	var f6;
	var f7;
	var f8;
	var f9;
	var f10;
	var f11;
var __label__ = 0;
	i7 = sp + -40;var g0 = i7>>2; // save stack
	r0 = heap32[(fp)];
	r0 = r0 >> 2;
	heap32[(r0)] = 0;
	heap32[(r0+1)] = 0;
	r1 = heap32[(fp+2)];
	heap32[(r0+2)] = 0;
	r1 = r1 >> 2;
	heap32[(r0+3)] = 0;
	f0 = heapFloat[(r1)];
	f1 = heapFloat[(r1+1)];
	f2 = heapFloat[(r1+2)];
	f3 = f0*f0;
	f4 = f1*f1;
	f3 = f3+f4;
	f4 = f2*f2;
	f3 = f3+f4;
	r1 = heap32[(fp+1)];
	f4 =   9.9999997473787516e-005;
	if(f3 >=f4) //_LBB427_2
{
	heapFloat[(g0)] = f3;
	f3 =                         1;
	sqrtf(i7);
	f3 = f3/f_g0;
	f0 = f0*f3;
	f1 = f1*f3;
	f2 = f2*f3;
}
else{
	f0 =                         1;
	f1 =                         0;
	f2 = f1;
}
	r2 = r1 >> 2;
	r3 = heap32[(r2+13)];
	r4 = (r3 + 2)|0;
	r4 = (r4 % 3)|0;
	r5 = (r1 + 28)|0;
	r4 = r4 << 2;
	r4 = (r5 + r4)|0;
	r4 = r4 >> 2;
	f3 = heapFloat[(r4)];
	r4 = sp + -16;
	heap32[(fp+-4)] = 0;
	r6 = r4 >> 2;
	r3 = r3 << 2;
	heap32[(r6+1)] = 0;
	r4 = (r4 + r3)|0;
	r3 = (r5 + r3)|0;
	heap32[(r6+2)] = 0;
	r4 = r4 >> 2;
	r3 = r3 >> 2;
	heap32[(r6+3)] = 0;
	heap32[(r4)] = heap32[(r3)];
	r3 = heap32[(r2)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+11)];
	heap32[(g0)] = r1;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	f5 = heapFloat[(r2+4)];
	f6 = heapFloat[(r2+3)];
	f7 = heapFloat[(r2+5)];
	f5 = f1*f5;
	f6 = f0*f6;
	f7 = f2*f7;
	f8 = heapFloat[(r6+1)];
	f5 = f5*f3;
	f9 = heapFloat[(fp+-4)];
	f6 = f6*f3;
	f10 = heapFloat[(r6+2)];
	f7 = f7*f3;
	f5 = f8+f5;
	f8 = f1*f_g0;
	f6 = f9+f6;
	f9 = f0*f_g0;
	f5 = f5-f8;
	f6 = f6-f9;
	f7 = f10+f7;
	f4 = f2*f_g0;
	f4 = f7-f4;
	f7 = f0*f6;
	f8 = f1*f5;
	f7 = f7+f8;
	f8 = f2*f4;
	f7 = f7+f8;
	f8 =       -999999984306749440;
	if(f7 >f8) //_LBB427_5
{
	heapFloat[(r0)] = f6;
	heapFloat[(r0+1)] = f5;
	heapFloat[(r0+2)] = f4;
	heap32[(r0+3)] = 0;
	f8 = f7;
}
	r3 = sp + -32;
	heap32[(fp+-8)] = 0;
	r4 = r3 >> 2;
	heap32[(r4+1)] = 0;
	heap32[(r4+2)] = 0;
	heap32[(r4+3)] = 0;
	r5 = heap32[(r2+13)];
	r5 = r5 << 2;
	r6 = (r1 + r5)|0;
	r6 = r6 >> 2;
	f4 = heapFloat[(r6+7)];
	r3 = (r3 + r5)|0;
	r3 = r3 >> 2;
	f4 = -f4;
	heapFloat[(r3)] = f4;
	r3 = heap32[(r2)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+11)];
	heap32[(g0)] = r1;
	__FUNCTION_TABLE__[(r3)>>2](i7);
	f5 = heapFloat[(r2+4)];
	f6 = heapFloat[(r2+3)];
	f7 = heapFloat[(r2+5)];
	f5 = f1*f5;
	f6 = f0*f6;
	f7 = f2*f7;
	f9 = heapFloat[(r4+1)];
	f5 = f5*f3;
	f10 = heapFloat[(fp+-8)];
	f6 = f6*f3;
	f11 = heapFloat[(r4+2)];
	f3 = f7*f3;
	f5 = f9+f5;
	f7 = f1*f_g0;
	f6 = f10+f6;
	f9 = f0*f_g0;
	f5 = f5-f7;
	f6 = f6-f9;
	f3 = f11+f3;
	f4 = f2*f_g0;
	f3 = f3-f4;
	f0 = f0*f6;
	f1 = f1*f5;
	f0 = f0+f1;
	f1 = f2*f3;
	f0 = f0+f1;
if(!(f0 <=f8)) //_LBB427_8
{
	heapFloat[(r0)] = f6;
	heapFloat[(r0+1)] = f5;
	heapFloat[(r0+2)] = f3;
	heap32[(r0+3)] = 0;
}
	return;
}