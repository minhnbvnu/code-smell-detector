function $notificationProvider(){function e(e,n,r){function o(n,r){function i(){r=angular.extend({focusWindowOnClick:!0},t.options||{},r);try{a.baseNotification=new e.Notification(n,r)}catch(e){return}r.delay&&setTimeout(angular.bind(a,a.close),r.delay),r.focusWindowOnClick&&a.$on("click",function(){e.focus()}),a._events.forEach(function(e){a.$on.apply(a,e)}),a._events=[]}if(!e.Notification)return!1;r=r||{};var a=this;if(this._events=[],"granted"===e.Notification.permission)return i();"denied"!==e.Notification.permission&&o.requestPermission().then(i)}function i(e,t){return new o(e,t)}return o.prototype.$on=function(e,t){function r(){var e=arguments;n.$apply(function(){t.apply(o,e)})}var o=this;return this.baseNotification?(this.baseNotification.addEventListener(e,r),function(){this.baseNotification.removeListener(event,r)}):this._events.push([e,t])},o.prototype.close=function(){this.baseNotification&&this.baseNotification.close()},o.isSupported=!!e.Notification,o.getPermission=function(){return e.Notification?e.Notification.permission:void 0},o.requestPermission=function(){return r(function(t,n){if(!e.Notification)return n();e.Notification.requestPermission(function(n){e.Notification.permission=e.Notification.permission||n,t(e.Notification.permission)})})},i.isSupported=o.isSupported,i.getPermission=o.getPermission,i.requestPermission=o.requestPermission,i}var t=this;this.$get=["$window","$rootScope","$q",e],this.setOptions=function(e){this.options=e}}