function mZ(n){let{inputs:t,backend:e,attrs:i}=n,{equation:r}=i,o=t,{allDims:s,summedDims:a,idDims:l}=F.decodeEinsumEquation(r,o.length);F.checkEinsumDimSizes(s.length,l,o);let{path:c,steps:u}=F.getEinsumComputePath(a,l),h=u.length,p=null,d=s.length,f=[];for(let m=0;m<h;++m){for(let x of u[m]){let{permutationIndices:g,expandDims:v}=F.getEinsumPermutation(d,l[x]),b;F.isIdentityPermutation(g)?b=o[x]:(b=Pe({inputs:{x:o[x]},backend:e,attrs:{perm:g}}),f.push(b));let y=b.shape.slice();for(let _=0;_<v.length;++_)y.splice(v[_],0,1);R.arraysEqual(b.shape,y)||(b=Et({inputs:{x:b},backend:e,attrs:{shape:y}}),f.push(b)),p===null?p=b:(p=bp({inputs:{a:b,b:p},backend:e}),f.push(p))}m<h-1&&(c[m]>=0&&(p=ha({inputs:{x:p},backend:e,attrs:{axis:c[m]-(s.length-d),keepDims:!1}}),f.push(p)),d--)}for(let m of f)m!==p&&e.disposeIntermediateTensorInfo(m);return p}