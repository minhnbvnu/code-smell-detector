function _ZNK14btCapsuleShape21calculateLocalInertiaEfR9btVector3(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
var __label__ = 0;
	i7 = sp + -16;var g0 = i7>>2; // save stack
	r0 = heap32[(fp)];
	r1 = r0 >> 2;
	r1 = heap32[(r1+13)];
	r2 = (r1 + 2)|0;
	r2 = (r2 % 3)|0;
	r0 = (r0 + 28)|0;
	r2 = r2 << 2;
	r2 = (r0 + r2)|0;
	r2 = r2 >> 2;
	f0 = heapFloat[(r2)];
	r2 = sp + -16;
	r3 = r2 >> 2;
	heapFloat[(fp+-4)] = f0;
	r1 = r1 << 2;
	heapFloat[(r3+1)] = f0;
	r2 = (r2 + r1)|0;
	r0 = (r0 + r1)|0;
	heapFloat[(r3+2)] = f0;
	r1 = r2 >> 2;
	heap32[(r3+3)] = 0;
	r0 = r0 >> 2;
	f0 = heapFloat[(r1)];
	f1 = heapFloat[(r0)];
	f0 = f0+f1;
	heapFloat[(r1)] = f0;
	f0 =      0.039999999105930328;
	f1 = heapFloat[(r3+1)];
	f2 = heapFloat[(r3+2)];
	f3 = heapFloat[(fp+-4)];
	f1 = f1+f0;
	f2 = f2+f0;
	f0 = f3+f0;
	f1 = f1+f1;
	f2 = f2+f2;
	f0 = f0+f0;
	f1 = f1*f1;
	f2 = f2*f2;
	f3 = heapFloat[(fp+1)];
	f4 =      0.083333328366279602;
	f0 = f0*f0;
	r0 = heap32[(fp+2)];
	f5 = f1+f2;
	f3 = f3*f4;
	f2 = f0+f2;
	r0 = r0 >> 2;
	f4 = f5*f3;
	f0 = f0+f1;
	f1 = f2*f3;
	heapFloat[(r0)] = f4;
	f0 = f0*f3;
	heapFloat[(r0+1)] = f1;
	heapFloat[(r0+2)] = f0;
	return;
}