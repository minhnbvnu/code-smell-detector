function setupFailFastTest() {
  const oldTest = global.test;

  /** Fail-fast test */
  const test = (() => {
    let _test;

    const _wrappedFn = async fn => {
      if (!_test.error) {
        return fn().catch(e => {
          // we print error here because those errors generated by `expect` do not have stacktrace
          // which won't get printed correctly by jest runner
          if (e.stack !== 'Error') {
            console.error(e.stack);
          } else {
            console.error(e);
          }
          _test.error = new Error('Previous test case has failed');
          return Promise.reject(new Error('Test case failed'));
        });
      }
      throw _test.error;
    };

    _test = (name, fn) => oldTest(name, _wrappedFn.bind(undefined, fn));
    _test.skip = (name, fn) => oldTest.skip(name, _wrappedFn.bind(undefined, fn));
    _test.only = (name, fn) => oldTest.only(name, _wrappedFn.bind(undefined, fn));

    _test.error = null;

    return _test;
  })();

  global.test = test;
}