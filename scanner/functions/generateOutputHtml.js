function generateOutputHtml(content, pageName, settings) {
  var linkSrc = settings.clickable_link || '';
  var responsiveJs = '';
  var containerId = nameSpace + makeDocumentSlug(pageName) + '-box';
  var altTextId = containerId + '-img-desc';
  var textForFile, html, js, css, commentBlock;
  var htmlFileDestinationFolder, htmlFileDestination;
  var containerClasses = 'ai2html';

  // accessibility features
  var ariaAttrs = '';
  if (settings.aria_role) {
    ariaAttrs += ' role="' + settings.aria_role + '"';
  }
  if (settings.alt_text) {
    ariaAttrs += ' aria-describedby="' + altTextId + '"';
  }

  progressBar.setTitle('Writing HTML output...');

  if (isTrue(settings.include_resizer_script)) {
    responsiveJs  = getResizerScript(containerId);
    containerClasses += ' ai2html-responsive';
  }

  // comments
  commentBlock = '<!-- Generated by ai2html v' + scriptVersion + ' - ' +
    getDateTimeStamp() + ' -->\r' + '<!-- ai file: ' + doc.name + ' -->\r';

  if (settings.preview_slug) {
    commentBlock += '<!-- preview: ' + settings.preview_slug + ' -->\r';
  }
  if (settings.scoop_slug_from_config_yml) {
    commentBlock += '<!-- scoop: ' + settings.scoop_slug_from_config_yml + ' -->\r';
  }

  // HTML
  html = '<div id="' + containerId + '" class="' + containerClasses + '"' + ariaAttrs + '>\r';

  if (settings.alt_text) {
    html += '<div class="' + nameSpace + 'aiAltText" id="' + altTextId + '">' +
      encodeHtmlEntities(settings.alt_text) + '</div>';
  }
  if (linkSrc) {
    // optional link around content
    html += '\t<a class="' + nameSpace + 'ai2htmlLink" href="' + linkSrc + '">\r';
  }
  html += content.html;
  if (linkSrc) {
    html += '\t</a>\r';
  }
  html += '\r</div>\r';

  // CSS
  css = '<style media="screen,print">\r' +
    generatePageCss(containerId, settings) +
    content.css +
    '\r</style>\r';

  // JS
  js = content.js + responsiveJs;

  textForFile =  '\r' + commentBlock + css + '\r' + html + '\r' + js +
     '<!-- End ai2html' + ' - ' + getDateTimeStamp() + ' -->\r';

  textForFile = applyTemplate(textForFile, settings);
  htmlFileDestinationFolder = docPath + settings.html_output_path;
  checkForOutputFolder(htmlFileDestinationFolder, 'html_output_path');
  htmlFileDestination = htmlFileDestinationFolder + pageName + settings.html_output_extension;

  // 'index' is assigned upstream now (where applicable)
  // if (settings.output == 'one-file' && settings.project_type == 'ai2html') {
  //   htmlFileDestination = htmlFileDestinationFolder + 'index' + settings.html_output_extension;
  // }

  // write file
  saveTextFile(htmlFileDestination, textForFile);

  // process local preview template if appropriate
  if (settings.local_preview_template !== '') {
    // TODO: may have missed a condition, need to compare with original version
    var previewFileDestination = htmlFileDestinationFolder + pageName + '.preview.html';
    outputLocalPreviewPage(textForFile, previewFileDestination, settings);
  }
}