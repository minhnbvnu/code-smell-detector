function _qsort($base,$nel,$width,$cmp) {
 $base = $base|0;
 $nel = $nel|0;
 $width = $width|0;
 $cmp = $cmp|0;
 var $$ = 0, $$0$be$i = 0, $$0$be$i19 = 0, $$0$i44 = 0, $$01$be$i = 0, $$01$be$i18 = 0, $$012$i = 0, $$012$i15 = 0, $$02$i$i = 0, $$02$i3$i = 0, $$02$us$i = 0, $$02$us$i30 = 0, $$03$i = 0, $$03$i14 = 0, $$66 = 0, $$67 = 0, $$lcssa = 0, $$lcssa102 = 0, $$lcssa70 = 0, $$lcssa71 = 0;
 var $$pre = 0, $$pre$i = 0, $$pre$i21 = 0, $$pre6$i = 0, $$pre6$i26 = 0, $$sum = 0, $$sum$i = 0, $$sum$i17 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $4$phi = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ar$i = 0;
 var $exitcond$i = 0, $exitcond$i29 = 0, $head$0$lcssa = 0, $head$076 = 0, $head$174 = 0, $i$0 = 0, $i$0$lcssa$i = 0, $i$0$lcssa$i23 = 0, $i$01$us$i = 0, $i$01$us$i28 = 0, $i$04$i = 0, $i$04$i13 = 0, $lp = 0, $nTrailingZeros$03$i$i = 0, $nTrailingZeros$03$i2$i = 0, $nTrailingZeros$03$i2$i$lcssa = 0, $or$cond = 0, $or$cond68 = 0, $or$cond6873 = 0, $or$cond72 = 0;
 var $pshift$0$lcssa = 0, $pshift$077 = 0, $pshift$1 = 0, $pshift$275 = 0, $sum = 0, $sum$i = 0, $sum$i16 = 0, $tmp$i25 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 688|0;
 $tmp$i25 = sp + 424|0;
 $ar$i = sp + 192|0;
 $lp = sp;
 $0 = Math_imul($width, $nel)|0;
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 }
 $$sum = (($0) - ($width))|0;
 $2 = ((($lp)) + 4|0);
 HEAP32[$2>>2] = $width;
 HEAP32[$lp>>2] = $width;
 $4 = $width;$6 = $width;$i$0 = 2;
 while(1) {
  $3 = (($4) + ($width))|0;
  $5 = (($3) + ($6))|0;
  $7 = (($lp) + ($i$0<<2)|0);
  HEAP32[$7>>2] = $5;
  $8 = ($5>>>0)<($0>>>0);
  $9 = (($i$0) + 1)|0;
  if ($8) {
   $4$phi = $6;$6 = $5;$i$0 = $9;$4 = $4$phi;
  } else {
   break;
  }
 }
 $10 = (0 - ($width))|0;
 $11 = (($base) + ($$sum)|0);
 $12 = ($$sum|0)>(0);
 if ($12) {
  $13 = ($width|0)==(0);
  $14 = $11;
  $16 = 1;$51 = 0;$head$076 = $base;$pshift$077 = 1;
  while(1) {
   $15 = $16 & 3;
   $17 = ($15|0)==(3);
   do {
    if ($17) {
     HEAP32[$ar$i>>2] = $head$076;
     $18 = ($pshift$077|0)>(1);
     L13: do {
      if ($18) {
       $$012$i = $pshift$077;$$03$i = $head$076;$24 = $head$076;$i$04$i = 1;
       while(1) {
        $19 = (($$03$i) + ($10)|0);
        $20 = (($$012$i) + -2)|0;
        $21 = (($lp) + ($20<<2)|0);
        $22 = HEAP32[$21>>2]|0;
        $sum$i = (($22) + ($width))|0;
        $$sum$i = (0 - ($sum$i))|0;
        $23 = (($$03$i) + ($$sum$i)|0);
        $25 = (FUNCTION_TABLE_iii[$cmp & 15]($24,$23)|0);
        $26 = ($25|0)>(-1);
        if ($26) {
         $27 = (FUNCTION_TABLE_iii[$cmp & 15]($24,$19)|0);
         $28 = ($27|0)>(-1);
         if ($28) {
          $i$0$lcssa$i = $i$04$i;
          break;
         }
        }
        $29 = (FUNCTION_TABLE_iii[$cmp & 15]($23,$19)|0);
        $30 = ($29|0)>(-1);
        $31 = (($i$04$i) + 1)|0;
        $32 = (($ar$i) + ($i$04$i<<2)|0);
        if ($30) {
         HEAP32[$32>>2] = $23;
         $33 = (($$012$i) + -1)|0;
         $$0$be$i = $23;$$01$be$i = $33;
        } else {
         HEAP32[$32>>2] = $19;
         $$0$be$i = $19;$$01$be$i = $20;
        }
        $34 = ($$01$be$i|0)>(1);
        if (!($34)) {
         $i$0$lcssa$i = $31;
         break;
        }
        $$pre$i = HEAP32[$ar$i>>2]|0;
        $$012$i = $$01$be$i;$$03$i = $$0$be$i;$24 = $$pre$i;$i$04$i = $31;
       }
       $35 = ($i$0$lcssa$i|0)<(2);
       if (!($35)) {
        $36 = (($ar$i) + ($i$0$lcssa$i<<2)|0);
        HEAP32[$36>>2] = $tmp$i25;
        if (!($13)) {
         $$02$us$i = $width;$48 = $tmp$i25;
         while(1) {
          $46 = ($$02$us$i>>>0)>(256);
          $38 = $46 ? 256 : $$02$us$i;
          $47 = HEAP32[$ar$i>>2]|0;
          _memcpy(($48|0),($47|0),($38|0))|0;
          $44 = $47;$i$01$us$i = 0;
          while(1) {
           $40 = (($ar$i) + ($i$01$us$i<<2)|0);
           $41 = (($i$01$us$i) + 1)|0;
           $42 = (($ar$i) + ($41<<2)|0);
           $43 = HEAP32[$42>>2]|0;
           _memcpy(($44|0),($43|0),($38|0))|0;
           $45 = (($44) + ($38)|0);
           HEAP32[$40>>2] = $45;
           $exitcond$i = ($41|0)==($i$0$lcssa$i|0);
           if ($exitcond$i) {
            break;
           } else {
            $44 = $43;$i$01$us$i = $41;
           }
          }
          $37 = ($$02$us$i|0)==($38|0);
          if ($37) {
           break L13;
          }
          $39 = (($$02$us$i) - ($38))|0;
          $$pre6$i = HEAP32[$36>>2]|0;
          $$02$us$i = $39;$48 = $$pre6$i;
         }
        }
       }
      } else {
      }
     } while(0);
     $49 = $16 >>> 2;
     $50 = $51 << 30;
     $52 = $49 | $50;
     $53 = $51 >>> 2;
     $54 = (($pshift$077) + 2)|0;
     $105 = $52;$168 = $53;$pshift$1 = $54;
    } else {
     $55 = (($pshift$077) + -1)|0;
     $56 = (($lp) + ($55<<2)|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = $head$076;
     $59 = (($14) - ($58))|0;
     $60 = ($57>>>0)<($59>>>0);
     if ($60) {
      HEAP32[$ar$i>>2] = $head$076;
      $61 = ($pshift$077|0)>(1);
      L38: do {
       if ($61) {
        $$012$i15 = $pshift$077;$$03$i14 = $head$076;$67 = $head$076;$i$04$i13 = 1;
        while(1) {
         $62 = (($$03$i14) + ($10)|0);
         $63 = (($$012$i15) + -2)|0;
         $64 = (($lp) + ($63<<2)|0);
         $65 = HEAP32[$64>>2]|0;
         $sum$i16 = (($65) + ($width))|0;
         $$sum$i17 = (0 - ($sum$i16))|0;
         $66 = (($$03$i14) + ($$sum$i17)|0);
         $68 = (FUNCTION_TABLE_iii[$cmp & 15]($67,$66)|0);
         $69 = ($68|0)>(-1);
         if ($69) {
          $70 = (FUNCTION_TABLE_iii[$cmp & 15]($67,$62)|0);
          $71 = ($70|0)>(-1);
          if ($71) {
           $i$0$lcssa$i23 = $i$04$i13;
           break;
          }
         }
         $72 = (FUNCTION_TABLE_iii[$cmp & 15]($66,$62)|0);
         $73 = ($72|0)>(-1);
         $74 = (($i$04$i13) + 1)|0;
         $75 = (($ar$i) + ($i$04$i13<<2)|0);
         if ($73) {
          HEAP32[$75>>2] = $66;
          $76 = (($$012$i15) + -1)|0;
          $$0$be$i19 = $66;$$01$be$i18 = $76;
         } else {
          HEAP32[$75>>2] = $62;
          $$0$be$i19 = $62;$$01$be$i18 = $63;
         }
         $77 = ($$01$be$i18|0)>(1);
         if (!($77)) {
          $i$0$lcssa$i23 = $74;
          break;
         }
         $$pre$i21 = HEAP32[$ar$i>>2]|0;
         $$012$i15 = $$01$be$i18;$$03$i14 = $$0$be$i19;$67 = $$pre$i21;$i$04$i13 = $74;
        }
        $78 = ($i$0$lcssa$i23|0)<(2);
        if (!($78)) {
         $79 = (($ar$i) + ($i$0$lcssa$i23<<2)|0);
         HEAP32[$79>>2] = $tmp$i25;
         if (!($13)) {
          $$02$us$i30 = $width;$91 = $tmp$i25;
          while(1) {
           $89 = ($$02$us$i30>>>0)>(256);
           $81 = $89 ? 256 : $$02$us$i30;
           $90 = HEAP32[$ar$i>>2]|0;
           _memcpy(($91|0),($90|0),($81|0))|0;
           $87 = $90;$i$01$us$i28 = 0;
           while(1) {
            $83 = (($ar$i) + ($i$01$us$i28<<2)|0);
            $84 = (($i$01$us$i28) + 1)|0;
            $85 = (($ar$i) + ($84<<2)|0);
            $86 = HEAP32[$85>>2]|0;
            _memcpy(($87|0),($86|0),($81|0))|0;
            $88 = (($87) + ($81)|0);
            HEAP32[$83>>2] = $88;
            $exitcond$i29 = ($84|0)==($i$0$lcssa$i23|0);
            if ($exitcond$i29) {
             break;
            } else {
             $87 = $86;$i$01$us$i28 = $84;
            }
           }
           $80 = ($$02$us$i30|0)==($81|0);
           if ($80) {
            break L38;
           }
           $82 = (($$02$us$i30) - ($81))|0;
           $$pre6$i26 = HEAP32[$79>>2]|0;
           $$02$us$i30 = $82;$91 = $$pre6$i26;
          }
         }
        }
       } else {
       }
      } while(0);
     } else {
      _trinkle($head$076,$width,$cmp,$16,$51,$pshift$077,0,$lp);
     }
     $92 = ($pshift$077|0)==(1);
     if ($92) {
      $93 = $51 << 1;
      $94 = $16 >>> 31;
      $95 = $94 | $93;
      $96 = $16 << 1;
      $105 = $96;$168 = $95;$pshift$1 = 0;
      break;
     } else {
      $97 = ($55>>>0)>(31);
      $98 = (($pshift$077) + -33)|0;
      $$ = $97 ? 0 : $16;
      $$66 = $97 ? $16 : $51;
      $$67 = $97 ? $98 : $55;
      $99 = $$66 << $$67;
      $100 = (32 - ($$67))|0;
      $101 = $$ >>> $100;
      $102 = $101 | $99;
      $103 = $$ << $$67;
      $105 = $103;$168 = $102;$pshift$1 = 1;
      break;
     }
    }
   } while(0);
   $104 = $105 | 1;
   $106 = (($head$076) + ($width)|0);
   $107 = ($106>>>0)<($11>>>0);
   if ($107) {
    $16 = $104;$51 = $168;$head$076 = $106;$pshift$077 = $pshift$1;
   } else {
    $$lcssa70 = $168;$$lcssa71 = $104;$head$0$lcssa = $106;$pshift$0$lcssa = $pshift$1;
    break;
   }
  }
 } else {
  $$lcssa70 = 0;$$lcssa71 = 1;$head$0$lcssa = $base;$pshift$0$lcssa = 1;
 }
 _trinkle($head$0$lcssa,$width,$cmp,$$lcssa71,$$lcssa70,$pshift$0$lcssa,0,$lp);
 $108 = ($pshift$0$lcssa|0)==(1);
 $109 = ($$lcssa71|0)==(1);
 $or$cond72 = $109 & $108;
 $110 = ($$lcssa70|0)==(0);
 $or$cond6873 = $110 & $or$cond72;
 if ($or$cond6873) {
  STACKTOP = sp;return;
 } else {
  $113 = $$lcssa71;$122 = $$lcssa70;$head$174 = $head$0$lcssa;$pshift$275 = $pshift$0$lcssa;
 }
 while(1) {
  $111 = ($pshift$275|0)<(2);
  if (!($111)) {
   $136 = $122 << 2;
   $137 = $113 >>> 30;
   $138 = $137 | $136;
   $139 = (($pshift$275) + -2)|0;
   $140 = $113 << 1;
   $141 = $140 & 2147483646;
   $142 = $137 << 31;
   $143 = $141 | $142;
   $144 = $143 ^ 3;
   $145 = $138 >>> 1;
   $146 = (($lp) + ($139<<2)|0);
   $147 = HEAP32[$146>>2]|0;
   $sum = (($147) + ($width))|0;
   $$sum2 = (0 - ($sum))|0;
   $148 = (($head$174) + ($$sum2)|0);
   $149 = (($pshift$275) + -1)|0;
   _trinkle($148,$width,$cmp,$144,$145,$149,1,$lp);
   $150 = $145 << 1;
   $151 = $137 & 1;
   $152 = $150 | $151;
   $153 = $144 << 1;
   $154 = $153 | 1;
   $155 = (($head$174) + ($10)|0);
   _trinkle($155,$width,$cmp,$154,$152,$139,1,$lp);
   $113 = $154;$122 = $152;$head$174 = $155;$pshift$275 = $139;
   continue;
  }
  $112 = (($113) + -1)|0;
  $114 = ($112|0)==(0);
  do {
   if ($114) {
    $135 = 32;
    label = 56;
   } else {
    $115 = $112 & 1;
    $116 = ($115|0)==(0);
    if ($116) {
     $$02$i$i = $112;$nTrailingZeros$03$i$i = 0;
     while(1) {
      $117 = (($nTrailingZeros$03$i$i) + 1)|0;
      $118 = $$02$i$i >>> 1;
      $119 = $118 & 1;
      $120 = ($119|0)==(0);
      if ($120) {
       $$02$i$i = $118;$nTrailingZeros$03$i$i = $117;
      } else {
       $$lcssa = $117;
       break;
      }
     }
     $121 = ($$lcssa|0)==(0);
     if ($121) {
      label = 51;
     } else {
      $132 = $$lcssa;
     }
    } else {
     label = 51;
    }
    if ((label|0) == 51) {
     label = 0;
     $123 = ($122|0)==(0);
     if ($123) {
      $135 = 64;
      label = 56;
      break;
     }
     $124 = $122 & 1;
     $125 = ($124|0)==(0);
     if ($125) {
      $$02$i3$i = $122;$nTrailingZeros$03$i2$i = 0;
     } else {
      $$0$i44 = 0;$157 = $113;$160 = $122;$164 = 0;
      break;
     }
     while(1) {
      $126 = (($nTrailingZeros$03$i2$i) + 1)|0;
      $127 = $$02$i3$i >>> 1;
      $128 = $127 & 1;
      $129 = ($128|0)==(0);
      if ($129) {
       $$02$i3$i = $127;$nTrailingZeros$03$i2$i = $126;
      } else {
       $$lcssa102 = $126;$nTrailingZeros$03$i2$i$lcssa = $nTrailingZeros$03$i2$i;
       break;
      }
     }
     $130 = (($nTrailingZeros$03$i2$i$lcssa) + 33)|0;
     $131 = ($$lcssa102|0)==(0);
     if ($131) {
      $$0$i44 = 0;$157 = $113;$160 = $122;$164 = 0;
      break;
     } else {
      $132 = $130;
     }
    }
    $133 = ($132>>>0)>(31);
    if ($133) {
     $135 = $132;
     label = 56;
    } else {
     $$0$i44 = $132;$157 = $113;$160 = $122;$164 = $132;
    }
   }
  } while(0);
  if ((label|0) == 56) {
   label = 0;
   $134 = (($135) + -32)|0;
   $$0$i44 = $134;$157 = $122;$160 = 0;$164 = $135;
  }
  $156 = $157 >>> $$0$i44;
  $158 = (32 - ($$0$i44))|0;
  $159 = $160 << $158;
  $161 = $159 | $156;
  $162 = $160 >>> $$0$i44;
  $163 = (($164) + ($pshift$275))|0;
  $$pre = (($head$174) + ($10)|0);
  $165 = ($163|0)==(1);
  $166 = ($161|0)==(1);
  $or$cond = $166 & $165;
  $167 = ($162|0)==(0);
  $or$cond68 = $167 & $or$cond;
  if ($or$cond68) {
   break;
  } else {
   $113 = $161;$122 = $162;$head$174 = $$pre;$pshift$275 = $163;
  }
 }
 STACKTOP = sp;return;
}