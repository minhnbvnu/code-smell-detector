function aZ(n){let{inputs:t,backend:e,attrs:i}=n,{x:r}=t,{axis:o,exclusive:s,reverse:a}=i,l=r.shape.length,c=F.getAxesPermutation([o],l),u=r;c!=null&&(u=Pe({inputs:{x:r},backend:e,attrs:{perm:c}}));let h=F.getInnerMostAxes(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${o}`);let p=u.shape[h],d=Be({inputs:{x:u},backend:e});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){let m=new wp(u.shape,!1,a),x=m.getCustomSetupFunc(f),g=d;d=e.runWebGLProgram(m,[d],d.dtype,x),e.disposeIntermediateTensorInfo(g)}if(s){let f=new wp(u.shape,s,a),m=d;d=e.runWebGLProgram(f,[d],d.dtype),e.disposeIntermediateTensorInfo(m)}if(c!=null){let f=F.getUndoAxesPermutation(c),m=Pe({inputs:{x:d},backend:e,attrs:{perm:f}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(u),m}return d}