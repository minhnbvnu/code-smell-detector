function _ZN15DemoApplication20localCreateRigidBodyEfRK11btTransformP16btCollisionShape(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var r7;
	var f0;
	var f1;
var __label__ = 0;
	i7 = sp + -168;var g0 = i7>>2; // save stack
	r0 = heap32[(fp+3)];
if(!(r0 ==0)) //_LBB19_3
{
	r1 = r0 >> 2;
	r1 = heap32[(r1+1)];
if(!(r1 !=35)) //_LBB19_3
{
	r0 = _2E_str5;
	r1 = _2E_str6;
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r1;
	heap32[(g0+2)] = 1297;
	_assert(i7);
}
}
	f0 = heapFloat[(fp+1)];
	r1 = sp + -152;
	r2 = r1 >> 2;
	heap32[(fp+-38)] = 0;
	heap32[(r2+1)] = 0;
	heap32[(r2+2)] = 0;
	f1 =                         0;
	heap32[(r2+3)] = 0;
if(!(f0 ==f1)) //_LBB19_5
{
	r3 = r0 >> 2;
	r3 = heap32[(r3)];
	r3 = r3 >> 2;
	r3 = heap32[(r3+8)];
	heap32[(g0)] = r0;
	heapFloat[(g0+1)] = f0;
	heap32[(g0+2)] = r1;
	__FUNCTION_TABLE__[(r3)>>2](i7);
}
	r1 = heap32[(fp)];
	r3 = heap32[(fp+2)];
	r4 = gNumAlignedAllocs;
	r4 = r4 >> 2;
	r5 = heap32[(r4)];
	r5 = (r5 + 1)|0;
	heap32[(r4)] = r5;
	heap32[(g0)] = 627;
	malloc(i7);
	r4 = r_g0;
	if(r4 !=0) //_LBB19_7
{
	r5 = 0;
	r6 = (r4 + 4)|0;
	r5 = (r5 - r6)|0;
	r5 = r5 & 15;
	r5 = (r4 + r5)|0;
	r6 = (r5 + 4)|0;
	r5 = r5 >> 2;
	heap32[(r5)] = r4;
	r4 = r6;
}
	r5 = r4 >> 2;
	heap32[(r5+41)] = 1065353216;
	heap32[(r5+42)] = 1065353216;
	heap32[(r5+43)] = 1065353216;
	heap32[(r5+44)] = 0;
	heap32[(r5+45)] = 0;
	heap32[(r5+46)] = 1566444395;
	heap32[(r5+47)] = 0;
	heap32[(r5+48)] = 0;
	heap32[(r5+49)] = 0;
	heap32[(r5+50)] = 0;
	heap32[(r5+51)] = 1;
	heap32[(r5+52)] = -1;
	heap32[(r5+53)] = -1;
	heap32[(r5+54)] = 1;
	heap32[(r5+55)] = 0;
	heap32[(r5+56)] = 1056964608;
	heap32[(r5+57)] = 0;
	heap32[(r5+58)] = 1;
	heap32[(r5+59)] = 0;
	heap32[(r5+60)] = 1065353216;
	heap32[(r5+61)] = 0;
	heap32[(r5+62)] = 0;
	heap32[(r5+63)] = 0;
	heap32[(r5+1)] = 1065353216;
	heap32[(r5+2)] = 0;
	heap32[(r5+3)] = 0;
	heap32[(r5+4)] = 0;
	heap32[(r5+5)] = 0;
	heap32[(r5+6)] = 1065353216;
	heap32[(r5+7)] = 0;
	heap32[(r5+8)] = 0;
	heap32[(r5+9)] = 0;
	heap32[(r5+10)] = 0;
	heap32[(r5+11)] = 1065353216;
	heap32[(r5+12)] = 0;
	heap32[(r5+13)] = 0;
	heap32[(r5+14)] = 0;
	r6 = _ZTV11btRigidBody;
	heap32[(r5+15)] = 0;
	r6 = (r6 + 8)|0;
	heap32[(r5+16)] = 0;
	r7 = 1;
	heap32[(r5)] = r6;
	heap8[r4+492] = r7;
	heap32[(r5+122)] = 0;
	heap32[(r5+120)] = 0;
	r6 = sp + -136;
	heap32[(r5+121)] = 0;
	r7 = r6 >> 2;
	heapFloat[(fp+-34)] = f0;
	heap32[(r7+1)] = 0;
	heap32[(r7+18)] = r0;
	heap32[(r7+19)] = heap32[(fp+-38)];
	heap32[(r7+20)] = heap32[(r2+1)];
	heap32[(r7+21)] = heap32[(r2+2)];
	heap32[(r7+22)] = heap32[(r2+3)];
	heap32[(r7+23)] = 0;
	heap32[(r7+24)] = 0;
	heap32[(r7+25)] = 1056964608;
	heap32[(r7+26)] = 0;
	heap32[(r7+27)] = 1061997773;
	r0 = 0;
	heap32[(r7+28)] = 1065353216;
	heap8[sp+-20] = r0;
	heap32[(r7+30)] = 1000593162;
	heap32[(r7+31)] = 1008981770;
	heap32[(r7+32)] = 1008981770;
	heap32[(r7+33)] = 1008981770;
	heap32[(r7+2)] = 1065353216;
	heap32[(r7+3)] = 0;
	heap32[(r7+4)] = 0;
	heap32[(r7+5)] = 0;
	heap32[(r7+6)] = 0;
	heap32[(r7+7)] = 1065353216;
	heap32[(r7+8)] = 0;
	heap32[(r7+9)] = 0;
	heap32[(r7+10)] = 0;
	heap32[(r7+11)] = 0;
	heap32[(r7+12)] = 1065353216;
	heap32[(r7+13)] = 0;
	heap32[(r7+14)] = 0;
	heap32[(r7+15)] = 0;
	heap32[(r7+16)] = 0;
	heap32[(r7+17)] = 0;
	heap32[(g0)] = r4;
	heap32[(g0+1)] = r6;
	_ZN11btRigidBody14setupRigidBodyERKNS_27btRigidBodyConstructionInfoE(i7);
	r0 = r3 >> 2;
	heap32[(r5+1)] = heap32[(r0)];
	heap32[(r5+2)] = heap32[(r0+1)];
	heap32[(r5+3)] = heap32[(r0+2)];
	heap32[(r5+4)] = heap32[(r0+3)];
	heap32[(r5+5)] = heap32[(r0+4)];
	heap32[(r5+6)] = heap32[(r0+5)];
	heap32[(r5+7)] = heap32[(r0+6)];
	heap32[(r5+8)] = heap32[(r0+7)];
	heap32[(r5+9)] = heap32[(r0+8)];
	heap32[(r5+10)] = heap32[(r0+9)];
	heap32[(r5+11)] = heap32[(r0+10)];
	heap32[(r5+12)] = heap32[(r0+11)];
	heap32[(r5+13)] = heap32[(r0+12)];
	heap32[(r5+14)] = heap32[(r0+13)];
	heap32[(r5+15)] = heap32[(r0+14)];
	r1 = r1 >> 2;
	heap32[(r5+16)] = heap32[(r0+15)];
	heap32[(r5+46)] = heap32[(r1+2)];
	r0 = heap32[(r1+1)];
	r1 = r0 >> 2;
	r1 = heap32[(r1)];
	r1 = r1 >> 2;
	r1 = heap32[(r1+20)];
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r4;
	__FUNCTION_TABLE__[(r1)>>2](i7);
	r_g0 = r4;
	return;
}