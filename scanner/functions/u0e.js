function u0e(e,t){let r=e;e=En(e),e=To(e);let{isIndeterminate:n=!1,isEmphasized:i=!1,autoFocus:a,children:l,...s}=e,{styleProps:u}=_t(s),c=O.useRef(null),d=Da(t,c),f=O.useContext(YK),{inputProps:h,isInvalid:p,isDisabled:m}=f?o0e({...e,value:e.value,isRequired:r.isRequired,validationState:r.validationState,isInvalid:r.isInvalid},f,c):HK(e,BR(e),c),{hoverProps:g,isHovered:b}=wr({isDisabled:m}),v=n?S.createElement(r0e,{UNSAFE_className:z(eo(Ir),"spectrum-Checkbox-partialCheckmark")}):S.createElement(Gve,{UNSAFE_className:z(eo(Ir),"spectrum-Checkbox-checkmark")});if(f){for(let y of["isSelected","defaultSelected","isEmphasized"])r[y]!=null&&console.warn(`${y} is unsupported on individual <Checkbox> elements within a <CheckboxGroup>. Please apply these props to the group instead.`);e.value==null&&console.warn("A <Checkbox> element within a <CheckboxGroup> requires a `value` property.")}return S.createElement("label",{...u,...g,ref:d,className:z(eo(Ir),"spectrum-Checkbox",{"is-checked":h.checked,"is-indeterminate":n,"spectrum-Checkbox--quiet":!i,"is-invalid":p,"is-disabled":m,"is-hovered":b},u.className)},S.createElement(Br,{focusRingClass:z(eo(Ir),"focus-ring"),autoFocus:a},S.createElement("input",{...h,ref:c,className:z(eo(Ir),"spectrum-Checkbox-input")})),S.createElement("span",{className:z(eo(Ir),"spectrum-Checkbox-box")},v),l&&S.createElement("span",{className:z(eo(Ir),"spectrum-Checkbox-label")},l))}