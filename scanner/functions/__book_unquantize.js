function __book_unquantize($b,$n,$sparsemap) {
 $b = $b|0;
 $n = $n|0;
 $sparsemap = $sparsemap|0;
 var $$$i = 0.0, $$$i6 = 0.0, $$0 = 0, $$lcssa = 0, $$lcssa53 = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0.0;
 var $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0, $118 = 0, $119 = 0, $12 = 0.0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0;
 var $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0, $89 = 0, $9 = 0.0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0.0, $97 = 0.0;
 var $98 = 0.0, $99 = 0.0, $acc$01$us$i = 0, $acc1$02$us$i = 0, $count$019 = 0, $count$1 = 0, $count$233 = 0, $count$3 = 0, $exitcond = 0, $fabsf = 0.0, $fabsf5 = 0.0, $fabsf5$us = 0.0, $fabsf5$us17 = 0.0, $i$03$us$i = 0, $indexdiv$013 = 0, $indexdiv$013$us = 0, $indexdiv$013$us14 = 0, $j$023 = 0, $j$135 = 0, $k$011 = 0;
 var $k$011$us = 0, $k$011$us16 = 0, $k$129 = 0, $last$0$$us = 0.0, $last$012 = 0.0, $last$012$us = 0.0, $last1$0$ = 0.0, $last1$030 = 0.0, $or$cond$us$i = 0, $switch = 0, $vals$0$us$be$i = 0, $vals$0$us$be$v$i = 0, $vals$0$us$i = 0, $vals$0$us$i$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($b)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $$off = (($1) + -1)|0;
 $switch = ($$off>>>0)<(2);
 if (!($switch)) {
  $$0 = 0;
  return ($$0|0);
 }
 $2 = ((($b)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 2097151;
 $5 = (+($4|0));
 $6 = $3 >>> 21;
 $7 = $6 & 1023;
 $8 = ($3|0)<(0);
 $9 = -$5;
 $$$i = $8 ? $9 : $5;
 $10 = (($7) + -788)|0;
 $11 = (+_ldexp($$$i,$10));
 $12 = $11;
 $13 = ((($b)) + 20|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $14 & 2097151;
 $16 = (+($15|0));
 $17 = $14 >>> 21;
 $18 = $17 & 1023;
 $19 = ($14|0)<(0);
 $20 = -$16;
 $$$i6 = $19 ? $20 : $16;
 $21 = (($18) + -788)|0;
 $22 = (+_ldexp($$$i6,$21));
 $23 = $22;
 $24 = HEAP32[$b>>2]|0;
 $25 = Math_imul($24, $n)|0;
 $26 = (_calloc($25,4)|0);
 if ((($1|0) == 1)) {
  $37 = ((($b)) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ($24|0)>(0);
  if (!($39)) {
   while(1) {
   }
  }
  $40 = (+($38|0));
  $41 = $40;
  $42 = (+($24|0));
  $43 = 1.0 / $42;
  $44 = $43;
  $45 = (+Math_pow((+$41),(+$44)));
  $46 = (+Math_floor((+$45)));
  $47 = (~~(($46)));
  $vals$0$us$i = $47;
  while(1) {
   $60 = (($vals$0$us$i) + 1)|0;
   $acc$01$us$i = 1;$acc1$02$us$i = 1;$i$03$us$i = 0;
   while(1) {
    $58 = Math_imul($acc$01$us$i, $vals$0$us$i)|0;
    $59 = Math_imul($acc1$02$us$i, $60)|0;
    $61 = (($i$03$us$i) + 1)|0;
    $exitcond = ($61|0)==($24|0);
    if ($exitcond) {
     $$lcssa = $58;$$lcssa53 = $59;
     break;
    } else {
     $acc$01$us$i = $58;$acc1$02$us$i = $59;$i$03$us$i = $61;
    }
   }
   $48 = ($$lcssa|0)<=($38|0);
   $49 = ($$lcssa53|0)>($38|0);
   $or$cond$us$i = $49 & $48;
   if ($or$cond$us$i) {
    $vals$0$us$i$lcssa = $vals$0$us$i;
    break;
   }
   $57 = ($$lcssa|0)>($38|0);
   $vals$0$us$be$v$i = $57 ? -1 : 1;
   $vals$0$us$be$i = (($vals$0$us$be$v$i) + ($vals$0$us$i))|0;
   $vals$0$us$i = $vals$0$us$be$i;
  }
  $50 = ($38|0)>(0);
  if (!($50)) {
   $$0 = $26;
   return ($$0|0);
  }
  $51 = ($sparsemap|0)==(0|0);
  $52 = ((($b)) + 8|0);
  $53 = ((($b)) + 32|0);
  $54 = $23;
  $55 = $12;
  $56 = ((($b)) + 28|0);
  $count$019 = 0;$j$023 = 0;
  while(1) {
   if ($51) {
    $66 = HEAP32[$53>>2]|0;
    $67 = HEAP32[$56>>2]|0;
    $68 = ($67|0)==(0);
    $69 = Math_imul($24, $count$019)|0;
    if ($68) {
     $indexdiv$013$us14 = 1;$k$011$us16 = 0;
     while(1) {
      $92 = (($j$023|0) / ($indexdiv$013$us14|0))&-1;
      $93 = (($92|0) % ($vals$0$us$i$lcssa|0))&-1;
      $94 = (($66) + ($93<<2)|0);
      $95 = HEAP32[$94>>2]|0;
      $96 = (+($95|0));
      $fabsf5$us17 = (+Math_abs((+$96)));
      $97 = $fabsf5$us17;
      $98 = $97 * $54;
      $99 = $55 + $98;
      $100 = $99;
      $101 = (($69) + ($k$011$us16))|0;
      $102 = (($26) + ($101<<2)|0);
      HEAPF32[$102>>2] = $100;
      $103 = Math_imul($indexdiv$013$us14, $vals$0$us$i$lcssa)|0;
      $104 = (($k$011$us16) + 1)|0;
      $105 = ($104|0)<($24|0);
      if ($105) {
       $indexdiv$013$us14 = $103;$k$011$us16 = $104;
      } else {
       label = 21;
       break;
      }
     }
    } else {
     $indexdiv$013 = 1;$k$011 = 0;$last$012 = 0.0;
     while(1) {
      $106 = (($j$023|0) / ($indexdiv$013|0))&-1;
      $107 = (($106|0) % ($vals$0$us$i$lcssa|0))&-1;
      $108 = (($66) + ($107<<2)|0);
      $109 = HEAP32[$108>>2]|0;
      $110 = (+($109|0));
      $fabsf5 = (+Math_abs((+$110)));
      $111 = $fabsf5;
      $112 = $111 * $54;
      $113 = $last$012;
      $114 = $113 + $55;
      $115 = $114 + $112;
      $116 = $115;
      $117 = (($69) + ($k$011))|0;
      $118 = (($26) + ($117<<2)|0);
      HEAPF32[$118>>2] = $116;
      $119 = Math_imul($indexdiv$013, $vals$0$us$i$lcssa)|0;
      $120 = (($k$011) + 1)|0;
      $121 = ($120|0)<($24|0);
      if ($121) {
       $indexdiv$013 = $119;$k$011 = $120;$last$012 = $116;
      } else {
       label = 21;
       break;
      }
     }
    }
   } else {
    $62 = HEAP32[$52>>2]|0;
    $63 = (($62) + ($j$023)|0);
    $64 = HEAP8[$63>>0]|0;
    $65 = ($64<<24>>24)==(0);
    if ($65) {
     $count$1 = $count$019;
    } else {
     $70 = HEAP32[$53>>2]|0;
     $71 = HEAP32[$56>>2]|0;
     $72 = ($71|0)==(0);
     $73 = (($sparsemap) + ($count$019<<2)|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = Math_imul($74, $24)|0;
     $indexdiv$013$us = 1;$k$011$us = 0;$last$012$us = 0.0;
     while(1) {
      $76 = (($j$023|0) / ($indexdiv$013$us|0))&-1;
      $77 = (($76|0) % ($vals$0$us$i$lcssa|0))&-1;
      $78 = (($70) + ($77<<2)|0);
      $79 = HEAP32[$78>>2]|0;
      $80 = (+($79|0));
      $fabsf5$us = (+Math_abs((+$80)));
      $81 = $fabsf5$us;
      $82 = $81 * $54;
      $83 = $last$012$us;
      $84 = $83 + $55;
      $85 = $84 + $82;
      $86 = $85;
      $last$0$$us = $72 ? $last$012$us : $86;
      $87 = (($75) + ($k$011$us))|0;
      $88 = (($26) + ($87<<2)|0);
      HEAPF32[$88>>2] = $86;
      $89 = Math_imul($indexdiv$013$us, $vals$0$us$i$lcssa)|0;
      $90 = (($k$011$us) + 1)|0;
      $91 = ($90|0)<($24|0);
      if ($91) {
       $indexdiv$013$us = $89;$k$011$us = $90;$last$012$us = $last$0$$us;
      } else {
       label = 21;
       break;
      }
     }
    }
   }
   if ((label|0) == 21) {
    label = 0;
    $122 = (($count$019) + 1)|0;
    $count$1 = $122;
   }
   $123 = (($j$023) + 1)|0;
   $124 = ($123|0)<($38|0);
   if ($124) {
    $count$019 = $count$1;$j$023 = $123;
   } else {
    $$0 = $26;
    break;
   }
  }
  return ($$0|0);
 } else if ((($1|0) == 2)) {
  $27 = ((($b)) + 4|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ($28|0)>(0);
  if (!($29)) {
   $$0 = $26;
   return ($$0|0);
  }
  $30 = ($sparsemap|0)!=(0|0);
  $31 = ((($b)) + 8|0);
  $32 = ((($b)) + 32|0);
  $33 = $23;
  $34 = $12;
  $35 = ((($b)) + 28|0);
  $36 = ($24|0)>(0);
  $count$233 = 0;$j$135 = 0;
  while(1) {
   if ($30) {
    $125 = HEAP32[$31>>2]|0;
    $126 = (($125) + ($j$135)|0);
    $127 = HEAP8[$126>>0]|0;
    $128 = ($127<<24>>24)==(0);
    if ($128) {
     $count$3 = $count$233;
    } else {
     label = 25;
    }
   } else {
    label = 25;
   }
   if ((label|0) == 25) {
    label = 0;
    if ($36) {
     $129 = HEAP32[$32>>2]|0;
     $130 = HEAP32[$35>>2]|0;
     $131 = ($130|0)==(0);
     $132 = (($sparsemap) + ($count$233<<2)|0);
     $133 = Math_imul($24, $j$135)|0;
     $134 = Math_imul($24, $count$233)|0;
     $k$129 = 0;$last1$030 = 0.0;
     while(1) {
      $135 = (($133) + ($k$129))|0;
      $136 = (($129) + ($135<<2)|0);
      $137 = HEAP32[$136>>2]|0;
      $138 = (+($137|0));
      $fabsf = (+Math_abs((+$138)));
      $139 = $fabsf;
      $140 = $139 * $33;
      $141 = $last1$030;
      $142 = $141 + $34;
      $143 = $142 + $140;
      $144 = $143;
      $last1$0$ = $131 ? $last1$030 : $144;
      if ($30) {
       $145 = HEAP32[$132>>2]|0;
       $146 = Math_imul($145, $24)|0;
       $147 = (($146) + ($k$129))|0;
       $148 = (($26) + ($147<<2)|0);
       HEAPF32[$148>>2] = $144;
      } else {
       $149 = (($134) + ($k$129))|0;
       $150 = (($26) + ($149<<2)|0);
       HEAPF32[$150>>2] = $144;
      }
      $151 = (($k$129) + 1)|0;
      $152 = ($151|0)<($24|0);
      if ($152) {
       $k$129 = $151;$last1$030 = $last1$0$;
      } else {
       break;
      }
     }
    }
    $153 = (($count$233) + 1)|0;
    $count$3 = $153;
   }
   $154 = (($j$135) + 1)|0;
   $155 = ($154|0)<($28|0);
   if ($155) {
    $count$233 = $count$3;$j$135 = $154;
   } else {
    $$0 = $26;
    break;
   }
  }
  return ($$0|0);
 } else {
  $$0 = $26;
  return ($$0|0);
 }
 return (0)|0;
}