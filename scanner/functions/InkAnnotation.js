function InkAnnotation(t){var r;_classCallCheck(this,InkAnnotation);(r=o.call(this,t)).data.annotationType=c.AnnotationType.INK;r.data.inkLists=[];var l=t.dict.getArray("InkList");if(!Array.isArray(l))return _possibleConstructorReturn(r);for(var u=t.xref,h=0,d=l.length;h<d;++h){r.data.inkLists.push([]);for(var g=0,y=l[h].length;g<y;g+=2)r.data.inkLists[h].push({x:u.fetchIfRef(l[h][g]),y:u.fetchIfRef(l[h][g+1])})}if(!r.appearance){var m,v=r.color?Array.from(r.color).map((function(t){return t/255})):[0,0,0],w=t.dict.get("CA"),_=r.borderStyle.width||1,k=2*_,S=[1/0,1/0,-1/0,-1/0],C=_createForOfIteratorHelper(r.data.inkLists);try{for(C.s();!(m=C.n()).done;){var x,O=_createForOfIteratorHelper(m.value);try{for(O.s();!(x=O.n()).done;){var T=x.value;S[0]=Math.min(S[0],T.x-k);S[1]=Math.min(S[1],T.y-k);S[2]=Math.max(S[2],T.x+k);S[3]=Math.max(S[3],T.y+k)}}catch(t){O.e(t)}finally{O.f()}}}catch(t){C.e(t)}finally{C.f()}c.Util.intersect(r.rectangle,S)||(r.rectangle=S);r._setDefaultAppearance({xref:t.xref,extra:"".concat(_," w"),strokeColor:v,strokeAlpha:w,pointsCallback:function pointsCallback(t,o){var c,l=_createForOfIteratorHelper(r.data.inkLists);try{for(l.s();!(c=l.n()).done;){for(var u=c.value,h=0,d=u.length;h<d;h++)t.push("".concat(u[h].x," ").concat(u[h].y," ").concat(0===h?"m":"l"));t.push("S")}}catch(t){l.e(t)}finally{l.f()}return[o[0].x,o[1].x,o[3].y,o[1].y]}})}return r}