function __vp_psy_init($p,$vi,$gi,$n,$rate) {
 $p = $p|0;
 $vi = $vi|0;
 $gi = $gi|0;
 $n = $n|0;
 $rate = $rate|0;
 var $$inv = 0, $$lcssa = 0, $$lcssa85 = 0, $$not = 0, $$not75 = 0, $$phi$trans$insert = 0, $$phi$trans$insert52 = 0, $$pre = 0, $$pre$phiZ2D = 0.0, $$pre51 = 0, $$pre53 = 0, $$pre54 = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0.0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0.0, $107 = 0, $108 = 0.0, $109 = 0.0, $11 = 0.0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0.0, $120 = 0.0, $121 = 0.0, $122 = 0.0;
 var $123 = 0.0, $124 = 0, $125 = 0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0, $13 = 0.0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0.0, $140 = 0.0;
 var $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0.0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0;
 var $16 = 0.0, $160 = 0.0, $161 = 0.0, $162 = 0.0, $163 = 0.0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0.0, $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0.0, $180 = 0.0, $181 = 0.0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0.0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0.0, $195 = 0.0;
 var $196 = 0, $197 = 0.0, $198 = 0, $199 = 0.0, $2 = 0.0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0;
 var $213 = 0.0, $214 = 0.0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0, $219 = 0, $22 = 0.0, $220 = 0.0, $221 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0, $225 = 0, $226 = 0.0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0.0, $230 = 0.0;
 var $231 = 0.0, $232 = 0.0, $233 = 0.0, $234 = 0.0, $235 = 0, $236 = 0, $237 = 0.0, $238 = 0.0, $239 = 0.0, $24 = 0.0, $240 = 0, $241 = 0.0, $242 = 0.0, $243 = 0.0, $244 = 0.0, $245 = 0.0, $246 = 0, $247 = 0, $248 = 0.0, $249 = 0.0;
 var $25 = 0.0, $250 = 0.0, $251 = 0, $252 = 0.0, $253 = 0.0, $254 = 0.0, $255 = 0.0, $256 = 0.0, $257 = 0, $258 = 0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0.0, $3 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0;
 var $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0, $4 = 0.0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0.0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0.0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0.0, $70 = 0.0;
 var $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0.0, $76 = 0, $77 = 0.0, $78 = 0.0, $79 = 0, $8 = 0.0, $80 = 0.0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0.0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $base$032 = 0.0, $brmerge = 0, $exitcond = 0, $exitcond46 = 0, $exitcond47 = 0, $exitcond48 = 0, $exitcond50 = 0, $halfoc$0 = 0.0, $halfoc$1 = 0.0;
 var $hi$024 = 0, $hi$1$lcssa = 0, $hi$120 = 0, $i$0$ph$ph74 = 0, $i$070 = 0, $i$070$lcssa = 0, $i$126 = 0, $i$212 = 0, $i$410 = 0, $j$0$ph$ph$lcssa = 0, $j$0$ph$ph73 = 0, $j$133 = 0, $j$328 = 0, $lo$025 = 0, $lo$1$lcssa = 0, $lo$115 = 0, $umax = 0, dest = 0, label = 0, sp = 0;
 var stop = 0;
 sp = STACKTOP;
 dest=$p; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = HEAP32[$gi>>2]|0;
 $1 = ((($p)) + 36|0);
 HEAP32[$1>>2] = $0;
 $2 = (+($0|0));
 $3 = $2 * 8.0;
 $4 = $3;
 $5 = (+Math_log((+$4)));
 $6 = $5 * 1.4426950408889634;
 $7 = (+_rint($6));
 $8 = $7 + -1.0;
 $9 = (~~(($8)));
 $10 = ((($p)) + 32|0);
 HEAP32[$10>>2] = $9;
 $11 = (+($rate|0));
 $12 = $11 * 0.25;
 $13 = $12;
 $14 = $13 * 0.5;
 $15 = (+($n|0));
 $16 = $14 / $15;
 $17 = (+Math_log((+$16)));
 $18 = $17 * 1.4426950216293335;
 $19 = $18 + -5.9657840728759766;
 $20 = (($9) + 1)|0;
 $21 = 1 << $20;
 $22 = (+($21|0));
 $23 = $22 * $19;
 $24 = (+($0|0));
 $25 = $23 - $24;
 $26 = (~~(($25)));
 $27 = ((($p)) + 28|0);
 HEAP32[$27>>2] = $26;
 $28 = (+($n|0));
 $29 = $28 + 0.25;
 $30 = $29 * $11;
 $31 = $30;
 $32 = $31 * 0.5;
 $33 = $32 / $15;
 $34 = (+Math_log((+$33)));
 $35 = $34 * 1.4426950216293335;
 $36 = $35 + -5.9657840728759766;
 $37 = $22 * $36;
 $38 = $37 + 0.5;
 $39 = (~~(($38)));
 $40 = (1 - ($26))|0;
 $41 = (($40) + ($39))|0;
 $42 = ((($p)) + 40|0);
 HEAP32[$42>>2] = $41;
 $43 = $n << 2;
 $44 = (_malloc($43)|0);
 $45 = ((($p)) + 16|0);
 HEAP32[$45>>2] = $44;
 $46 = (_malloc($43)|0);
 $47 = ((($p)) + 20|0);
 HEAP32[$47>>2] = $46;
 $48 = (_malloc($43)|0);
 $49 = ((($p)) + 24|0);
 HEAP32[$49>>2] = $48;
 $50 = ((($p)) + 4|0);
 HEAP32[$50>>2] = $vi;
 HEAP32[$p>>2] = $n;
 $51 = ((($p)) + 44|0);
 HEAP32[$51>>2] = $rate;
 $52 = ((($p)) + 48|0);
 HEAPF32[$52>>2] = 1.0;
 $53 = ($rate|0)<(26000);
 do {
  if ($53) {
   HEAPF32[$52>>2] = 0.0;
  } else {
   $54 = ($rate|0)<(38000);
   if ($54) {
    HEAPF32[$52>>2] = 0.93999999761581421;
    break;
   }
   $55 = ($rate|0)>(46000);
   if ($55) {
    HEAPF32[$52>>2] = 1.2749999761581421;
   }
  }
 } while(0);
 $56 = $15 * 2.0;
 $57 = (+($rate|0));
 $58 = ($n|0)>(0);
 $62 = $58;$i$0$ph$ph74 = 0;$j$0$ph$ph73 = 0;
 L9: while(1) {
  $$not75 = $62 ^ 1;
  $i$070 = $i$0$ph$ph74;
  while(1) {
   $64 = (($i$070) + 1)|0;
   $65 = (+($64|0));
   $66 = $65 * 0.08664337545633316;
   $67 = $66 + 2.7488713472395148;
   $68 = (+Math_exp((+$67)));
   $69 = $56 * $68;
   $70 = $69 / $57;
   $71 = (+_rint($70));
   $72 = (~~(($71)));
   $$not = ($72|0)<=($j$0$ph$ph73|0);
   $brmerge = $$not | $$not75;
   if (!($brmerge)) {
    $$lcssa = $64;$$lcssa85 = $72;$i$070$lcssa = $i$070;
    break;
   }
   $73 = ($64|0)<(87);
   if ($73) {
    $i$070 = $64;
   } else {
    $j$0$ph$ph$lcssa = $j$0$ph$ph73;
    break L9;
   }
  }
  $74 = (1272 + ($i$070$lcssa<<2)|0);
  $75 = +HEAPF32[$74>>2];
  $76 = (1272 + ($$lcssa<<2)|0);
  $77 = +HEAPF32[$76>>2];
  $78 = $77 - $75;
  $79 = (($$lcssa85) - ($j$0$ph$ph73))|0;
  $80 = (+($79|0));
  $81 = $78 / $80;
  $82 = (($j$0$ph$ph73) - ($$lcssa85))|0;
  $83 = (($j$0$ph$ph73) - ($n))|0;
  $84 = ($82>>>0)>($83>>>0);
  $umax = $84 ? $82 : $83;
  $59 = (($j$0$ph$ph73) - ($umax))|0;
  $base$032 = $75;$j$133 = $j$0$ph$ph73;
  while(1) {
   $85 = $base$032 + 100.0;
   $86 = (($44) + ($j$133<<2)|0);
   HEAPF32[$86>>2] = $85;
   $87 = $base$032 + $81;
   $88 = (($j$133) + 1)|0;
   $exitcond50 = ($88|0)==($59|0);
   if ($exitcond50) {
    break;
   } else {
    $base$032 = $87;$j$133 = $88;
   }
  }
  $60 = ($59|0)<($n|0);
  $61 = ($$lcssa|0)<(87);
  if ($61) {
   $62 = $60;$i$0$ph$ph74 = $$lcssa;$j$0$ph$ph73 = $59;
  } else {
   $j$0$ph$ph$lcssa = $59;
   break;
  }
 }
 $63 = ($j$0$ph$ph$lcssa|0)<($n|0);
 if ($63) {
  $j$328 = $j$0$ph$ph$lcssa;
  while(1) {
   $97 = (($j$328) + -1)|0;
   $98 = (($44) + ($97<<2)|0);
   $99 = HEAP32[$98>>2]|0;
   $100 = (($44) + ($j$328<<2)|0);
   HEAP32[$100>>2] = $99;
   $101 = (($j$328) + 1)|0;
   $exitcond48 = ($101|0)==($n|0);
   if ($exitcond48) {
    break;
   } else {
    $j$328 = $101;
   }
  }
 }
 $89 = ($n|0)>(0);
 if ($89) {
  $90 = $n << 1;
  $91 = (($rate|0) / ($90|0))&-1;
  $92 = ((($vi)) + 120|0);
  $93 = HEAP32[$92>>2]|0;
  $94 = ((($vi)) + 124|0);
  $95 = ((($vi)) + 116|0);
  $96 = ((($vi)) + 112|0);
  $hi$024 = 1;$i$126 = 0;$lo$025 = -99;
  while(1) {
   $107 = Math_imul($91, $i$126)|0;
   $108 = (+($107|0));
   $109 = $108 * 7.3999998858198524E-4;
   $110 = $109;
   $111 = (+Math_atan((+$110)));
   $112 = $111 * 13.100000381469727;
   $113 = Math_imul($107, $107)|0;
   $114 = (+($113|0));
   $115 = $114 * 1.8499999754340024E-8;
   $116 = $115;
   $117 = (+Math_atan((+$116)));
   $118 = $117 * 2.2400000095367432;
   $119 = $118 + $112;
   $120 = $108 * 9.9999997473787516E-5;
   $121 = $120;
   $122 = $119 + $121;
   $123 = $122;
   $124 = (($93) + ($lo$025))|0;
   $125 = ($124|0)<($i$126|0);
   L27: do {
    if ($125) {
     $126 = +HEAPF32[$96>>2];
     $127 = $123 - $126;
     $128 = $127;
     $lo$115 = $lo$025;
     while(1) {
      $129 = Math_imul($lo$115, $91)|0;
      $130 = (+($129|0));
      $131 = $130 * 7.3999998858198524E-4;
      $132 = $131;
      $133 = (+Math_atan((+$132)));
      $134 = $133 * 13.100000381469727;
      $135 = Math_imul($129, $129)|0;
      $136 = (+($135|0));
      $137 = $136 * 1.8499999754340024E-8;
      $138 = $137;
      $139 = (+Math_atan((+$138)));
      $140 = $139 * 2.2400000095367432;
      $141 = $130 * 9.9999997473787516E-5;
      $142 = $141;
      $143 = $134 + $142;
      $144 = $143 + $140;
      $145 = $144 < $128;
      if (!($145)) {
       $lo$1$lcssa = $lo$115;
       break L27;
      }
      $149 = (($lo$115) + 1)|0;
      $150 = (($93) + ($149))|0;
      $151 = ($150|0)<($i$126|0);
      if ($151) {
       $lo$115 = $149;
      } else {
       $lo$1$lcssa = $149;
       break;
      }
     }
    } else {
     $lo$1$lcssa = $lo$025;
    }
   } while(0);
   $146 = ($hi$024|0)>($n|0);
   L33: do {
    if ($146) {
     $hi$1$lcssa = $hi$024;
    } else {
     $147 = HEAP32[$94>>2]|0;
     $148 = (($147) + ($i$126))|0;
     $hi$120 = $hi$024;
     while(1) {
      $152 = ($hi$120|0)<($148|0);
      if (!($152)) {
       $153 = Math_imul($hi$120, $91)|0;
       $154 = (+($153|0));
       $155 = $154 * 7.3999998858198524E-4;
       $156 = $155;
       $157 = (+Math_atan((+$156)));
       $158 = $157 * 13.100000381469727;
       $159 = Math_imul($153, $153)|0;
       $160 = (+($159|0));
       $161 = $160 * 1.8499999754340024E-8;
       $162 = $161;
       $163 = (+Math_atan((+$162)));
       $164 = $163 * 2.2400000095367432;
       $165 = $154 * 9.9999997473787516E-5;
       $166 = $165;
       $167 = $158 + $166;
       $168 = $167 + $164;
       $169 = +HEAPF32[$95>>2];
       $170 = $169 + $123;
       $171 = $170;
       $172 = $168 < $171;
       if (!($172)) {
        $hi$1$lcssa = $hi$120;
        break L33;
       }
      }
      $173 = (($hi$120) + 1)|0;
      $174 = ($hi$120|0)<($n|0);
      if ($174) {
       $hi$120 = $173;
      } else {
       $hi$1$lcssa = $173;
       break;
      }
     }
    }
   } while(0);
   $175 = $lo$1$lcssa << 16;
   $176 = (($175) + -65537)|0;
   $177 = (($176) + ($hi$1$lcssa))|0;
   $178 = (($48) + ($i$126<<2)|0);
   HEAP32[$178>>2] = $177;
   $179 = (($i$126) + 1)|0;
   $exitcond47 = ($179|0)==($n|0);
   if ($exitcond47) {
    break;
   } else {
    $hi$024 = $hi$1$lcssa;$i$126 = $179;$lo$025 = $lo$1$lcssa;
   }
  }
  if ($89) {
   $102 = $57 * 0.5;
   $103 = HEAP32[$10>>2]|0;
   $104 = (($103) + 1)|0;
   $105 = 1 << $104;
   $106 = (+($105|0));
   $i$212 = 0;
   while(1) {
    $180 = (+($i$212|0));
    $181 = $180 + 0.25;
    $182 = $181;
    $183 = $102 * $182;
    $184 = $183 / $15;
    $185 = (+Math_log((+$184)));
    $186 = $185 * 1.4426950216293335;
    $187 = $186 + -5.9657840728759766;
    $188 = $106 * $187;
    $189 = $188 + 0.5;
    $190 = (~~(($189)));
    $191 = (($46) + ($i$212<<2)|0);
    HEAP32[$191>>2] = $190;
    $192 = (($i$212) + 1)|0;
    $exitcond46 = ($192|0)==($n|0);
    if ($exitcond46) {
     $$pre$phiZ2D = $102;
     break;
    } else {
     $i$212 = $192;
    }
   }
  } else {
   label = 19;
  }
 } else {
  label = 19;
 }
 if ((label|0) == 19) {
  $$pre54 = $57 * 0.5;
  $$pre$phiZ2D = $$pre54;
 }
 $193 = ((($vi)) + 36|0);
 $194 = $$pre$phiZ2D / $15;
 $195 = $194;
 $196 = ((($vi)) + 24|0);
 $197 = +HEAPF32[$196>>2];
 $198 = ((($vi)) + 28|0);
 $199 = +HEAPF32[$198>>2];
 $200 = (_setup_tone_curves($193,$195,$n,$197,$199)|0);
 $201 = ((($p)) + 8|0);
 HEAP32[$201>>2] = $200;
 $202 = (_malloc(12)|0);
 $203 = ((($p)) + 12|0);
 HEAP32[$203>>2] = $202;
 $204 = (_malloc($43)|0);
 HEAP32[$202>>2] = $204;
 $205 = (_malloc($43)|0);
 $206 = ((($202)) + 4|0);
 HEAP32[$206>>2] = $205;
 $207 = (_malloc($43)|0);
 $208 = ((($202)) + 8|0);
 HEAP32[$208>>2] = $207;
 if (!($89)) {
  return;
 }
 $209 = HEAP32[$50>>2]|0;
 $$pre = HEAP32[$202>>2]|0;
 $$phi$trans$insert = ((($202)) + 4|0);
 $$pre51 = HEAP32[$$phi$trans$insert>>2]|0;
 $$phi$trans$insert52 = ((($202)) + 8|0);
 $$pre53 = HEAP32[$$phi$trans$insert52>>2]|0;
 $i$410 = 0;
 while(1) {
  $210 = (+($i$410|0));
  $211 = $210 + 0.5;
  $212 = $211 * $57;
  $213 = $212 / $56;
  $214 = (+Math_log((+$213)));
  $215 = $214 * 2.885390043258667;
  $216 = $215 + -11.931568145751953;
  $217 = $216;
  $218 = $217 < 0.0;
  $halfoc$0 = $218 ? 0.0 : $217;
  $$inv = $halfoc$0 >= 16.0;
  $halfoc$1 = $$inv ? 16.0 : $halfoc$0;
  $219 = (~~(($halfoc$1)));
  $220 = (+($219|0));
  $221 = $halfoc$1 - $220;
  $222 = $221;
  $223 = 1.0 - $222;
  $224 = (($219) + 1)|0;
  $225 = (((($209)) + 132|0) + ($219<<2)|0);
  $226 = +HEAPF32[$225>>2];
  $227 = $226;
  $228 = $227 * $223;
  $229 = (((($209)) + 132|0) + ($224<<2)|0);
  $230 = +HEAPF32[$229>>2];
  $231 = $230 * $221;
  $232 = $231;
  $233 = $232 + $228;
  $234 = $233;
  $235 = (($$pre) + ($i$410<<2)|0);
  HEAPF32[$235>>2] = $234;
  $236 = (((($209)) + 200|0) + ($219<<2)|0);
  $237 = +HEAPF32[$236>>2];
  $238 = $237;
  $239 = $238 * $223;
  $240 = (((($209)) + 200|0) + ($224<<2)|0);
  $241 = +HEAPF32[$240>>2];
  $242 = $241 * $221;
  $243 = $242;
  $244 = $243 + $239;
  $245 = $244;
  $246 = (($$pre51) + ($i$410<<2)|0);
  HEAPF32[$246>>2] = $245;
  $247 = (((($209)) + 268|0) + ($219<<2)|0);
  $248 = +HEAPF32[$247>>2];
  $249 = $248;
  $250 = $249 * $223;
  $251 = (((($209)) + 268|0) + ($224<<2)|0);
  $252 = +HEAPF32[$251>>2];
  $253 = $252 * $221;
  $254 = $253;
  $255 = $254 + $250;
  $256 = $255;
  $257 = (($$pre53) + ($i$410<<2)|0);
  HEAPF32[$257>>2] = $256;
  $258 = (($i$410) + 1)|0;
  $exitcond = ($258|0)==($n|0);
  if ($exitcond) {
   break;
  } else {
   $i$410 = $258;
  }
 }
 return;
}