function getPdfManager(t,r,o){var l,u=(0,c.createPromiseCapability)(),d=t.source;if(d.data){try{l=new h.LocalPdfManager(R,d.data,d.password,D,r,o,L);u.resolve(l)}catch(t){u.reject(t)}return u.promise}var g,y=[];try{g=new v.PDFWorkerStream(D)}catch(t){u.reject(t);return u.promise}var m=g.getFullReader();m.headersReady.then((function(){if(m.isRangeSupported){var t=d.disableAutoFetch||m.isStreamingSupported;l=new h.NetworkPdfManager(R,g,{msgHandler:D,password:d.password,length:m.contentLength,disableAutoFetch:t,rangeChunkSize:d.rangeChunkSize},r,o,L);var c,v=_createForOfIteratorHelper(y);try{for(v.s();!(c=v.n()).done;){var w=c.value;l.sendProgressiveData(w)}}catch(t){v.e(t)}finally{v.f()}y=[];u.resolve(l);k=null}})).catch((function(t){u.reject(t);k=null}));var w=0;new Promise((function(t,g){m.read().then((function readChunk(t){var v=t.value,_=t.done;try{ensureNotTerminated();if(_){l||function flushChunks(){var t=(0,c.arraysToBytes)(y);d.length&&t.length!==d.length&&(0,c.warn)("reported HTTP length is different from actual");try{l=new h.LocalPdfManager(R,t,d.password,D,r,o,L);u.resolve(l)}catch(t){u.reject(t)}y=[]}();k=null;return}w+=(0,c.arrayByteLength)(v);m.isStreamingSupported||D.send("DocProgress",{loaded:w,total:Math.max(w,m.contentLength||0)});l?l.sendProgressiveData(v):y.push(v);m.read().then(readChunk,g)}catch(t){g(t)}}),g)})).catch((function(t){u.reject(t);k=null}));k=function cancelXHRs(t){g.cancelAllRequests(t)};return u.promise}