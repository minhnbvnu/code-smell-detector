function __vp_offset_and_mix($p,$noise,$tone,$offset_select,$logmask,$mdct,$logmdct) {
 $p = $p|0;
 $noise = $noise|0;
 $tone = $tone|0;
 $offset_select = $offset_select|0;
 $logmask = $logmask|0;
 $mdct = $mdct|0;
 $logmdct = $logmdct|0;
 var $$val$0 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0, $18 = 0.0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0, $25 = 0.0;
 var $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0, $39 = 0.0, $4 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0.0;
 var $44 = 0.0, $45 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0, $de$0 = 0.0, $exitcond = 0, $i$01 = 0, $val$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$p>>2]|0;
 $1 = ((($p)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (((($2)) + 12|0) + ($offset_select<<2)|0);
 $4 = +HEAPF32[$3>>2];
 $5 = ($0|0)>(0);
 if (!($5)) {
  return;
 }
 $6 = ((($p)) + 48|0);
 $7 = +HEAPF32[$6>>2];
 $8 = ((($p)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + ($offset_select<<2)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 108|0);
 $13 = ($offset_select|0)==(1);
 $14 = $7;
 $15 = $14 * 0.0050000000000000001;
 $16 = $14 * 2.9999999999999997E-4;
 $i$01 = 0;
 while(1) {
  $17 = (($noise) + ($i$01<<2)|0);
  $18 = +HEAPF32[$17>>2];
  $19 = (($11) + ($i$01<<2)|0);
  $20 = +HEAPF32[$19>>2];
  $21 = $20 + $18;
  $22 = +HEAPF32[$12>>2];
  $23 = $21 > $22;
  $val$0 = $23 ? $22 : $21;
  $24 = (($tone) + ($i$01<<2)|0);
  $25 = +HEAPF32[$24>>2];
  $26 = $25 + $4;
  $27 = $val$0 < $26;
  $$val$0 = $27 ? $26 : $val$0;
  $28 = (($logmask) + ($i$01<<2)|0);
  HEAPF32[$28>>2] = $$val$0;
  if ($13) {
   $29 = (($logmdct) + ($i$01<<2)|0);
   $30 = +HEAPF32[$29>>2];
   $31 = $val$0 - $30;
   $32 = $31 > -17.200000762939453;
   $33 = $31 + 17.200000762939453;
   $34 = $33;
   if ($32) {
    $35 = $15 * $34;
    $36 = 1.0 - $35;
    $37 = $36;
    $38 = $37 < 0.0;
    if ($38) {
     $de$0 = 9.9999997473787516E-5;
    } else {
     $de$0 = $37;
    }
   } else {
    $39 = $16 * $34;
    $40 = 1.0 - $39;
    $41 = $40;
    $de$0 = $41;
   }
   $42 = (($mdct) + ($i$01<<2)|0);
   $43 = +HEAPF32[$42>>2];
   $44 = $43 * $de$0;
   HEAPF32[$42>>2] = $44;
  }
  $45 = (($i$01) + 1)|0;
  $exitcond = ($45|0)==($0|0);
  if ($exitcond) {
   break;
  } else {
   $i$01 = $45;
  }
 }
 return;
}