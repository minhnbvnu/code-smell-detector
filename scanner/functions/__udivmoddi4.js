function __udivmoddi4(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var r7;
	var r8;
	var r9;
	var r10;
	var r11;
	var r12;
	var r13;
	var r14;
	var r15;
	var r16;
	var r17;
	var r18;
var __label__ = 0;
	i7 = sp + 0;var g0 = i7>>2; // save stack
	r0 = heap32[(fp+1)];
	r1 = heap32[(fp+4)];
	r2 = heap32[(fp)];
	r3 = heap32[(fp+2)];
	r4 = heap32[(fp+3)];
_1: do {
	if(r0 !=0) //_LBB795_10
{
_3: do {
	if(r3 !=0) //_LBB795_27
{
	if(r4 !=0) //_LBB795_34
{
	r5 = r4 >>> 1;
	r6 = r0 >>> 1;
	r5 = r4 | r5;
	r6 = r0 | r6;
	r7 = r5 >>> 2;
	r9 = r6 >>> 2;
	r5 = r5 | r7;
	r6 = r6 | r9;
	r7 = r5 >>> 4;
	r9 = r6 >>> 4;
	r5 = r5 | r7;
	r6 = r6 | r9;
	r7 = r5 >>> 8;
	r9 = r6 >>> 8;
	r5 = r5 | r7;
	r6 = r6 | r9;
	r7 = r5 >>> 16;
	r9 = r6 >>> 16;
	r5 = r5 | r7;
	r6 = r6 | r9;
	r7 = r5 ^ -1;
	r9 = r6 ^ -1;
	r8 = 1431655765;
	r7 = r7 >>> 1;
	r9 = r9 >>> 1;
	r5 = r8 & (~r5);
	r7 = r7 & 1431655765;
	r6 = r8 & (~r6);
	r9 = r9 & 1431655765;
	r5 = (r5 + r7)|0;
	r6 = (r6 + r9)|0;
	r7 = r5 >>> 2;
	r9 = r6 >>> 2;
	r5 = r5 & 858993459;
	r7 = r7 & 858993459;
	r6 = r6 & 858993459;
	r9 = r9 & 858993459;
	r5 = (r5 + r7)|0;
	r6 = (r6 + r9)|0;
	r7 = r5 >>> 4;
	r9 = r6 >>> 4;
	r5 = r5 & 252645135;
	r7 = r7 & 252645135;
	r6 = r6 & 252645135;
	r9 = r9 & 252645135;
	r5 = (r5 + r7)|0;
	r6 = (r6 + r9)|0;
	r7 = r5 >>> 8;
	r9 = r6 >>> 8;
	r5 = r5 & 16711935;
	r7 = r7 & 16711935;
	r6 = r6 & 16711935;
	r9 = r9 & 16711935;
	r5 = (r5 + r7)|0;
	r6 = (r6 + r9)|0;
	r7 = r5 & 65535;
	r5 = r5 >>> 16;
	r9 = r6 & 65535;
	r6 = r6 >>> 16;
	r5 = (r7 + r5)|0;
	r6 = (r9 + r6)|0;
	r5 = (r5 - r6)|0;
	if(uint(r5) <uint(32)) //_LBB795_37
{
	r6 = 31;
	r7 = (r5 + 1)|0;
	r9 = (r5 + -31)|0;
	r5 = (r6 - r5)|0;
	r6 = r2 >>> r7;
	r8 = r9 >> 31;
	r10 = r0 >>> r7;
	r6 = r6 & r8;
	r0 = r0 << r5;
	r9 = 0;
	r2 = r2 << r5;
	r5 = r6 | r0;
	r6 = r10 & r8;
__label__ = 39;
break _3;
}
else{
	if(r1 ==0) //_LBB795_7
{
__label__ = 7;
break _1;
}
else{
	r5 = r1 >> 2;
	heap32[(r5)] = r2;
	heap32[(r5+1)] = r0;
	r2 = 0;
	r_g0 = r2;
	r_g1 = r2;
	return;
}
}
}
else{
	r5 = (r3 + -1)|0;
	r6 = r5 & r3;
	if(r6 !=0) //_LBB795_38
{
	r5 = r3 >>> 1;
	r6 = r0 >>> 1;
	r5 = r3 | r5;
	r6 = r0 | r6;
	r7 = r5 >>> 2;
	r9 = r6 >>> 2;
	r5 = r5 | r7;
	r6 = r6 | r9;
	r7 = r5 >>> 4;
	r9 = r6 >>> 4;
	r5 = r5 | r7;
	r6 = r6 | r9;
	r7 = r5 >>> 8;
	r9 = r6 >>> 8;
	r5 = r5 | r7;
	r6 = r6 | r9;
	r7 = r5 >>> 16;
	r9 = r6 >>> 16;
	r5 = r5 | r7;
	r6 = r6 | r9;
	r7 = r5 ^ -1;
	r9 = r6 ^ -1;
	r8 = 1431655765;
	r7 = r7 >>> 1;
	r9 = r9 >>> 1;
	r5 = r8 & (~r5);
	r7 = r7 & 1431655765;
	r6 = r8 & (~r6);
	r9 = r9 & 1431655765;
	r5 = (r5 + r7)|0;
	r6 = (r6 + r9)|0;
	r7 = r5 >>> 2;
	r9 = r6 >>> 2;
	r5 = r5 & 858993459;
	r7 = r7 & 858993459;
	r6 = r6 & 858993459;
	r9 = r9 & 858993459;
	r5 = (r5 + r7)|0;
	r6 = (r6 + r9)|0;
	r7 = r5 >>> 4;
	r9 = r6 >>> 4;
	r5 = r5 & 252645135;
	r7 = r7 & 252645135;
	r6 = r6 & 252645135;
	r9 = r9 & 252645135;
	r5 = (r5 + r7)|0;
	r6 = (r6 + r9)|0;
	r7 = r5 >>> 8;
	r9 = r6 >>> 8;
	r5 = r5 & 16711935;
	r7 = r7 & 16711935;
	r6 = r6 & 16711935;
	r9 = r9 & 16711935;
	r5 = (r5 + r7)|0;
	r6 = (r6 + r9)|0;
	r7 = r5 & 65535;
	r5 = r5 >>> 16;
	r9 = r6 & 65535;
	r6 = r6 >>> 16;
	r5 = (r7 + r5)|0;
	r6 = (r9 + r6)|0;
	r5 = (r5 - r6)|0;
	r6 = 31;
	r7 = (r5 + 33)|0;
	r9 = r5 ^ -1;
	r8 = (r5 + 1)|0;
	r6 = (r6 - r5)|0;
	r10 = -2;
	r10 = (r10 - r5)|0;
	r11 = r0 << r6;
	r12 = r2 >>> r8;
	r13 = r2 >>> r7;
	r14 = r0 << r9;
	r11 = r11 | r12;
	r12 = r9 >> 31;
	r9 = r2 << r9;
	r5 = r5 >> 31;
	r13 = r13 | r14;
	r14 = r8 >> 31;
	r8 = r0 >>> r8;
	r10 = r10 >> 31;
	r2 = r2 << r6;
	r0 = r0 >>> r7;
	r6 = r11 & r12;
	r5 = r9 & r5;
	r11 = r13 & r14;
	r8 = r8 & r10;
	r9 = r2 & r12;
	r2 = r6 | r5;
	r5 = r11 | r8;
	r6 = r0 & r14;
	if(r7 ==0) //_LBB795_40
{
	r0 = 0;
	r3 = r0;
__label__ = 42;
break _3;
}
else{
__label__ = 39;
break _3;
}
}
else{
if(!(r1 ==0)) //_LBB795_31
{
	r1 = r1 >> 2;
	r4 = r5 & r2;
	heap32[(r1)] = r4;
	heap32[(r1+1)] = 0;
}
	if(r3 !=1) //_LBB795_33
{
	r1 = r5 & (~r3);
	r3 = r1 >>> 1;
	r1 = r1 & 1431655765;
	r3 = r3 & 1431655765;
	r1 = (r1 + r3)|0;
	r3 = r1 >>> 2;
	r1 = r1 & 858993459;
	r3 = r3 & 858993459;
	r1 = (r1 + r3)|0;
	r3 = r1 >>> 4;
	r1 = r1 & 252645135;
	r3 = r3 & 252645135;
	r1 = (r1 + r3)|0;
	r3 = r1 >>> 8;
	r1 = r1 & 16711935;
	r3 = r3 & 16711935;
	r1 = (r1 + r3)|0;
	r3 = r1 & 65535;
	r1 = r1 >>> 16;
	r1 = (r3 + r1)|0;
	r3 = 32;
	r3 = (r3 - r1)|0;
	r3 = r0 << r3;
	r2 = r2 >>> r1;
	r2 = r3 | r2;
	r0 = r0 >>> r1;
__label__ = 44;
break _1;
}
else{
__label__ = 44;
break _1;
}
}
}
}
else{
	if(r4 !=0) //_LBB795_15
{
	if(r2 !=0) //_LBB795_19
{
	r5 = (r4 + -1)|0;
	r6 = r5 & r4;
	if(r6 !=0) //_LBB795_23
{
	r5 = r4 >>> 1;
	r6 = r0 >>> 1;
	r5 = r4 | r5;
	r6 = r0 | r6;
	r7 = r5 >>> 2;
	r8 = r6 >>> 2;
	r5 = r5 | r7;
	r6 = r6 | r8;
	r7 = r5 >>> 4;
	r8 = r6 >>> 4;
	r5 = r5 | r7;
	r6 = r6 | r8;
	r7 = r5 >>> 8;
	r8 = r6 >>> 8;
	r5 = r5 | r7;
	r6 = r6 | r8;
	r7 = r5 >>> 16;
	r8 = r6 >>> 16;
	r5 = r5 | r7;
	r6 = r6 | r8;
	r7 = r5 ^ -1;
	r8 = r6 ^ -1;
	r9 = 1431655765;
	r7 = r7 >>> 1;
	r8 = r8 >>> 1;
	r5 = r9 & (~r5);
	r7 = r7 & 1431655765;
	r6 = r9 & (~r6);
	r8 = r8 & 1431655765;
	r5 = (r5 + r7)|0;
	r6 = (r6 + r8)|0;
	r7 = r5 >>> 2;
	r8 = r6 >>> 2;
	r5 = r5 & 858993459;
	r7 = r7 & 858993459;
	r6 = r6 & 858993459;
	r8 = r8 & 858993459;
	r5 = (r5 + r7)|0;
	r6 = (r6 + r8)|0;
	r7 = r5 >>> 4;
	r8 = r6 >>> 4;
	r5 = r5 & 252645135;
	r7 = r7 & 252645135;
	r6 = r6 & 252645135;
	r8 = r8 & 252645135;
	r5 = (r5 + r7)|0;
	r6 = (r6 + r8)|0;
	r7 = r5 >>> 8;
	r8 = r6 >>> 8;
	r5 = r5 & 16711935;
	r7 = r7 & 16711935;
	r6 = r6 & 16711935;
	r8 = r8 & 16711935;
	r5 = (r5 + r7)|0;
	r6 = (r6 + r8)|0;
	r7 = r5 & 65535;
	r5 = r5 >>> 16;
	r8 = r6 & 65535;
	r6 = r6 >>> 16;
	r5 = (r7 + r5)|0;
	r6 = (r8 + r6)|0;
	r5 = (r5 - r6)|0;
	if(uint(r5) <uint(31)) //_LBB795_26
{
	r6 = 31;
	r7 = (r5 + 1)|0;
	r5 = (r6 - r5)|0;
	r6 = r0 << r5;
	r8 = r2 >>> r7;
	r9 = 0;
	r2 = r2 << r5;
	r5 = r6 | r8;
	r6 = r0 >>> r7;
__label__ = 39;
break _3;
}
else{
	if(r1 ==0) //_LBB795_7
{
__label__ = 7;
break _1;
}
else{
	r1 = r1 >> 2;
	heap32[(r1)] = r2;
	heap32[(r1+1)] = r0;
__label__ = 9;
break _1;
}
}
}
else{
if(!(r1 ==0)) //_LBB795_22
{
	r1 = r1 >> 2;
	r3 = r5 & r0;
	heap32[(r1)] = r2;
	heap32[(r1+1)] = r3;
}
	r1 = (r4 + -1)|0;
	r1 = r1 & (~r4);
	r2 = r1 >>> 1;
	r1 = r1 & 1431655765;
	r2 = r2 & 1431655765;
	r1 = (r1 + r2)|0;
	r2 = r1 >>> 2;
	r1 = r1 & 858993459;
	r2 = r2 & 858993459;
	r1 = (r1 + r2)|0;
	r2 = r1 >>> 4;
	r1 = r1 & 252645135;
	r2 = r2 & 252645135;
	r1 = (r1 + r2)|0;
	r2 = r1 >>> 8;
	r1 = r1 & 16711935;
	r2 = r2 & 16711935;
	r1 = (r1 + r2)|0;
	r2 = r1 & 65535;
	r1 = r1 >>> 16;
	r1 = (r2 + r1)|0;
	r0 = r0 >>> r1;
__label__ = 5;
break _1;
}
}
else{
if(!(r1 ==0)) //_LBB795_18
{
	r1 = r1 >> 2;
	r2 = Math.floor(uint(r0) % uint(r4));
	heap32[(r1)] = 0;
	heap32[(r1+1)] = r2;
}
	r0 = Math.floor(uint(r0) /uint(r4));
__label__ = 5;
break _1;
}
}
else{
if(!(r1 ==0)) //_LBB795_14
{
	r1 = r1 >> 2;
	r2 = Math.floor(uint(r0) % uint(r3));
	heap32[(r1)] = r2;
	heap32[(r1+1)] = 0;
}
	r0 = Math.floor(uint(r0) /uint(r3));
__label__ = 5;
break _1;
}
}
} while(0);
if (__label__ == 39){
	r8 = (r3 + -1)|0;
	r10 = 0;
	r11 = 1;
	r0 = uint(r8) < uint(r3) ? r11 : r10;
	r0 = r3 != 0 ? r11 : r0;
	r0 = (r4 + r0)|0;
	r12 = (r0 + -1)|0;
	r13 = r10;
_45: while(true){
	r0 = r5 << 1;
	r14 = r2 >>> 31;
	r6 = r6 << 1;
	r5 = r5 >>> 31;
	r14 = r0 | r14;
	r0 = r6 | r5;
	r5 = (r12 - r0)|0;
	r6 = uint(r8) < uint(r14) ? r11 : r10;
	r5 = (r5 - r6)|0;
	r5 = r5 >> 31;
	r6 = r5 & r3;
	r15 = r5 & r4;
	r16 = r9 << 1;
	r2 = r2 << 1;
	r17 = r9 >>> 31;
	r15 = (r0 - r15)|0;
	r18 = uint(r14) < uint(r6) ? r11 : r10;
	r7 = (r7 + -1)|0;
	r0 = r5 & 1;
	r9 = r13 | r16;
	r2 = r2 | r17;
	r5 = (r14 - r6)|0;
	r6 = (r15 - r18)|0;
	r13 = r0;
if(!(r7 !=0)) //_LBB795_42
{
break _45;
}
}
	r3 = 0;
}
	r2 = r2 << 1;
	r4 = r9 >>> 31;
	r7 = r9 << 1;
	r4 = r2 | r4;
	r2 = r0 | r7;
	r0 = r3 | r4;
	if(r1 !=0) //_LBB795_46
{
	r1 = r1 >> 2;
	heap32[(r1)] = r5;
	heap32[(r1+1)] = r6;
__label__ = 44;
break _1;
}
else{
__label__ = 44;
break _1;
}
}
else{
	if(r4 !=0) //_LBB795_6
{
	if(r1 !=0) //_LBB795_8
{
	r0 = r1 >> 2;
	heap32[(r0)] = r2;
	heap32[(r0+1)] = 0;
__label__ = 9;
break _1;
}
else{
__label__ = 7;
break _1;
}
}
else{
if(!(r1 ==0)) //_LBB795_4
{
	r0 = r1 >> 2;
	r1 = Math.floor(uint(r2) % uint(r3));
	heap32[(r0)] = r1;
	heap32[(r0+1)] = 0;
}
	r0 = Math.floor(uint(r2) /uint(r3));
__label__ = 5;
}
}
} while(0);
switch(__label__ ){//multiple entries
case 7:
	r2 = 0;
	r0 = r2;
break;
case 9:
	r0 = 0;
	r_g0 = r0;
	r_g1 = r0;
	return;
break;
case 5:
	r1 = 0;
	r_g0 = r0;
	r_g1 = r1;
	return;
break;
}
	r_g0 = r2;
	r_g1 = r0;
	return;
}