function OZ(n){let{inputs:t,backend:e,attrs:i}=n,{x:r,indices:o}=t,{axis:s,batchDims:a}=i,l=R.parseAxisParam(s,r.shape)[0],c=F.segment_util.collectGatherOpShapeInfo(r,o,l,a),u=R.sizeFromShape(o.shape),h=[],p=Et({inputs:{x:r},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=Et({inputs:{x:o},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(p),h.push(d);let f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([r,o])||r.dtype==="string"){let v=e.bufferSync(d),b=e.bufferSync(p),y=n6(b,v,f);return h.forEach(_=>e.disposeIntermediateTensorInfo(_)),e.makeTensorInfo(c.outputShape,y.dtype,y.values)}let m=new O0(p.shape,f),x=e.runWebGLProgram(m,[p,d],p.dtype);h.push(x);let g=Et({inputs:{x},backend:e,attrs:{shape:c.outputShape}});return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),g}