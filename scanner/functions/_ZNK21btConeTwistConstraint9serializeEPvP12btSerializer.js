function _ZNK21btConeTwistConstraint9serializeEPvP12btSerializer(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
var __label__ = 0;
	i7 = sp + -16;var g0 = i7>>2; // save stack
	r0 = heap32[(fp)];
	r1 = heap32[(fp+1)];
	r2 = heap32[(fp+2)];
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r1;
	heap32[(g0+2)] = r2;
	r1 = r1 >> 2;
	r0 = r0 >> 2;
	_ZNK17btTypedConstraint9serializeEPvP12btSerializer(i7);
	heap32[(r1+11)] = heap32[(r0+72)];
	heap32[(r1+12)] = heap32[(r0+73)];
	heap32[(r1+13)] = heap32[(r0+74)];
	heap32[(r1+14)] = heap32[(r0+75)];
	heap32[(r1+15)] = heap32[(r0+76)];
	heap32[(r1+16)] = heap32[(r0+77)];
	heap32[(r1+17)] = heap32[(r0+78)];
	heap32[(r1+18)] = heap32[(r0+79)];
	heap32[(r1+19)] = heap32[(r0+80)];
	heap32[(r1+20)] = heap32[(r0+81)];
	heap32[(r1+21)] = heap32[(r0+82)];
	heap32[(r1+22)] = heap32[(r0+83)];
	heap32[(r1+23)] = heap32[(r0+84)];
	heap32[(r1+24)] = heap32[(r0+85)];
	heap32[(r1+25)] = heap32[(r0+86)];
	heap32[(r1+26)] = heap32[(r0+87)];
	heap32[(r1+27)] = heap32[(r0+88)];
	heap32[(r1+28)] = heap32[(r0+89)];
	heap32[(r1+29)] = heap32[(r0+90)];
	heap32[(r1+30)] = heap32[(r0+91)];
	heap32[(r1+31)] = heap32[(r0+92)];
	heap32[(r1+32)] = heap32[(r0+93)];
	heap32[(r1+33)] = heap32[(r0+94)];
	heap32[(r1+34)] = heap32[(r0+95)];
	heap32[(r1+35)] = heap32[(r0+96)];
	heap32[(r1+36)] = heap32[(r0+97)];
	heap32[(r1+37)] = heap32[(r0+98)];
	heap32[(r1+38)] = heap32[(r0+99)];
	heap32[(r1+39)] = heap32[(r0+100)];
	heap32[(r1+40)] = heap32[(r0+101)];
	heap32[(r1+41)] = heap32[(r0+102)];
	heap32[(r1+42)] = heap32[(r0+103)];
	heap32[(r1+43)] = heap32[(r0+108)];
	heap32[(r1+44)] = heap32[(r0+109)];
	heap32[(r1+45)] = heap32[(r0+110)];
	heap32[(r1+46)] = heap32[(r0+104)];
	heap32[(r1+47)] = heap32[(r0+105)];
	heap32[(r1+48)] = heap32[(r0+106)];
	heap32[(r1+49)] = heap32[(r0+107)];
	r0 = _2E_str239;
	r_g0 = r0;
	return;
}