function _ZN24btPerturbedContactResult15addContactPointERK9btVector3S2_f(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
	var f6;
	var f7;
	var f8;
	var f9;
	var f10;
	var f11;
	var f12;
	var f13;
	var f14;
	var f15;
	var f16;
	var f17;
	var f18;
	var f19;
	var f20;
	var f21;
	var f22;
	var f23;
	var f24;
	var f25;
	var f26;
	var f27;
	var f28;
	var f29;
	var f30;
var __label__ = 0;
	i7 = sp + -104;var g0 = i7>>2; // save stack
	r0 = heap32[(fp+1)];
	r1 = r0 >> 2;
	r2 = heap32[(fp+2)];
	r2 = r2 >> 2;
	f0 = heapFloat[(r1+2)];
	heapFloat[(fp+-5)] = f0;
	f1 = heapFloat[(r1+1)];
	heapFloat[(fp+-6)] = f1;
	f2 = heapFloat[(fp+3)];
	f3 = heapFloat[(r1)];
	heapFloat[(fp+-7)] = f3;
	f4 = heapFloat[(r2+2)];
	heapFloat[(fp+-11)] = f4;
	f0 = f0*f2;
	f5 = heapFloat[(r2+1)];
	heapFloat[(fp+-12)] = f5;
	f1 = f1*f2;
	f6 = heapFloat[(r2)];
	heapFloat[(fp+-13)] = f6;
	f2 = f3*f2;
	r1 = heap32[(fp)];
	f0 = f4+f0;
	heapFloat[(fp+-8)] = f0;
	f0 = f5+f1;
	heapFloat[(fp+-9)] = f0;
	f0 = f6+f2;
	heapFloat[(fp+-10)] = f0;
	r2 = heapU8[r1+356];
	if(r2 ==0) //_LBB298_2
{
	r2 = r1 >> 2;
	f3 = heapFloat[(r2+69)];
	f3 = -f3;
	f0 = heapFloat[(r2+57)];
	f1 = heapFloat[(r2+58)];
	f2 = heapFloat[(r2+61)];
	f4 = heapFloat[(r2+70)];
	f5 = heapFloat[(r2+62)];
	f6 = heapFloat[(r2+77)];
	f7 = heapFloat[(r2+78)];
	f8 = heapFloat[(r2+73)];
	f9 = heapFloat[(r2+65)];
	f10 = heapFloat[(r2+74)];
	f11 = heapFloat[(r2+66)];
	f12 = heapFloat[(r2+71)];
	f13 = heapFloat[(r2+59)];
	f14 = heapFloat[(r2+63)];
	f15 = f0*f3;
	f16 = f2*f4;
	f17 = f1*f3;
	f18 = f5*f4;
	f19 = heapFloat[(r2+81)];
	f20 = heapFloat[(r2+82)];
	f21 = heapFloat[(r2+79)];
	f22 = heapFloat[(r2+67)];
	f23 = heapFloat[(r2+75)];
	f24 = f0*f6;
	f25 = f1*f7;
	f26 = f2*f6;
	f27 = f5*f7;
	f28 = f0*f8;
	heapFloat[(fp+-14)] = f28;
	f28 = f1*f10;
	heapFloat[(fp+-15)] = f28;
	f29 = f2*f8;
	f28 = f5*f10;
	f15 = f15-f16;
	f16 = f9*f12;
	f17 = f17-f18;
	f18 = f11*f12;
	f3 = f13*f3;
	heapFloat[(fp+-16)] = f3;
	f3 = f14*f4;
	heapFloat[(fp+-20)] = f3;
	f4 = f15-f16;
	f15 = f17-f18;
	f16 = heapFloat[(r2+83)];
	f0 = f0*f19;
	f1 = f1*f20;
	f2 = f2*f19;
	f5 = f5*f20;
	f17 = f24+f25;
	heapFloat[(fp+-17)] = f17;
	f3 = f13*f21;
	heapFloat[(fp+-21)] = f3;
	f17 = f26+f27;
	heapFloat[(fp+-18)] = f17;
	f18 = f14*f21;
	f24 = f9*f6;
	heapFloat[(fp+-19)] = f24;
	f25 = f11*f7;
	f26 = heapFloat[(fp+-14)];
	f27 = heapFloat[(fp+-15)];
	f26 = f26+f27;
	f27 = f13*f23;
	f28 = f29+f28;
	f29 = f14*f23;
	f30 = f9*f8;
	f3 = f11*f10;
	f17 = heapFloat[(fp+-16)];
	f24 = heapFloat[(fp+-20)];
	f17 = f17-f24;
	f12 = f22*f12;
	f12 = f17-f12;
	f0 = f0+f1;
	f1 = f13*f16;
	f2 = f2+f5;
	f5 = f14*f16;
	f9 = f9*f19;
	f11 = f11*f20;
	f17 = heapFloat[(fp+-17)];
	f13 = heapFloat[(fp+-21)];
	f13 = f17+f13;
	f14 = f26+f27;
	f17 = heapFloat[(fp+-18)];
	f17 = f17+f18;
	f18 = f28+f29;
	f24 = heapFloat[(fp+-19)];
	f24 = f24+f25;
	f25 = f22*f21;
	f6 = f6*f4;
	f7 = f7*f15;
	f3 = f30+f3;
	f26 = f22*f23;
	f8 = f8*f4;
	f10 = f10*f15;
	f0 = f0+f1;
	f1 = f2+f5;
	f2 = f9+f11;
	f5 = f22*f16;
	f4 = f19*f4;
	f9 = f20*f15;
	f11 = heapFloat[(fp+-13)];
	f13 = f13*f11;
	f15 = heapFloat[(fp+-12)];
	f17 = f17*f15;
	f19 = f24+f25;
	f3 = f3+f26;
	f6 = f6+f7;
	f7 = f21*f12;
	f14 = f14*f11;
	f18 = f18*f15;
	f8 = f8+f10;
	f10 = f23*f12;
	f2 = f2+f5;
	f0 = f0*f11;
	f1 = f1*f15;
	f4 = f4+f9;
	f5 = f16*f12;
	f9 = f13+f17;
	f11 = heapFloat[(fp+-11)];
	f12 = f19*f11;
	f6 = f6+f7;
	f7 = heapFloat[(r2+86)];
	f13 = f14+f18;
	f3 = f3*f11;
	f8 = f8+f10;
	f10 = heapFloat[(r2+85)];
	f14 = heapFloat[(r2+87)];
	f4 = f4+f5;
	f0 = f0+f1;
	f1 = f2*f11;
	f2 = f9+f12;
	f5 = f6+f7;
	f3 = f13+f3;
	f6 = f8+f10;
	f3 = f3+f6;
	f2 = f2+f5;
	f0 = f0+f1;
	f1 = f4+f14;
	r2 = sp + -16;
	f4 = heapFloat[(fp+-10)];
	f4 = f4-f3;
	f5 = heapFloat[(fp+-9)];
	f5 = f5-f2;
	f0 = f0+f1;
	f1 = heapFloat[(fp+-7)];
	f1 = f4*f1;
	f4 = heapFloat[(fp+-6)];
	f4 = f5*f4;
	f5 = heapFloat[(fp+-8)];
	f5 = f5-f0;
	r2 = r2 >> 2;
	heapFloat[(fp+-4)] = f3;
	heapFloat[(r2+1)] = f2;
	f3 = f1+f4;
	f1 = heapFloat[(fp+-5)];
	f1 = f5*f1;
	f3 = f3+f1;
	heapFloat[(r2+2)] = f0;
	heap32[(r2+3)] = 0;
}
else{
	r2 = r1 >> 2;
	f0 = heapFloat[(r2+53)];
	f0 = -f0;
	f1 = heapFloat[(r2+41)];
	f2 = heapFloat[(r2+42)];
	f3 = heapFloat[(r2+45)];
	f4 = heapFloat[(r2+54)];
	f5 = heapFloat[(r2+46)];
	f6 = heapFloat[(r2+77)];
	f7 = heapFloat[(r2+78)];
	f8 = heapFloat[(r2+73)];
	f9 = heapFloat[(r2+49)];
	f10 = heapFloat[(r2+74)];
	f11 = heapFloat[(r2+50)];
	f12 = heapFloat[(r2+55)];
	f13 = heapFloat[(r2+43)];
	f14 = heapFloat[(r2+47)];
	f15 = f1*f0;
	f16 = f3*f4;
	f17 = f2*f0;
	f18 = f5*f4;
	f19 = heapFloat[(r2+81)];
	f20 = heapFloat[(r2+82)];
	f21 = heapFloat[(r2+79)];
	f22 = heapFloat[(r2+51)];
	f23 = heapFloat[(r2+75)];
	f24 = f1*f8;
	f25 = f2*f10;
	f26 = f3*f8;
	f27 = f5*f10;
	f28 = f1*f6;
	heapFloat[(fp+-14)] = f28;
	f29 = f2*f7;
	f30 = f3*f6;
	f28 = f5*f7;
	f15 = f15-f16;
	f16 = f9*f12;
	f17 = f17-f18;
	f18 = f11*f12;
	f0 = f13*f0;
	heapFloat[(fp+-15)] = f0;
	f0 = f14*f4;
	heapFloat[(fp+-16)] = f0;
	f4 = f15-f16;
	f15 = f17-f18;
	f16 = heapFloat[(r2+83)];
	f0 = f24+f25;
	heapFloat[(fp+-17)] = f0;
	f17 = f13*f23;
	f0 = f26+f27;
	heapFloat[(fp+-18)] = f0;
	f18 = f14*f23;
	f24 = f9*f8;
	f25 = f11*f10;
	f26 = heapFloat[(fp+-14)];
	f26 = f26+f29;
	f27 = f13*f21;
	f28 = f30+f28;
	f29 = f14*f21;
	f30 = f9*f6;
	f0 = f11*f7;
	f1 = f1*f19;
	heapFloat[(fp+-14)] = f1;
	f2 = f2*f20;
	f1 = f3*f19;
	heapFloat[(fp+-19)] = f1;
	f3 = f5*f20;
	f5 = heapFloat[(fp+-15)];
	f1 = heapFloat[(fp+-16)];
	f1 = f5-f1;
	f5 = f22*f12;
	f1 = f1-f5;
	f5 = heapFloat[(fp+-17)];
	f5 = f5+f17;
	f12 = f26+f27;
	f17 = heapFloat[(fp+-18)];
	f17 = f17+f18;
	f18 = f28+f29;
	f24 = f24+f25;
	f25 = f22*f23;
	f8 = f8*f4;
	f10 = f10*f15;
	f0 = f30+f0;
	f26 = f22*f21;
	f6 = f6*f4;
	f7 = f7*f15;
	f27 = heapFloat[(fp+-14)];
	f2 = f27+f2;
	f13 = f13*f16;
	f27 = heapFloat[(fp+-19)];
	f3 = f27+f3;
	f14 = f14*f16;
	f9 = f9*f19;
	f11 = f11*f20;
	f2 = f2+f13;
	f3 = f3+f14;
	f13 = heapFloat[(fp+-10)];
	f5 = f5*f13;
	f14 = heapFloat[(fp+-9)];
	f17 = f17*f14;
	f24 = f24+f25;
	f0 = f0+f26;
	f8 = f8+f10;
	f10 = f23*f1;
	f12 = f12*f13;
	f18 = f18*f14;
	f6 = f6+f7;
	f7 = f21*f1;
	f9 = f9+f11;
	f11 = f22*f16;
	f4 = f19*f4;
	f15 = f20*f15;
	f9 = f9+f11;
	f5 = f5+f17;
	f11 = heapFloat[(fp+-8)];
	f17 = f24*f11;
	f8 = f8+f10;
	f10 = heapFloat[(r2+85)];
	f12 = f12+f18;
	f0 = f0*f11;
	f6 = f6+f7;
	f7 = heapFloat[(r2+86)];
	f2 = f2*f13;
	f3 = f3*f14;
	f4 = f4+f15;
	f1 = f16*f1;
	f13 = heapFloat[(r2+87)];
	f1 = f4+f1;
	f4 = f5+f17;
	f5 = f8+f10;
	f0 = f12+f0;
	f6 = f6+f7;
	f2 = f2+f3;
	f3 = f9*f11;
	f4 = f4+f5;
	f0 = f0+f6;
	f2 = f2+f3;
	f1 = f1+f13;
	f3 = heapFloat[(fp+-13)];
	f3 = f4-f3;
	f5 = heapFloat[(fp+-12)];
	f5 = f0-f5;
	f1 = f2+f1;
	f2 = heapFloat[(fp+-7)];
	f3 = f3*f2;
	f6 = heapFloat[(fp+-6)];
	f5 = f5*f6;
	f7 = heapFloat[(fp+-11)];
	f7 = f1-f7;
	f3 = f3+f5;
	f5 = heapFloat[(fp+-5)];
	f7 = f7*f5;
	f3 = f3+f7;
	f2 = f2*f3;
	r2 = sp + -16;
	f6 = f6*f3;
	f2 = f4+f2;
	f4 = f5*f3;
	r2 = r2 >> 2;
	f0 = f0+f6;
	heapFloat[(fp+-4)] = f2;
	f1 = f1+f4;
	heapFloat[(r2+1)] = f0;
	heapFloat[(r2+2)] = f1;
	heap32[(r2+3)] = 0;
}
	r1 = r1 >> 2;
	r1 = heap32[(r1+40)];
	r2 = r1 >> 2;
	r2 = heap32[(r2)];
	r2 = r2 >> 2;
	r2 = heap32[(r2+4)];
	r3 = sp + -16;
	heap32[(g0)] = r1;
	heap32[(g0+1)] = r0;
	heap32[(g0+2)] = r3;
	heapFloat[(g0+3)] = f3;
	__FUNCTION_TABLE__[(r2)>>2](i7);
	return;
}