function KFe(e){const t=this,r=[];let n=0,i,a,l;return s;function s($){if(n<r.length){const x=r[n];return t.containerState=x[1],e.attempt(x[0].continuation,u,c)($)}return c($)}function u($){if(n++,t.containerState._closeFlow){t.containerState._closeFlow=void 0,i&&y();const x=t.events.length;let k=x,C;for(;k--;)if(t.events[k][0]==="exit"&&t.events[k][1].type==="chunkFlow"){C=t.events[k][1].end;break}v(n);let A=x;for(;A<t.events.length;)t.events[A][1].end=Object.assign({},C),A++;return _l(t.events,k+1,0,t.events.slice(x)),t.events.length=A,c($)}return s($)}function c($){if(n===r.length){if(!i)return h($);if(i.currentConstruct&&i.currentConstruct.concrete)return m($);t.interrupt=!!(i.currentConstruct&&!i._gfmTableDynamicInterruptHack)}return t.containerState={},e.check(PV,d,f)($)}function d($){return i&&y(),v(n),h($)}function f($){return t.parser.lazy[t.now().line]=n!==r.length,l=t.now().offset,m($)}function h($){return t.containerState={},e.attempt(PV,p,m)($)}function p($){return n++,r.push([t.currentConstruct,t.containerState]),h($)}function m($){if($===null){i&&y(),v(0),e.consume($);return}return i=i||t.parser.flow(t.now()),e.enter("chunkFlow",{contentType:"flow",previous:a,_tokenizer:i}),g($)}function g($){if($===null){b(e.exit("chunkFlow"),!0),v(0),e.consume($);return}return ft($)?(e.consume($),b(e.exit("chunkFlow")),n=0,t.interrupt=void 0,s):(e.consume($),g)}function b($,x){const k=t.sliceStream($);if(x&&k.push(null),$.previous=a,a&&(a.next=$),a=$,i.defineSkip($.start),i.write(k),t.parser.lazy[$.start.line]){let C=i.events.length;for(;C--;)if(i.events[C][1].start.offset<l&&(!i.events[C][1].end||i.events[C][1].end.offset>l))return;const A=t.events.length;let E=A,M,D;for(;E--;)if(t.events[E][0]==="exit"&&t.events[E][1].type==="chunkFlow"){if(M){D=t.events[E][1].end;break}M=!0}for(v(n),C=A;C<t.events.length;)t.events[C][1].end=Object.assign({},D),C++;_l(t.events,E+1,0,t.events.slice(A)),t.events.length=C}}function v($){let x=r.length;for(;x-- >$;){const k=r[x];t.containerState=k[1],k[0].exit.call(t,e)}r.length=$}function y(){i.write([null]),a=void 0,i=void 0,t.containerState._closeFlow=void 0}}