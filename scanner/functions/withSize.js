function withSize(){var config=arguments.length>0&&void 0!==arguments[0]?arguments[0]:defaultConfig,_config$monitorWidth=config.monitorWidth,monitorWidth=void 0===_config$monitorWidth?defaultConfig.monitorWidth:_config$monitorWidth,_config$monitorHeight=config.monitorHeight,monitorHeight=void 0===_config$monitorHeight?defaultConfig.monitorHeight:_config$monitorHeight,_config$refreshRate=config.refreshRate,refreshRate=void 0===_config$refreshRate?defaultConfig.refreshRate:_config$refreshRate,_config$refreshMode=config.refreshMode,refreshMode=void 0===_config$refreshMode?defaultConfig.refreshMode:_config$refreshMode,_config$noPlaceholder=config.noPlaceholder,noPlaceholder=void 0===_config$noPlaceholder?defaultConfig.noPlaceholder:_config$noPlaceholder,_config$resizeDetecto=config.resizeDetectorStrategy,resizeDetectorStrategy=void 0===_config$resizeDetecto?defaultConfig.resizeDetectorStrategy:_config$resizeDetecto;invariant__default.default(monitorWidth||monitorHeight,'You have to monitor at least one of the width or height when using "sizeMe"'),invariant__default.default(refreshRate>=16,"It is highly recommended that you don't put your refreshRate lower than 16 as this may cause layout thrashing."),invariant__default.default("throttle"===refreshMode||"debounce"===refreshMode,'The refreshMode should have a value of "throttle" or "debounce"');var refreshDelayStrategy="throttle"===refreshMode?throttleDebounce.throttle:throttleDebounce.debounce;return function WrapComponent(WrappedComponent){var SizeMeRenderWrapper=function renderWrapper(WrappedComponent){function SizeMeRenderer(props){var explicitRef=props.explicitRef,className=props.className,style=props.style,size=props.size,disablePlaceholder=props.disablePlaceholder;props.onSize;var restProps=_objectWithoutProperties(props,_excluded$1),renderPlaceholder=(null==size||null==size.width&&null==size.height)&&!disablePlaceholder,renderProps={className:className,style:style};null!=size&&(renderProps.size=size);var toRender=renderPlaceholder?React__default.default.createElement(Placeholder$1,{className:className,style:style}):React__default.default.createElement(WrappedComponent,_extends$2({},renderProps,restProps));return React__default.default.createElement(ReferenceWrapper,{ref:explicitRef},toRender)}return SizeMeRenderer.displayName="SizeMeRenderer(".concat(getDisplayName(WrappedComponent),")"),SizeMeRenderer}(WrappedComponent),SizeAwareComponent=function(_React$Component){_inherits$1(SizeAwareComponent,_React$Component);var _super2=_createSuper$1(SizeAwareComponent);function SizeAwareComponent(){var _this;_classCallCheck$1(this,SizeAwareComponent);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _defineProperty$2(_assertThisInitialized$3(_this=_super2.call.apply(_super2,[this].concat(args))),"domEl",null),_defineProperty$2(_assertThisInitialized$3(_this),"state",{width:void 0,height:void 0}),_defineProperty$2(_assertThisInitialized$3(_this),"uninstall",(function(){if(_this.domEl){try{_this.detector.uninstall(_this.domEl)}catch(err){console.warn("react-sizeme: an error occurred whilst stopping to listen to node size changes")}_this.domEl=null}})),_defineProperty$2(_assertThisInitialized$3(_this),"determineStrategy",(function(props){props.onSize?(_this.callbackState||(_this.callbackState=_objectSpread2({},_this.state)),_this.strategy="callback"):_this.strategy="render"})),_defineProperty$2(_assertThisInitialized$3(_this),"strategisedSetState",(function(state){"callback"===_this.strategy&&(_this.callbackState=state,_this.props.onSize(state)),_this.setState(state)})),_defineProperty$2(_assertThisInitialized$3(_this),"strategisedGetState",(function(){return"callback"===_this.strategy?_this.callbackState:_this.state})),_defineProperty$2(_assertThisInitialized$3(_this),"refCallback",(function(element){_this.element=element})),_defineProperty$2(_assertThisInitialized$3(_this),"hasSizeChanged",(function(current,next){var c=current,n=next;return monitorWidth&&c.width!==n.width||monitorHeight&&c.height!==n.height})),_defineProperty$2(_assertThisInitialized$3(_this),"checkIfSizeChanged",refreshDelayStrategy(refreshRate,(function(el){var _el$getBoundingClient=el.getBoundingClientRect(),width=_el$getBoundingClient.width,height=_el$getBoundingClient.height,next={width:monitorWidth?width:null,height:monitorHeight?height:null};_this.hasSizeChanged(_this.strategisedGetState(),next)&&_this.strategisedSetState(next)}))),_this}return _createClass$1(SizeAwareComponent,[{key:"componentDidMount",value:function componentDidMount(){this.detector=function resizeDetector(){var strategy=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"scroll";return instances[strategy]||(instances[strategy]=createResizeDetector__default.default({strategy:strategy})),instances[strategy]}(resizeDetectorStrategy),this.determineStrategy(this.props),this.handleDOMNode()}},{key:"componentDidUpdate",value:function componentDidUpdate(){this.determineStrategy(this.props),this.handleDOMNode()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.hasSizeChanged=function(){},this.checkIfSizeChanged=function(){},this.uninstall()}},{key:"handleDOMNode",value:function handleDOMNode(){var found=this.element&&ReactDOM__default.default.findDOMNode(this.element);found?this.domEl?(this.domEl.isSameNode&&!this.domEl.isSameNode(found)||this.domEl!==found)&&(this.uninstall(),this.domEl=found,this.detector.listenTo(this.domEl,this.checkIfSizeChanged)):(this.domEl=found,this.detector.listenTo(this.domEl,this.checkIfSizeChanged)):this.uninstall()}},{key:"render",value:function render(){var disablePlaceholder=withSize.enableSSRBehaviour||withSize.noPlaceholders||noPlaceholder||"callback"===this.strategy,size=_objectSpread2({},this.state);return React__default.default.createElement(SizeMeRenderWrapper,_extends$2({explicitRef:this.refCallback,size:"callback"===this.strategy?null:size,disablePlaceholder:disablePlaceholder},this.props))}}]),SizeAwareComponent}(React__default.default.Component);return _defineProperty$2(SizeAwareComponent,"displayName","SizeMe(".concat(getDisplayName(WrappedComponent),")")),SizeAwareComponent.WrappedComponent=WrappedComponent,SizeAwareComponent}}