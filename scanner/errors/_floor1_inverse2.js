function _floor1_inverse2($vb,$in,$memo,$out) {
 $vb = $vb|0;
 $in = $in|0;
 $memo = $memo|0;
 $out = $out|0;
 var $$0 = 0, $$pn$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0, $77 = 0, $8 = 0, $9 = 0;
 var $err$04$i = 0, $err$1$i = 0, $exitcond = 0, $exitcond$i = 0, $hx$0$lcssa = 0, $hx$03 = 0, $hx$1 = 0, $ispos$i = 0, $ispos1$i = 0, $j$02 = 0, $j$11 = 0, $lx$04 = 0, $lx$1 = 0, $ly$0$lcssa = 0, $ly$05 = 0, $ly$1 = 0, $neg$i = 0, $neg2$i = 0, $x1$n$i = 0, $y$03$i = 0;
 var $y$1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($in)) + 1296|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($vb)) + 64|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 28|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($vb)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + ($9<<2)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11|0) / 2)&-1;
 $13 = ($memo|0)==(0|0);
 if ($13) {
  $77 = $12 << 2;
  _memset(($out|0),0,($77|0))|0;
  $$0 = 0;
  return ($$0|0);
 }
 $14 = HEAP32[$memo>>2]|0;
 $15 = ((($1)) + 832|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = Math_imul($16, $14)|0;
 $18 = ($17|0)<(0);
 $19 = ($17|0)>(255);
 $20 = $19 ? 255 : $17;
 $21 = $18 ? 0 : $20;
 $22 = ((($in)) + 1284|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($23|0)>(1);
 if ($24) {
  $25 = ((($in)) + 260|0);
  $hx$03 = 0;$j$02 = 1;$lx$04 = 0;$ly$05 = $21;
  while(1) {
   $29 = (($25) + ($j$02<<2)|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($memo) + ($30<<2)|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = $32 & 32767;
   $34 = ($33|0)==($32|0);
   if ($34) {
    $35 = (((($1)) + 836|0) + ($30<<2)|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = Math_imul($16, $32)|0;
    $38 = ($37|0)<(0);
    $39 = ($37|0)>(255);
    $40 = $39 ? 255 : $37;
    $41 = $38 ? 0 : $40;
    $42 = (($41) - ($ly$05))|0;
    $43 = (($36) - ($lx$04))|0;
    $ispos$i = ($42|0)>(-1);
    $neg$i = (0 - ($42))|0;
    $44 = $ispos$i ? $42 : $neg$i;
    $45 = (($42|0) / ($43|0))&-1;
    $46 = $42 >> 31;
    $47 = $46 | 1;
    $48 = Math_imul($45, $43)|0;
    $ispos1$i = ($48|0)>(-1);
    $neg2$i = (0 - ($48))|0;
    $49 = $ispos1$i ? $48 : $neg2$i;
    $50 = (($44) - ($49))|0;
    $51 = ($12|0)>($36|0);
    $x1$n$i = $51 ? $36 : $12;
    $52 = ($x1$n$i|0)>($lx$04|0);
    if ($52) {
     $53 = (1768 + ($ly$05<<2)|0);
     $54 = +HEAPF32[$53>>2];
     $55 = (($out) + ($lx$04<<2)|0);
     $56 = +HEAPF32[$55>>2];
     $57 = $56 * $54;
     HEAPF32[$55>>2] = $57;
    }
    $58 = (($lx$04) + 1)|0;
    $59 = ($58|0)<($x1$n$i|0);
    if ($59) {
     $67 = $58;$err$04$i = 0;$y$03$i = $ly$05;
     while(1) {
      $60 = (($err$04$i) + ($50))|0;
      $61 = ($60|0)<($43|0);
      $62 = $61 ? 0 : $47;
      $63 = $61 ? 0 : $43;
      $err$1$i = (($60) - ($63))|0;
      $$pn$i = (($y$03$i) + ($45))|0;
      $y$1$i = (($$pn$i) + ($62))|0;
      $64 = (1768 + ($y$1$i<<2)|0);
      $65 = +HEAPF32[$64>>2];
      $66 = (($out) + ($67<<2)|0);
      $68 = +HEAPF32[$66>>2];
      $69 = $68 * $65;
      HEAPF32[$66>>2] = $69;
      $70 = (($67) + 1)|0;
      $exitcond$i = ($70|0)==($x1$n$i|0);
      if ($exitcond$i) {
       $hx$1 = $36;$lx$1 = $36;$ly$1 = $41;
       break;
      } else {
       $67 = $70;$err$04$i = $err$1$i;$y$03$i = $y$1$i;
      }
     }
    } else {
     $hx$1 = $36;$lx$1 = $36;$ly$1 = $41;
    }
   } else {
    $hx$1 = $hx$03;$lx$1 = $lx$04;$ly$1 = $ly$05;
   }
   $71 = (($j$02) + 1)|0;
   $72 = ($71|0)<($23|0);
   if ($72) {
    $hx$03 = $hx$1;$j$02 = $71;$lx$04 = $lx$1;$ly$05 = $ly$1;
   } else {
    $hx$0$lcssa = $hx$1;$ly$0$lcssa = $ly$1;
    break;
   }
  }
 } else {
  $hx$0$lcssa = 0;$ly$0$lcssa = $21;
 }
 $26 = ($hx$0$lcssa|0)<($12|0);
 if (!($26)) {
  $$0 = 1;
  return ($$0|0);
 }
 $27 = (1768 + ($ly$0$lcssa<<2)|0);
 $28 = +HEAPF32[$27>>2];
 $j$11 = $hx$0$lcssa;
 while(1) {
  $73 = (($out) + ($j$11<<2)|0);
  $74 = +HEAPF32[$73>>2];
  $75 = $74 * $28;
  HEAPF32[$73>>2] = $75;
  $76 = (($j$11) + 1)|0;
  $exitcond = ($76|0)==($12|0);
  if ($exitcond) {
   $$0 = 1;
   break;
  } else {
   $j$11 = $76;
  }
 }
 return ($$0|0);
}