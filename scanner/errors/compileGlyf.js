function compileGlyf(t,r,o){function moveTo(t,o){r.push({cmd:"moveTo",args:[t,o]})}function lineTo(t,o){r.push({cmd:"lineTo",args:[t,o]})}function quadraticCurveTo(t,o,c,l){r.push({cmd:"quadraticCurveTo",args:[t,o,c,l]})}var c,l=0,u=getInt16(t,l),h=0,d=0;l+=10;if(u<0)do{c=getUint16(t,l);var g=getUint16(t,l+2);l+=4;var y=void 0,m=void 0;if(1&c){if(2&c){y=getInt16(t,l);m=getInt16(t,l+2)}else{y=getUint16(t,l);m=getUint16(t,l+2)}l+=4}else if(2&c){y=getInt8(t,l++);m=getInt8(t,l++)}else{y=t[l++];m=t[l++]}if(2&c){h=y;d=m}else{h=0;d=0}var v=1,w=1,_=0,k=0;if(8&c){v=w=getFloat214(t,l);l+=2}else if(64&c){v=getFloat214(t,l);w=getFloat214(t,l+2);l+=4}else if(128&c){v=getFloat214(t,l);_=getFloat214(t,l+2);k=getFloat214(t,l+4);w=getFloat214(t,l+6);l+=8}var S=o.glyphs[g];if(S){r.push({cmd:"save"},{cmd:"transform",args:[v,_,k,w,h,d]});compileGlyf(S,r,o);r.push({cmd:"restore"})}}while(32&c);else{var C,x,O=[];for(C=0;C<u;C++){O.push(getUint16(t,l));l+=2}l+=2+getUint16(t,l);for(var T=O.at(-1)+1,E=[];E.length<T;){var M=1;8&(c=t[l++])&&(M+=t[l++]);for(;M-- >0;)E.push({flags:c})}for(C=0;C<T;C++){switch(18&E[C].flags){case 0:h+=getInt16(t,l);l+=2;break;case 2:h-=t[l++];break;case 18:h+=t[l++]}E[C].x=h}for(C=0;C<T;C++){switch(36&E[C].flags){case 0:d+=getInt16(t,l);l+=2;break;case 4:d-=t[l++];break;case 36:d+=t[l++]}E[C].y=d}var R=0;for(l=0;l<u;l++){var L=O[l],j=E.slice(R,L+1);if(1&j[0].flags)j.push(j[0]);else if(1&j.at(-1).flags)j.unshift(j.at(-1));else{var D={flags:1,x:(j[0].x+j.at(-1).x)/2,y:(j[0].y+j.at(-1).y)/2};j.unshift(D);j.push(D)}moveTo(j[0].x,j[0].y);for(C=1,x=j.length;C<x;C++)if(1&j[C].flags)lineTo(j[C].x,j[C].y);else if(1&j[C+1].flags){quadraticCurveTo(j[C].x,j[C].y,j[C+1].x,j[C+1].y);C++}else quadraticCurveTo(j[C].x,j[C].y,(j[C].x+j[C+1].x)/2,(j[C].y+j[C+1].y)/2);R=L+1}}}