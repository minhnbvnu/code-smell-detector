function __01forward($opb,$vl,$in,$ch,$partword) {
 $opb = $opb|0;
 $vl = $vl|0;
 $in = $in|0;
 $ch = $ch|0;
 $partword = $partword|0;
 var $$09$i$i = 0, $$lcssa$i$i = 0, $$lcssa7$i$i = 0, $$lcssa72 = 0, $$pre$i = 0, $$pre43 = 0, $$pre44 = 0, $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $best$020$i$i = 0;
 var $best$1$i$i = 0, $bits$0$lcssa$i = 0, $bits$08$i = 0, $brmerge$demorgan = 0, $e$i$i = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i$i = 0, $exitcond15$i = 0, $exitcond35 = 0, $exitcond36 = 0, $exitcond37 = 0, $exitcond38 = 0, $exitcond41$i$i = 0, $exitcond42$i$i = 0, $exitcond43$i$i = 0, $i$024 = 0, $i$033$i$i = 0, $i$09$i = 0, $i$1$lcssa = 0;
 var $i$121 = 0, $i$128$i$i = 0, $i$221$i$i = 0, $i$38$i$i = 0, $index$031$i$i = 0, $index$126$i$i = 0, $index$2$i$i = 0, $index$319$i$i = 0, $index$4$i$i = 0, $index$5$i$i = 0, $j$010$i$i = 0, $j$013 = 0, $j$013$us = 0, $j$113$i$i = 0, $j$115 = 0, $k$012$us = 0, $k$120 = 0, $o$032$i$i = 0, $o$127$i$i = 0, $or$cond$i$i = 0;
 var $or$cond19 = 0, $or$cond50$i$i = 0, $p$i$i = 0, $resbits = 0, $resvals = 0, $s$026 = 0, $this$0$lcssa$i$i = 0, $this$011$i$i = 0, $umax = 0, $val$011$us = 0, $val$1$us = 0, $val$1$us$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088|0;
 $p$i$i = sp + 1056|0;
 $e$i$i = sp + 1024|0;
 $resbits = sp + 512|0;
 $resvals = sp;
 $0 = HEAP32[$vl>>2]|0;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($vl)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$0>>2]|0;
 $11 = (($9) - ($10))|0;
 $12 = (($11|0) / ($2|0))&-1;
 _memset(($resbits|0),0,512)|0;
 _memset(($resvals|0),0,512)|0;
 $13 = ((($vl)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)>(0);
 if (!($15)) {
  STACKTOP = sp;return;
 }
 $16 = ($12|0)>(0);
 $17 = ($ch|0)>(0);
 $18 = ($7|0)>(1);
 $19 = ((($vl)) + 36|0);
 $20 = ($7|0)>(0);
 $21 = ((($vl)) + 20|0);
 $22 = ((($vl)) + 32|0);
 $23 = (0 - ($7))|0;
 $207 = $14;$s$026 = 0;
 while(1) {
  if ($16) {
   $24 = ($s$026|0)==(0);
   $25 = 1 << $s$026;
   $brmerge$demorgan = $24 & $17;
   $i$024 = 0;
   while(1) {
    L10: do {
     if ($brmerge$demorgan) {
      if ($18) {
       $j$013$us = 0;
      } else {
       $j$013 = 0;
       while(1) {
        $51 = (($partword) + ($j$013<<2)|0);
        $52 = HEAP32[$51>>2]|0;
        $53 = (($52) + ($i$024<<2)|0);
        $54 = HEAP32[$53>>2]|0;
        $55 = HEAP32[$5>>2]|0;
        $56 = ((($55)) + 4|0);
        $57 = HEAP32[$56>>2]|0;
        $58 = ($54|0)<($57|0);
        if ($58) {
         $59 = (_vorbis_book_encode($55,$54,$opb)|0);
         $60 = HEAP32[$19>>2]|0;
         $61 = (($60) + ($59))|0;
         HEAP32[$19>>2] = $61;
        }
        $62 = (($j$013) + 1)|0;
        $exitcond = ($62|0)==($ch|0);
        if ($exitcond) {
         break L10;
        } else {
         $j$013 = $62;
        }
       }
      }
      while(1) {
       $44 = (($partword) + ($j$013$us<<2)|0);
       $40 = HEAP32[$44>>2]|0;
       $45 = (($40) + ($i$024<<2)|0);
       $46 = HEAP32[$45>>2]|0;
       $k$012$us = 1;$val$011$us = $46;
       while(1) {
        $36 = Math_imul($val$011$us, $4)|0;
        $37 = (($k$012$us) + ($i$024))|0;
        $38 = ($37|0)<($12|0);
        if ($38) {
         $39 = (($40) + ($37<<2)|0);
         $41 = HEAP32[$39>>2]|0;
         $42 = (($41) + ($36))|0;
         $val$1$us = $42;
        } else {
         $val$1$us = $36;
        }
        $43 = (($k$012$us) + 1)|0;
        $exitcond37 = ($43|0)==($7|0);
        if ($exitcond37) {
         $val$1$us$lcssa = $val$1$us;
         break;
        } else {
         $k$012$us = $43;$val$011$us = $val$1$us;
        }
       }
       $28 = HEAP32[$5>>2]|0;
       $29 = ((($28)) + 4|0);
       $30 = HEAP32[$29>>2]|0;
       $31 = ($val$1$us$lcssa|0)<($30|0);
       if ($31) {
        $32 = (_vorbis_book_encode($28,$val$1$us$lcssa,$opb)|0);
        $33 = HEAP32[$19>>2]|0;
        $34 = (($33) + ($32))|0;
        HEAP32[$19>>2] = $34;
       }
       $35 = (($j$013$us) + 1)|0;
       $exitcond38 = ($35|0)==($ch|0);
       if ($exitcond38) {
        break;
       } else {
        $j$013$us = $35;
       }
      }
     }
    } while(0);
    $47 = ($i$024|0)<($12|0);
    $or$cond19 = $20 & $47;
    if ($or$cond19) {
     $48 = (($i$024) - ($12))|0;
     $49 = ($48>>>0)<($23>>>0);
     $umax = $49 ? $23 : $48;
     $50 = (0 - ($umax))|0;
     $i$121 = $i$024;$k$120 = 0;
     while(1) {
      $63 = Math_imul($i$121, $2)|0;
      $64 = HEAP32[$0>>2]|0;
      $65 = (($64) + ($63))|0;
      if ($17) {
       $j$115 = 0;
       while(1) {
        $66 = (($partword) + ($j$115<<2)|0);
        $67 = HEAP32[$66>>2]|0;
        $68 = (($67) + ($i$121<<2)|0);
        $69 = HEAP32[$68>>2]|0;
        if ($24) {
         $70 = (($resvals) + ($69<<2)|0);
         $71 = HEAP32[$70>>2]|0;
         $72 = (($71) + ($2))|0;
         HEAP32[$70>>2] = $72;
        }
        $73 = (((($0)) + 24|0) + ($69<<2)|0);
        $74 = HEAP32[$73>>2]|0;
        $75 = $74 & $25;
        $76 = ($75|0)==(0);
        if (!($76)) {
         $77 = HEAP32[$21>>2]|0;
         $78 = (($77) + ($69<<2)|0);
         $79 = HEAP32[$78>>2]|0;
         $80 = (($79) + ($s$026<<2)|0);
         $81 = HEAP32[$80>>2]|0;
         $82 = ($81|0)==(0|0);
         if (!($82)) {
          $83 = (($in) + ($j$115<<2)|0);
          $84 = HEAP32[$83>>2]|0;
          $85 = HEAP32[$81>>2]|0;
          $86 = (($2|0) / ($85|0))&-1;
          $87 = ($86|0)>(0);
          if ($87) {
           $88 = ((($81)) + 48|0);
           $89 = ((($81)) + 52|0);
           $90 = ((($81)) + 44|0);
           $91 = ((($81)) + 12|0);
           $92 = ((($81)) + 4|0);
           $100 = $85;$bits$08$i = 0;$i$09$i = 0;
           while(1) {
            $93 = Math_imul($i$09$i, $85)|0;
            $$sum = (($93) + ($65))|0;
            $94 = (($84) + ($$sum<<2)|0);
            $95 = HEAP32[$88>>2]|0;
            $96 = HEAP32[$89>>2]|0;
            $97 = HEAP32[$90>>2]|0;
            $98 = $97 >> 1;
            ;HEAP32[$p$i$i>>2]=0|0;HEAP32[$p$i$i+4>>2]=0|0;HEAP32[$p$i$i+8>>2]=0|0;HEAP32[$p$i$i+12>>2]=0|0;HEAP32[$p$i$i+16>>2]=0|0;HEAP32[$p$i$i+20>>2]=0|0;HEAP32[$p$i$i+24>>2]=0|0;HEAP32[$p$i$i+28>>2]=0|0;
            $99 = ($96|0)==(1);
            $101 = ($100|0)>(0);
            do {
             if ($99) {
              if (!($101)) {
               $index$2$i$i = 0;
               break;
              }
              $105 = (($97) + -1)|0;
              $i$128$i$i = 0;$index$126$i$i = 0;$o$127$i$i = $100;
              while(1) {
               $128 = (($o$127$i$i) + -1)|0;
               $$sum3 = (($$sum) + ($128))|0;
               $129 = (($84) + ($$sum3<<2)|0);
               $130 = HEAP32[$129>>2]|0;
               $131 = (($130) - ($95))|0;
               $132 = ($131|0)<($98|0);
               if ($132) {
                $133 = (($98) - ($131))|0;
                $134 = $133 << 1;
                $135 = (($134) + -1)|0;
                $139 = $135;
               } else {
                $136 = (($131) - ($98))|0;
                $137 = $136 << 1;
                $139 = $137;
               }
               $138 = Math_imul($index$126$i$i, $97)|0;
               $140 = ($139|0)<(0);
               $141 = ($139|0)>=($97|0);
               $142 = $141 ? $105 : $139;
               $143 = $140 ? 0 : $142;
               $144 = (($143) + ($138))|0;
               $145 = (($p$i$i) + ($128<<2)|0);
               HEAP32[$145>>2] = $130;
               $146 = (($i$128$i$i) + 1)|0;
               $exitcond42$i$i = ($146|0)==($100|0);
               if ($exitcond42$i$i) {
                $index$2$i$i = $144;
                break;
               } else {
                $i$128$i$i = $146;$index$126$i$i = $144;$o$127$i$i = $128;
               }
              }
             } else {
              if (!($101)) {
               $index$2$i$i = 0;
               break;
              }
              $102 = $96 >> 1;
              $103 = (($102) - ($95))|0;
              $104 = (($97) + -1)|0;
              $i$033$i$i = 0;$index$031$i$i = 0;$o$032$i$i = $100;
              while(1) {
               $106 = (($o$032$i$i) + -1)|0;
               $$sum2 = (($$sum) + ($106))|0;
               $107 = (($84) + ($$sum2<<2)|0);
               $108 = HEAP32[$107>>2]|0;
               $109 = (($103) + ($108))|0;
               $110 = (($109|0) / ($96|0))&-1;
               $111 = ($110|0)<($98|0);
               if ($111) {
                $112 = (($98) - ($110))|0;
                $113 = $112 << 1;
                $114 = (($113) + -1)|0;
                $118 = $114;
               } else {
                $115 = (($110) - ($98))|0;
                $116 = $115 << 1;
                $118 = $116;
               }
               $117 = Math_imul($index$031$i$i, $97)|0;
               $119 = ($118|0)<(0);
               $120 = ($118|0)>=($97|0);
               $121 = $120 ? $104 : $118;
               $122 = $119 ? 0 : $121;
               $123 = (($122) + ($117))|0;
               $124 = Math_imul($110, $96)|0;
               $125 = (($124) + ($95))|0;
               $126 = (($p$i$i) + ($106<<2)|0);
               HEAP32[$126>>2] = $125;
               $127 = (($i$033$i$i) + 1)|0;
               $exitcond43$i$i = ($127|0)==($100|0);
               if ($exitcond43$i$i) {
                $index$2$i$i = $123;
                break;
               } else {
                $i$033$i$i = $127;$index$031$i$i = $123;$o$032$i$i = $106;
               }
              }
             }
            } while(0);
            $147 = HEAP32[$91>>2]|0;
            $148 = ((($147)) + 8|0);
            $149 = HEAP32[$148>>2]|0;
            $150 = (($149) + ($index$2$i$i)|0);
            $151 = HEAP8[$150>>0]|0;
            $152 = ($151<<24>>24)<(1);
            do {
             if ($152) {
              ;HEAP32[$e$i$i>>2]=0|0;HEAP32[$e$i$i+4>>2]=0|0;HEAP32[$e$i$i+8>>2]=0|0;HEAP32[$e$i$i+12>>2]=0|0;HEAP32[$e$i$i+16>>2]=0|0;HEAP32[$e$i$i+20>>2]=0|0;HEAP32[$e$i$i+24>>2]=0|0;HEAP32[$e$i$i+28>>2]=0|0;
              $153 = (($97) + -1)|0;
              $154 = Math_imul($153, $96)|0;
              $155 = (($154) + ($95))|0;
              $156 = HEAP32[$92>>2]|0;
              $157 = ($156|0)>(0);
              if ($157) {
               $best$020$i$i = -1;$i$221$i$i = 0;$index$319$i$i = $index$2$i$i;
              } else {
               $index$5$i$i = $index$2$i$i;
               break;
              }
              while(1) {
               $158 = (($149) + ($i$221$i$i)|0);
               $159 = HEAP8[$158>>0]|0;
               $160 = ($159<<24>>24)>(0);
               do {
                if ($160) {
                 if ($101) {
                  $j$010$i$i = 0;$this$011$i$i = 0;
                  while(1) {
                   $161 = (($e$i$i) + ($j$010$i$i<<2)|0);
                   $162 = HEAP32[$161>>2]|0;
                   $$sum1 = (($$sum) + ($j$010$i$i))|0;
                   $163 = (($84) + ($$sum1<<2)|0);
                   $164 = HEAP32[$163>>2]|0;
                   $165 = (($162) - ($164))|0;
                   $166 = Math_imul($165, $165)|0;
                   $167 = (($166) + ($this$011$i$i))|0;
                   $168 = (($j$010$i$i) + 1)|0;
                   $exitcond41$i$i = ($168|0)==($100|0);
                   if ($exitcond41$i$i) {
                    $this$0$lcssa$i$i = $167;
                    break;
                   } else {
                    $j$010$i$i = $168;$this$011$i$i = $167;
                   }
                  }
                 } else {
                  $this$0$lcssa$i$i = 0;
                 }
                 $169 = ($best$020$i$i|0)==(-1);
                 $170 = ($this$0$lcssa$i$i|0)<($best$020$i$i|0);
                 $or$cond$i$i = $169 | $170;
                 if (!($or$cond$i$i)) {
                  $best$1$i$i = $best$020$i$i;$index$4$i$i = $index$319$i$i;
                  break;
                 }
                 ;HEAP32[$p$i$i>>2]=HEAP32[$e$i$i>>2]|0;HEAP32[$p$i$i+4>>2]=HEAP32[$e$i$i+4>>2]|0;HEAP32[$p$i$i+8>>2]=HEAP32[$e$i$i+8>>2]|0;HEAP32[$p$i$i+12>>2]=HEAP32[$e$i$i+12>>2]|0;HEAP32[$p$i$i+16>>2]=HEAP32[$e$i$i+16>>2]|0;HEAP32[$p$i$i+20>>2]=HEAP32[$e$i$i+20>>2]|0;HEAP32[$p$i$i+24>>2]=HEAP32[$e$i$i+24>>2]|0;HEAP32[$p$i$i+28>>2]=HEAP32[$e$i$i+28>>2]|0;
                 $best$1$i$i = $this$0$lcssa$i$i;$index$4$i$i = $i$221$i$i;
                } else {
                 $best$1$i$i = $best$020$i$i;$index$4$i$i = $index$319$i$i;
                }
               } while(0);
               $171 = HEAP32[$e$i$i>>2]|0;
               $172 = ($171|0)<($155|0);
               if ($172) {
                $$lcssa$i$i = $e$i$i;$$lcssa7$i$i = $171;
               } else {
                $174 = $e$i$i;$j$113$i$i = 0;
                while(1) {
                 $173 = (($j$113$i$i) + 1)|0;
                 HEAP32[$174>>2] = 0;
                 $175 = (($e$i$i) + ($173<<2)|0);
                 $176 = HEAP32[$175>>2]|0;
                 $177 = ($176|0)<($155|0);
                 if ($177) {
                  $$lcssa$i$i = $175;$$lcssa7$i$i = $176;
                  break;
                 } else {
                  $174 = $175;$j$113$i$i = $173;
                 }
                }
               }
               $178 = ($$lcssa7$i$i|0)>(-1);
               if ($178) {
                $179 = (($$lcssa7$i$i) + ($96))|0;
                HEAP32[$$lcssa$i$i>>2] = $179;
                $181 = $179;
               } else {
                $181 = $$lcssa7$i$i;
               }
               $180 = (0 - ($181))|0;
               HEAP32[$$lcssa$i$i>>2] = $180;
               $182 = (($i$221$i$i) + 1)|0;
               $exitcond$i = ($182|0)==($156|0);
               if ($exitcond$i) {
                $index$5$i$i = $index$4$i$i;
                break;
               } else {
                $best$020$i$i = $best$1$i$i;$i$221$i$i = $182;$index$319$i$i = $index$4$i$i;
               }
              }
             } else {
              $index$5$i$i = $index$2$i$i;
             }
            } while(0);
            $183 = ($index$5$i$i|0)>(-1);
            $or$cond50$i$i = $101 & $183;
            if ($or$cond50$i$i) {
             $$09$i$i = $94;$i$38$i$i = 0;
             while(1) {
              $184 = (($p$i$i) + ($i$38$i$i<<2)|0);
              $185 = HEAP32[$184>>2]|0;
              $186 = ((($$09$i$i)) + 4|0);
              $187 = HEAP32[$$09$i$i>>2]|0;
              $188 = (($187) - ($185))|0;
              HEAP32[$$09$i$i>>2] = $188;
              $189 = (($i$38$i$i) + 1)|0;
              $exitcond$i$i = ($189|0)==($100|0);
              if ($exitcond$i$i) {
               break;
              } else {
               $$09$i$i = $186;$i$38$i$i = $189;
              }
             }
            }
            $190 = (_vorbis_book_encode($81,$index$5$i$i,$opb)|0);
            $191 = (($190) + ($bits$08$i))|0;
            $192 = (($i$09$i) + 1)|0;
            $exitcond15$i = ($192|0)==($86|0);
            if ($exitcond15$i) {
             $$lcssa72 = $191;
             break;
            }
            $$pre$i = HEAP32[$81>>2]|0;
            $100 = $$pre$i;$bits$08$i = $191;$i$09$i = $192;
           }
           $$pre43 = HEAP32[$66>>2]|0;
           $196 = $$pre43;$bits$0$lcssa$i = $$lcssa72;
          } else {
           $196 = $67;$bits$0$lcssa$i = 0;
          }
          $193 = HEAP32[$22>>2]|0;
          $194 = (($193) + ($bits$0$lcssa$i))|0;
          HEAP32[$22>>2] = $194;
          $195 = (($196) + ($i$121<<2)|0);
          $197 = HEAP32[$195>>2]|0;
          $198 = (($resbits) + ($197<<2)|0);
          $199 = HEAP32[$198>>2]|0;
          $200 = (($199) + ($bits$0$lcssa$i))|0;
          HEAP32[$198>>2] = $200;
         }
        }
        $201 = (($j$115) + 1)|0;
        $exitcond35 = ($201|0)==($ch|0);
        if ($exitcond35) {
         break;
        } else {
         $j$115 = $201;
        }
       }
      }
      $202 = (($k$120) + 1)|0;
      $203 = (($i$121) + 1)|0;
      $exitcond36 = ($202|0)==($50|0);
      if ($exitcond36) {
       break;
      } else {
       $i$121 = $203;$k$120 = $202;
      }
     }
     $26 = (($i$024) - ($umax))|0;
     $i$1$lcssa = $26;
    } else {
     $i$1$lcssa = $i$024;
    }
    $27 = ($i$1$lcssa|0)<($12|0);
    if ($27) {
     $i$024 = $i$1$lcssa;
    } else {
     break;
    }
   }
   $$pre44 = HEAP32[$13>>2]|0;
   $206 = $$pre44;
  } else {
   $206 = $207;
  }
  $204 = (($s$026) + 1)|0;
  $205 = ($204|0)<($206|0);
  if ($205) {
   $207 = $206;$s$026 = $204;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}