function PDFImage(t){var r=t.xref,o=t.res,l=t.image,d=t.isInline,g=void 0!==d&&d,v=t.smask,w=void 0===v?null:v,_=t.mask,k=void 0===_?null:_,S=t.isMask,C=void 0!==S&&S,x=t.pdfFunctionFactory,O=t.localColorSpaceCache;!function _classCallCheck(t,r){if(!(t instanceof r))throw new TypeError("Cannot call a class as a function")}(this,PDFImage);this.image=l;var T,E=l.dict,M=E.get("F","Filter");if(M instanceof m.Name)T=M.name;else if(Array.isArray(M)){var R=r.fetchIfRef(M[0]);R instanceof m.Name&&(T=R.name)}switch(T){case"JPXDecode":var L=new y.JpxImage;L.parseImageProperties(l.stream);l.stream.reset();l.width=L.width;l.height=L.height;l.bitsPerComponent=L.bitsPerComponent;l.numComps=L.componentsCount;break;case"JBIG2Decode":l.bitsPerComponent=1;l.numComps=1}var j=E.get("W","Width"),D=E.get("H","Height");if(Number.isInteger(l.width)&&l.width>0&&Number.isInteger(l.height)&&l.height>0&&(l.width!==j||l.height!==D)){(0,c.warn)("PDFImage - using the Width/Height of the image data, rather than the image dictionary.");j=l.width;D=l.height}if(j<1||D<1)throw new c.FormatError("Invalid image width: ".concat(j," or height: ").concat(D));this.width=j;this.height=D;this.interpolate=E.get("I","Interpolate");this.imageMask=E.get("IM","ImageMask")||!1;this.matte=E.get("Matte")||!1;var N=l.bitsPerComponent;if(!N&&!(N=E.get("BPC","BitsPerComponent"))){if(!this.imageMask)throw new c.FormatError("Bits per component missing in image: ".concat(this.imageMask));N=1}this.bpc=N;if(!this.imageMask){var U=E.getRaw("CS")||E.getRaw("ColorSpace");if(!U){(0,c.info)("JPX images (which do not require color spaces)");switch(l.numComps){case 1:U=m.Name.get("DeviceGray");break;case 3:U=m.Name.get("DeviceRGB");break;case 4:U=m.Name.get("DeviceCMYK");break;default:throw new Error("JPX images with ".concat(l.numComps," color components not supported."))}}this.colorSpace=h.ColorSpace.parse({cs:U,xref:r,resources:g?o:null,pdfFunctionFactory:x,localColorSpaceCache:O});this.numComps=this.colorSpace.numComps}this.decode=E.getArray("D","Decode");this.needsDecode=!1;if(this.decode&&(this.colorSpace&&!this.colorSpace.isDefaultDecode(this.decode,N)||C&&!h.ColorSpace.isDefaultDecode(this.decode,1))){this.needsDecode=!0;var H=(1<<N)-1;this.decodeCoefficients=[];this.decodeAddends=[];for(var G=this.colorSpace&&"Indexed"===this.colorSpace.name,$=0,X=0;$<this.decode.length;$+=2,++X){var q=this.decode[$],z=this.decode[$+1];this.decodeCoefficients[X]=G?(z-q)/H:z-q;this.decodeAddends[X]=G?q:H*q}}if(w)this.smask=new PDFImage({xref:r,res:o,image:w,isInline:g,pdfFunctionFactory:x,localColorSpaceCache:O});else if(k)if(k instanceof u.BaseStream){k.dict.get("IM","ImageMask")?this.mask=new PDFImage({xref:r,res:o,image:k,isInline:g,isMask:!0,pdfFunctionFactory:x,localColorSpaceCache:O}):(0,c.warn)("Ignoring /Mask in image without /ImageMask.")}else this.mask=k}