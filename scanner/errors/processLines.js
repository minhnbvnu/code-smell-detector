function processLines(codeTree,wrapLines,lineProps,showLineNumbers,showInlineLineNumbers,startingLineNumber,largestLineNumber,lineNumberStyle,wrapLongLines){var _ref4,tree=flattenCodeTree(codeTree.value),newTree=[],lastLineBreakIndex=-1,index=0;function createLine(children,lineNumber){var className=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return wrapLines||className.length>0?function createWrappedLine(children,lineNumber){return createLineElement({children:children,lineNumber:lineNumber,lineNumberStyle:lineNumberStyle,largestLineNumber:largestLineNumber,showInlineLineNumbers:showInlineLineNumbers,lineProps:lineProps,className:arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],showLineNumbers:showLineNumbers,wrapLongLines:wrapLongLines})}(children,lineNumber,className):function createUnwrappedLine(children,lineNumber){if(showLineNumbers&&lineNumber&&showInlineLineNumbers){var inlineLineNumberStyle=assembleLineNumberStyles(lineNumberStyle,lineNumber,largestLineNumber);children.unshift(getInlineLineNumber(lineNumber,inlineLineNumberStyle))}return children}(children,lineNumber)}for(var _loop=function _loop(){var node=tree[index],value=node.children[0].value;if(function getNewLines(str){return str.match(newLineRegex)}(value)){var splitValue=value.split("\n");splitValue.forEach((function(text,i){var lineNumber=showLineNumbers&&newTree.length+startingLineNumber,newChild={type:"text",value:"".concat(text,"\n")};if(0===i){var _line=createLine(tree.slice(lastLineBreakIndex+1,index).concat(createLineElement({children:[newChild],className:node.properties.className})),lineNumber);newTree.push(_line)}else if(i===splitValue.length-1){if(tree[index+1]&&tree[index+1].children&&tree[index+1].children[0]){var newElem=createLineElement({children:[{type:"text",value:"".concat(text)}],className:node.properties.className});tree.splice(index+1,0,newElem)}else{var _line2=createLine([newChild],lineNumber,node.properties.className);newTree.push(_line2)}}else{var _line3=createLine([newChild],lineNumber,node.properties.className);newTree.push(_line3)}})),lastLineBreakIndex=index}index++};index<tree.length;)_loop();if(lastLineBreakIndex!==tree.length-1){var children=tree.slice(lastLineBreakIndex+1,tree.length);if(children&&children.length){var line=createLine(children,showLineNumbers&&newTree.length+startingLineNumber);newTree.push(line)}}return wrapLines?newTree:(_ref4=[]).concat.apply(_ref4,newTree)}