function _res2_inverse($vb,$vl,$in,$nonzero,$ch) {
 $vb = $vb|0;
 $vl = $vl|0;
 $in = $in|0;
 $nonzero = $nonzero|0;
 $ch = $ch|0;
 var $$ = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $9 = 0, $i$0$lcssa = 0, $i$014 = 0, $i$110 = 0, $i$2$lcssa = 0, $i$28 = 0, $k$07 = 0, $l$09 = 0, $or$cond = 0, $or$cond6 = 0, $s$012 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$vl>>2]|0;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($vl)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($vb)) + 36|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = Math_imul($7, $ch)|0;
 $9 = $8 >> 1;
 $10 = ((($0)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)<($9|0);
 $$ = $12 ? $11 : $9;
 $13 = HEAP32[$0>>2]|0;
 $14 = (($$) - ($13))|0;
 $15 = ($14|0)>(0);
 if (!($15)) {
  return 0;
 }
 $16 = (($14|0) / ($2|0))&-1;
 $17 = (($5) + -1)|0;
 $18 = (($17) + ($16))|0;
 $19 = (($18|0) / ($5|0))&-1;
 $20 = $19 << 2;
 $21 = (__vorbis_block_alloc($vb,$20)|0);
 $22 = ($ch|0)>(0);
 L4: do {
  if ($22) {
   $i$014 = 0;
   while(1) {
    $23 = (($nonzero) + ($i$014<<2)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)==(0);
    if (!($25)) {
     $i$0$lcssa = $i$014;
     break L4;
    }
    $26 = (($i$014) + 1)|0;
    $27 = ($26|0)<($ch|0);
    if ($27) {
     $i$014 = $26;
    } else {
     $i$0$lcssa = $26;
     break;
    }
   }
  } else {
   $i$0$lcssa = 0;
  }
 } while(0);
 $28 = ($i$0$lcssa|0)==($ch|0);
 if ($28) {
  return 0;
 }
 $29 = ((($vl)) + 8|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = ($30|0)>(0);
 if (!($31)) {
  return 0;
 }
 $32 = ($16|0)>(0);
 $33 = ((($vb)) + 4|0);
 $34 = ((($0)) + 16|0);
 $35 = ((($vl)) + 28|0);
 $36 = ($5|0)>(0);
 $37 = ((($vl)) + 20|0);
 $79 = $30;$s$012 = 0;
 L15: while(1) {
  if ($32) {
   $38 = ($s$012|0)==(0);
   $39 = 1 << $s$012;
   $i$110 = 0;$l$09 = 0;
   while(1) {
    if ($38) {
     $40 = HEAP32[$3>>2]|0;
     $41 = (_vorbis_book_decode($40,$33)|0);
     $42 = ($41|0)==(-1);
     if ($42) {
      label = 23;
      break L15;
     }
     $43 = HEAP32[$34>>2]|0;
     $44 = ($41|0)<($43|0);
     if (!($44)) {
      label = 23;
      break L15;
     }
     $45 = HEAP32[$35>>2]|0;
     $46 = (($45) + ($41<<2)|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = (($21) + ($l$09<<2)|0);
     HEAP32[$48>>2] = $47;
     $49 = ($47|0)==(0|0);
     if ($49) {
      label = 23;
      break L15;
     }
    }
    $50 = ($i$110|0)<($16|0);
    $or$cond6 = $36 & $50;
    if ($or$cond6) {
     $51 = (($21) + ($l$09<<2)|0);
     $i$28 = $i$110;$k$07 = 0;
     while(1) {
      $52 = HEAP32[$51>>2]|0;
      $53 = (($52) + ($k$07<<2)|0);
      $54 = HEAP32[$53>>2]|0;
      $55 = (((($0)) + 24|0) + ($54<<2)|0);
      $56 = HEAP32[$55>>2]|0;
      $57 = $56 & $39;
      $58 = ($57|0)==(0);
      if (!($58)) {
       $59 = HEAP32[$37>>2]|0;
       $60 = (($59) + ($54<<2)|0);
       $61 = HEAP32[$60>>2]|0;
       $62 = (($61) + ($s$012<<2)|0);
       $63 = HEAP32[$62>>2]|0;
       $64 = ($63|0)==(0|0);
       if (!($64)) {
        $65 = Math_imul($i$28, $2)|0;
        $66 = HEAP32[$0>>2]|0;
        $67 = (($66) + ($65))|0;
        $68 = (_vorbis_book_decodevv_add($63,$in,$67,$ch,$33,$2)|0);
        $69 = ($68|0)==(-1);
        if ($69) {
         label = 23;
         break L15;
        }
       }
      }
      $70 = (($k$07) + 1)|0;
      $71 = (($i$28) + 1)|0;
      $72 = ($70|0)<($5|0);
      $73 = ($71|0)<($16|0);
      $or$cond = $72 & $73;
      if ($or$cond) {
       $i$28 = $71;$k$07 = $70;
      } else {
       $i$2$lcssa = $71;
       break;
      }
     }
    } else {
     $i$2$lcssa = $i$110;
    }
    $74 = (($l$09) + 1)|0;
    $75 = ($i$2$lcssa|0)<($16|0);
    if ($75) {
     $i$110 = $i$2$lcssa;$l$09 = $74;
    } else {
     break;
    }
   }
   $$pre = HEAP32[$29>>2]|0;
   $78 = $$pre;
  } else {
   $78 = $79;
  }
  $76 = (($s$012) + 1)|0;
  $77 = ($76|0)<($78|0);
  if ($77) {
   $79 = $78;$s$012 = $76;
  } else {
   label = 23;
   break;
  }
 }
 if ((label|0) == 23) {
  return 0;
 }
 return (0)|0;
}