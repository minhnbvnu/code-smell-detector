function bounds(path,bounds){var current,previous=null,x=0,y=0,controlX=0,controlY=0,tempX,tempY,tempControlX,tempControlY;for(var i=0,len=path.length;i<len;++i){current=path[i];switch(current[0]){case"l":x+=current[1];y+=current[2];bounds.add(x,y);break;case"L":x=current[1];y=current[2];bounds.add(x,y);break;case"h":x+=current[1];bounds.add(x,y);break;case"H":x=current[1];bounds.add(x,y);break;case"v":y+=current[1];bounds.add(x,y);break;case"V":y=current[1];bounds.add(x,y);break;case"m":x+=current[1];y+=current[2];bounds.add(x,y);break;case"M":x=current[1];y=current[2];bounds.add(x,y);break;case"c":tempX=x+current[5];tempY=y+current[6];controlX=x+current[3];controlY=y+current[4];bounds.add(x+current[1],y+current[2]);bounds.add(controlX,controlY);bounds.add(tempX,tempY);x=tempX;y=tempY;break;case"C":x=current[5];y=current[6];controlX=current[3];controlY=current[4];bounds.add(current[1],current[2]);bounds.add(controlX,controlY);bounds.add(x,y);break;case"s":tempX=x+current[3];tempY=y+current[4];controlX=2*x-controlX;controlY=2*y-controlY;bounds.add(controlX,controlY);bounds.add(x+current[1],y+current[2]);bounds.add(tempX,tempY);controlX=x+current[1];controlY=y+current[2];x=tempX;y=tempY;break;case"S":tempX=current[3];tempY=current[4];controlX=2*x-controlX;controlY=2*y-controlY;x=tempX;y=tempY;bounds.add(current[1],current[2]);bounds.add(controlX,controlY);bounds.add(tempX,tempY);controlX=current[1];controlY=current[2];break;case"q":tempX=x+current[3];tempY=y+current[4];controlX=x+current[1];controlY=y+current[2];x=tempX;y=tempY;bounds.add(controlX,controlY);bounds.add(tempX,tempY);break;case"Q":tempX=current[3];tempY=current[4];x=tempX;y=tempY;controlX=current[1];controlY=current[2];bounds.add(controlX,controlY);bounds.add(tempX,tempY);break;case"t":tempX=x+current[1];tempY=y+current[2];if(previous[0].match(/[QqTt]/)===null){controlX=x;controlY=y}else if(previous[0]==="t"){controlX=2*x-tempControlX;controlY=2*y-tempControlY}else if(previous[0]==="q"){controlX=2*x-controlX;controlY=2*y-controlY}tempControlX=controlX;tempControlY=controlY;x=tempX;y=tempY;controlX=x+current[1];controlY=y+current[2];bounds.add(controlX,controlY);bounds.add(tempX,tempY);break;case"T":tempX=current[1];tempY=current[2];controlX=2*x-controlX;controlY=2*y-controlY;x=tempX;y=tempY;bounds.add(controlX,controlY);bounds.add(tempX,tempY);break;case"a":boundArc(x,y,[current[1],current[2],current[3],current[4],current[5],current[6]+x,current[7]+y],bounds);x+=current[6];y+=current[7];break;case"A":boundArc(x,y,[current[1],current[2],current[3],current[4],current[5],current[6],current[7]],bounds);x=current[6];y=current[7];break;case"z":case"Z":break}previous=current}return bounds}