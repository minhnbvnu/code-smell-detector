function _vorbis_lpc_from_data($data,$lpci,$n,$m) {
 $data = $data|0;
 $lpci = $lpci|0;
 $n = $n|0;
 $m = $m|0;
 var $$alloca_mul = 0, $$alloca_mul1 = 0, $$lcssa = 0.0, $$pre = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0;
 var $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0;
 var $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0;
 var $78 = 0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0, $82 = 0, $83 = 0.0, $9 = 0.0, $d$0$lcssa = 0.0, $d$025 = 0.0, $damp$08 = 0.0, $error$021 = 0.0, $error$021$lcssa = 0.0, $error$05 = 0.0, $error$053940 = 0.0, $exitcond = 0, $exitcond36 = 0, $exitcond37 = 0, $exitcond38 = 0, $i$026 = 0;
 var $indvars$iv = 0, $indvars$iv$lcssa = 0, $indvars$iv$next = 0, $j$110 = 0, $j$2$lcssa = 0, $j$215 = 0, $j$37 = 0, $j$46 = 0, $r$011 = 0.0, $smax = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($m) + 1)|0;
 $1 = $0 << 3;
 $$alloca_mul = $1;
 $2 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0;;
 $3 = $m << 3;
 $$alloca_mul1 = $3;
 $4 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0;;
 $5 = ($0|0)==(0);
 if ($5) {
  $22 = 0.0;
 } else {
  $6 = $m;
  while(1) {
   $7 = ($6|0)<($n|0);
   if ($7) {
    $d$025 = 0.0;$i$026 = $6;
    while(1) {
     $8 = (($data) + ($i$026<<2)|0);
     $9 = +HEAPF32[$8>>2];
     $10 = $9;
     $11 = (($i$026) - ($6))|0;
     $12 = (($data) + ($11<<2)|0);
     $13 = +HEAPF32[$12>>2];
     $14 = $13;
     $15 = $14 * $10;
     $16 = $15 + $d$025;
     $17 = (($i$026) + 1)|0;
     $exitcond38 = ($17|0)==($n|0);
     if ($exitcond38) {
      $d$0$lcssa = $16;
      break;
     } else {
      $d$025 = $16;$i$026 = $17;
     }
    }
   } else {
    $d$0$lcssa = 0.0;
   }
   $18 = (($2) + ($6<<3)|0);
   HEAPF64[$18>>3] = $d$0$lcssa;
   $19 = (($6) + -1)|0;
   $20 = ($6|0)==(0);
   if ($20) {
    break;
   } else {
    $6 = $19;
   }
  }
  $$pre = +HEAPF64[$2>>3];
  $22 = $$pre;
 }
 $21 = $22 * 1.0000000001;
 $23 = $22 * 1.0000000000000001E-9;
 $24 = $23 + 1.0E-10;
 $25 = ($m|0)>(0);
 if ($25) {
  $error$021 = $21;$indvars$iv = 0;
 } else {
  $error$053940 = $21;
  $83 = $error$053940;
  STACKTOP = sp;return (+$83);
 }
 while(1) {
  $indvars$iv$next = (($indvars$iv) + 1)|0;
  $26 = $error$021 < $24;
  if ($26) {
   $error$021$lcssa = $error$021;$indvars$iv$lcssa = $indvars$iv;
   label = 8;
   break;
  }
  $30 = (($2) + ($indvars$iv$next<<3)|0);
  $31 = +HEAPF64[$30>>3];
  $32 = -$31;
  $33 = ($indvars$iv|0)>(0);
  if ($33) {
   $j$110 = 0;$r$011 = $32;
   while(1) {
    $36 = (($4) + ($j$110<<3)|0);
    $37 = +HEAPF64[$36>>3];
    $38 = (($indvars$iv) - ($j$110))|0;
    $39 = (($2) + ($38<<3)|0);
    $40 = +HEAPF64[$39>>3];
    $41 = $40 * $37;
    $42 = $r$011 - $41;
    $43 = (($j$110) + 1)|0;
    $exitcond37 = ($43|0)==($indvars$iv|0);
    if ($exitcond37) {
     $$lcssa = $42;
     break;
    } else {
     $j$110 = $43;$r$011 = $42;
    }
   }
   $44 = $$lcssa / $error$021;
   $45 = (($4) + ($indvars$iv<<3)|0);
   HEAPF64[$45>>3] = $44;
   $46 = (($indvars$iv|0) / 2)&-1;
   $47 = ($indvars$iv|0)>(1);
   if ($47) {
    $48 = (($indvars$iv) + -1)|0;
    $49 = ($46|0)>(1);
    $j$215 = 0;
    while(1) {
     $50 = (($4) + ($j$215<<3)|0);
     $51 = +HEAPF64[$50>>3];
     $52 = (($48) - ($j$215))|0;
     $53 = (($4) + ($52<<3)|0);
     $54 = +HEAPF64[$53>>3];
     $55 = $54 * $44;
     $56 = $55 + $51;
     HEAPF64[$50>>3] = $56;
     $57 = $51 * $44;
     $58 = +HEAPF64[$53>>3];
     $59 = $58 + $57;
     HEAPF64[$53>>3] = $59;
     $60 = (($j$215) + 1)|0;
     $61 = ($60|0)<($46|0);
     if ($61) {
      $j$215 = $60;
     } else {
      break;
     }
    }
    $smax = $49 ? $46 : 1;
    $67 = $44;$j$2$lcssa = $smax;
   } else {
    $67 = $44;$j$2$lcssa = 0;
   }
  } else {
   $34 = $32 / $error$021;
   $35 = (($4) + ($indvars$iv<<3)|0);
   HEAPF64[$35>>3] = $34;
   $67 = $34;$j$2$lcssa = 0;
  }
  $62 = $indvars$iv & 1;
  $63 = ($62|0)==(0);
  if (!($63)) {
   $64 = (($4) + ($j$2$lcssa<<3)|0);
   $65 = +HEAPF64[$64>>3];
   $66 = $65 * $67;
   $68 = $66 + $65;
   HEAPF64[$64>>3] = $68;
  }
  $69 = $67 * $67;
  $70 = 1.0 - $69;
  $71 = $70 * $error$021;
  $72 = ($indvars$iv$next|0)<($m|0);
  if ($72) {
   $error$021 = $71;$indvars$iv = $indvars$iv$next;
  } else {
   $error$05 = $71;
   break;
  }
 }
 if ((label|0) == 8) {
  $27 = (($4) + ($indvars$iv$lcssa<<3)|0);
  $28 = (($m) - ($indvars$iv$lcssa))|0;
  $29 = $28 << 3;
  _memset(($27|0),0,($29|0))|0;
  $error$05 = $error$021$lcssa;
 }
 if ($25) {
  $damp$08 = 0.98999999999999999;$j$37 = 0;
 } else {
  $error$053940 = $error$05;
  $83 = $error$053940;
  STACKTOP = sp;return (+$83);
 }
 while(1) {
  $73 = (($4) + ($j$37<<3)|0);
  $74 = +HEAPF64[$73>>3];
  $75 = $74 * $damp$08;
  HEAPF64[$73>>3] = $75;
  $76 = $damp$08 * 0.98999999999999999;
  $77 = (($j$37) + 1)|0;
  $exitcond36 = ($77|0)==($m|0);
  if ($exitcond36) {
   break;
  } else {
   $damp$08 = $76;$j$37 = $77;
  }
 }
 if ($25) {
  $j$46 = 0;
 } else {
  $error$053940 = $error$05;
  $83 = $error$053940;
  STACKTOP = sp;return (+$83);
 }
 while(1) {
  $78 = (($4) + ($j$46<<3)|0);
  $79 = +HEAPF64[$78>>3];
  $80 = $79;
  $81 = (($lpci) + ($j$46<<2)|0);
  HEAPF32[$81>>2] = $80;
  $82 = (($j$46) + 1)|0;
  $exitcond = ($82|0)==($m|0);
  if ($exitcond) {
   $error$053940 = $error$05;
   break;
  } else {
   $j$46 = $82;
  }
 }
 $83 = $error$053940;
 STACKTOP = sp;return (+$83);
}