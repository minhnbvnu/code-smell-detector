function _vorbis_dsp_clear($v) {
 $v = $v|0;
 var $$pre = 0, $$pre14$pre = 0, $$pre16 = 0, $$pre18$pre = 0, $$pre20 = 0, $$pre22$pre = 0, $$pre24 = 0, $$pre25 = 0, $$pre27$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $i$37 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = ($v|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($v)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0|0);
 if ($3) {
  $4 = ((($2)) + 28|0);
  $5 = HEAP32[$4>>2]|0;
  $29 = $5;
 } else {
  $29 = 0;
 }
 $6 = ((($v)) + 104|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)!=(0|0);
 if ($8) {
  $9 = HEAP32[$7>>2]|0;
  $10 = ($9|0)==(0|0);
  if (!($10)) {
   __ve_envelope_clear($9);
   $11 = HEAP32[$7>>2]|0;
   _free($11);
  }
  $12 = ((($7)) + 12|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0|0);
  if (!($14)) {
   $15 = HEAP32[$13>>2]|0;
   _mdct_clear($15);
   $16 = HEAP32[$12>>2]|0;
   $17 = HEAP32[$16>>2]|0;
   _free($17);
   $18 = HEAP32[$12>>2]|0;
   _free($18);
  }
  $19 = ((($7)) + 16|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)==(0|0);
  if (!($21)) {
   $22 = HEAP32[$20>>2]|0;
   _mdct_clear($22);
   $23 = HEAP32[$19>>2]|0;
   $24 = HEAP32[$23>>2]|0;
   _free($24);
   $25 = HEAP32[$19>>2]|0;
   _free($25);
  }
  $26 = ((($7)) + 48|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ($27|0)==(0|0);
  if (!($28)) {
   $30 = ($29|0)==(0|0);
   if ($30) {
    $55 = $27;
   } else {
    $31 = ((($29)) + 16|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = ($32|0)>(0);
    if ($33) {
     $34 = ((($29)) + 800|0);
     $35 = HEAP32[$34>>2]|0;
     $36 = (25640 + ($35<<2)|0);
     $37 = HEAP32[$36>>2]|0;
     $38 = ((($37)) + 16|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = HEAP32[$27>>2]|0;
     FUNCTION_TABLE_vi[$39 & 7]($40);
     $41 = HEAP32[$31>>2]|0;
     $42 = ($41|0)>(1);
     if ($42) {
      $44 = 1;
      while(1) {
       $$pre = HEAP32[$26>>2]|0;
       $43 = (($34) + ($44<<2)|0);
       $45 = HEAP32[$43>>2]|0;
       $46 = (25640 + ($45<<2)|0);
       $47 = HEAP32[$46>>2]|0;
       $48 = ((($47)) + 16|0);
       $49 = HEAP32[$48>>2]|0;
       $50 = (($$pre) + ($44<<2)|0);
       $51 = HEAP32[$50>>2]|0;
       FUNCTION_TABLE_vi[$49 & 7]($51);
       $52 = (($44) + 1)|0;
       $53 = HEAP32[$31>>2]|0;
       $54 = ($52|0)<($53|0);
       if ($54) {
        $44 = $52;
       } else {
        break;
       }
      }
     }
     $$pre14$pre = HEAP32[$26>>2]|0;
     $55 = $$pre14$pre;
    } else {
     $55 = $27;
    }
   }
   _free($55);
  }
  $56 = ((($7)) + 52|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = ($57|0)==(0|0);
  if (!($58)) {
   $59 = ($29|0)==(0|0);
   if ($59) {
    $84 = $57;
   } else {
    $60 = ((($29)) + 20|0);
    $61 = HEAP32[$60>>2]|0;
    $62 = ($61|0)>(0);
    if ($62) {
     $63 = ((($29)) + 1312|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = (25648 + ($64<<2)|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = ((($66)) + 16|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = HEAP32[$57>>2]|0;
     FUNCTION_TABLE_vi[$68 & 7]($69);
     $70 = HEAP32[$60>>2]|0;
     $71 = ($70|0)>(1);
     if ($71) {
      $73 = 1;
      while(1) {
       $$pre16 = HEAP32[$56>>2]|0;
       $72 = (($63) + ($73<<2)|0);
       $74 = HEAP32[$72>>2]|0;
       $75 = (25648 + ($74<<2)|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = ((($76)) + 16|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = (($$pre16) + ($73<<2)|0);
       $80 = HEAP32[$79>>2]|0;
       FUNCTION_TABLE_vi[$78 & 7]($80);
       $81 = (($73) + 1)|0;
       $82 = HEAP32[$60>>2]|0;
       $83 = ($81|0)<($82|0);
       if ($83) {
        $73 = $81;
       } else {
        break;
       }
      }
     }
     $$pre18$pre = HEAP32[$56>>2]|0;
     $84 = $$pre18$pre;
    } else {
     $84 = $57;
    }
   }
   _free($84);
  }
  $85 = ((($7)) + 56|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = ($86|0)==(0|0);
  if (!($87)) {
   $88 = ($29|0)==(0|0);
   if ($88) {
    $99 = $86;
   } else {
    $89 = ((($29)) + 28|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($90|0)>(0);
    if ($91) {
     __vp_psy_clear($86);
     $92 = HEAP32[$89>>2]|0;
     $93 = ($92|0)>(1);
     if ($93) {
      $95 = 1;
      while(1) {
       $$pre20 = HEAP32[$85>>2]|0;
       $94 = (($$pre20) + (($95*52)|0)|0);
       __vp_psy_clear($94);
       $96 = (($95) + 1)|0;
       $97 = HEAP32[$89>>2]|0;
       $98 = ($96|0)<($97|0);
       if ($98) {
        $95 = $96;
       } else {
        break;
       }
      }
     }
     $$pre22$pre = HEAP32[$85>>2]|0;
     $99 = $$pre22$pre;
    } else {
     $99 = $86;
    }
   }
   _free($99);
  }
  $100 = ((($7)) + 60|0);
  $101 = HEAP32[$100>>2]|0;
  $102 = ($101|0)==(0|0);
  if (!($102)) {
   __vp_global_free($101);
  }
  $103 = ((($7)) + 80|0);
  _vorbis_bitrate_clear($103);
  $104 = ((($7)) + 20|0);
  _drft_clear($104);
  $105 = ((($7)) + 32|0);
  _drft_clear($105);
 }
 $106 = ((($v)) + 8|0);
 $107 = HEAP32[$106>>2]|0;
 $108 = ($107|0)==(0|0);
 if (!($108)) {
  if ($3) {
   $109 = ((($2)) + 4|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = ($110|0)>(0);
   if ($111) {
    $113 = $107;$132 = $110;$i$37 = 0;
    while(1) {
     $112 = (($113) + ($i$37<<2)|0);
     $114 = HEAP32[$112>>2]|0;
     $115 = ($114|0)==(0|0);
     if ($115) {
      $118 = $132;
     } else {
      _free($114);
      $$pre25 = HEAP32[$109>>2]|0;
      $118 = $$pre25;
     }
     $116 = (($i$37) + 1)|0;
     $117 = ($116|0)<($118|0);
     if (!($117)) {
      break;
     }
     $$pre24 = HEAP32[$106>>2]|0;
     $113 = $$pre24;$132 = $118;$i$37 = $116;
    }
    $$pre27$pre = HEAP32[$106>>2]|0;
    $119 = $$pre27$pre;
   } else {
    $119 = $107;
   }
  } else {
   $119 = $107;
  }
  _free($119);
  $120 = ((($v)) + 12|0);
  $121 = HEAP32[$120>>2]|0;
  $122 = ($121|0)==(0|0);
  if (!($122)) {
   _free($121);
  }
 }
 if ($8) {
  $123 = ((($7)) + 64|0);
  $124 = HEAP32[$123>>2]|0;
  $125 = ($124|0)==(0|0);
  if (!($125)) {
   _free($124);
  }
  $126 = ((($7)) + 68|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = ($127|0)==(0|0);
  if (!($128)) {
   _free($127);
  }
  $129 = ((($7)) + 72|0);
  $130 = HEAP32[$129>>2]|0;
  $131 = ($130|0)==(0|0);
  if (!($131)) {
   _free($130);
  }
  _free($7);
 }
 dest=$v; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 return;
}