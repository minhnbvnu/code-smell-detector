function _res0_unpack($vi,$opb) {
 $vi = $vi|0;
 $opb = $opb|0;
 var $$0 = 0, $$01$i = 0, $$lcssa36 = 0, $$lcssa37 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, $acc$0$lcssa23 = 0, $acc$017 = 0, $cascade$0 = 0, $dim$09 = 0, $j$018 = 0;
 var $j$114 = 0, $j$211 = 0, $partvals$010 = 0, $ret$0$lcssa$i = 0, $ret$02$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_calloc(1,2840)|0);
 $1 = ((($vi)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (_oggpack_read($opb,24)|0);
 HEAP32[$0>>2] = $3;
 $4 = (_oggpack_read($opb,24)|0);
 $5 = ((($0)) + 4|0);
 HEAP32[$5>>2] = $4;
 $6 = (_oggpack_read($opb,24)|0);
 $7 = (($6) + 1)|0;
 $8 = ((($0)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = (_oggpack_read($opb,6)|0);
 $10 = (($9) + 1)|0;
 $11 = ((($0)) + 12|0);
 HEAP32[$11>>2] = $10;
 $12 = (_oggpack_read($opb,8)|0);
 $13 = ((($0)) + 20|0);
 HEAP32[$13>>2] = $12;
 $14 = ($12|0)<(0);
 L1: do {
  if ($14) {
   label = 26;
  } else {
   $15 = ($9|0)>(-1);
   if ($15) {
    $16 = ((($0)) + 24|0);
    $acc$017 = 0;$j$018 = 0;
    while(1) {
     $19 = (_oggpack_read($opb,3)|0);
     $20 = (_oggpack_read($opb,1)|0);
     $21 = ($20|0)<(0);
     if ($21) {
      label = 26;
      break L1;
     }
     $22 = ($20|0)==(0);
     if ($22) {
      $cascade$0 = $19;
     } else {
      $23 = (_oggpack_read($opb,5)|0);
      $24 = ($23|0)<(0);
      if ($24) {
       label = 26;
       break L1;
      }
      $25 = $23 << 3;
      $26 = $25 | $19;
      $cascade$0 = $26;
     }
     $27 = (($16) + ($j$018<<2)|0);
     HEAP32[$27>>2] = $cascade$0;
     $28 = ($cascade$0|0)==(0);
     if ($28) {
      $ret$0$lcssa$i = 0;
     } else {
      $$01$i = $cascade$0;$ret$02$i = 0;
      while(1) {
       $29 = $$01$i & 1;
       $30 = (($29) + ($ret$02$i))|0;
       $31 = $$01$i >>> 1;
       $32 = ($31|0)==(0);
       if ($32) {
        $ret$0$lcssa$i = $30;
        break;
       } else {
        $$01$i = $31;$ret$02$i = $30;
       }
      }
     }
     $33 = (($ret$0$lcssa$i) + ($acc$017))|0;
     $34 = (($j$018) + 1)|0;
     $35 = HEAP32[$11>>2]|0;
     $36 = ($34|0)<($35|0);
     if ($36) {
      $acc$017 = $33;$j$018 = $34;
     } else {
      $$lcssa37 = $33;
      break;
     }
    }
    $17 = ($$lcssa37|0)>(0);
    if ($17) {
     $18 = ((($0)) + 280|0);
     $j$114 = 0;
     while(1) {
      $37 = (_oggpack_read($opb,8)|0);
      $38 = ($37|0)<(0);
      if ($38) {
       break L1;
      }
      $39 = (($18) + ($j$114<<2)|0);
      HEAP32[$39>>2] = $37;
      $40 = (($j$114) + 1)|0;
      $41 = ($40|0)<($$lcssa37|0);
      if ($41) {
       $j$114 = $40;
      } else {
       $70 = $17;$acc$0$lcssa23 = $$lcssa37;
       break;
      }
     }
    } else {
     $70 = 0;$acc$0$lcssa23 = $$lcssa37;
    }
   } else {
    $70 = 0;$acc$0$lcssa23 = 0;
   }
   $42 = HEAP32[$13>>2]|0;
   $43 = ((($2)) + 24|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = ($42|0)<($44|0);
   if ($45) {
    if ($70) {
     $46 = ((($0)) + 280|0);
     $j$211 = 0;
     while(1) {
      $49 = (($46) + ($j$211<<2)|0);
      $50 = HEAP32[$49>>2]|0;
      $51 = ($50|0)<($44|0);
      if (!($51)) {
       break L1;
      }
      $52 = (((($2)) + 1824|0) + ($50<<2)|0);
      $53 = HEAP32[$52>>2]|0;
      $54 = ((($53)) + 12|0);
      $55 = HEAP32[$54>>2]|0;
      $56 = ($55|0)==(0);
      $47 = (($j$211) + 1)|0;
      if ($56) {
       break L1;
      }
      $48 = ($47|0)<($acc$0$lcssa23|0);
      if ($48) {
       $j$211 = $47;
      } else {
       break;
      }
     }
    }
    $57 = (((($2)) + 1824|0) + ($42<<2)|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = ((($58)) + 4|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = HEAP32[$58>>2]|0;
    $62 = ($61|0)<(1);
    if (!($62)) {
     $63 = HEAP32[$11>>2]|0;
     $dim$09 = $61;$partvals$010 = 1;
     while(1) {
      $66 = Math_imul($63, $partvals$010)|0;
      $67 = ($66|0)>($60|0);
      if ($67) {
       break L1;
      }
      $64 = (($dim$09) + -1)|0;
      $65 = ($dim$09|0)>(1);
      if ($65) {
       $dim$09 = $64;$partvals$010 = $66;
      } else {
       $$lcssa36 = $66;
       break;
      }
     }
     $68 = ((($0)) + 16|0);
     HEAP32[$68>>2] = $$lcssa36;
     $$0 = $0;
     return ($$0|0);
    }
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $69 = ($0|0)==(0|0);
  if ($69) {
   $$0 = 0;
   return ($$0|0);
  }
 }
 _free($0);
 $$0 = 0;
 return ($$0|0);
}