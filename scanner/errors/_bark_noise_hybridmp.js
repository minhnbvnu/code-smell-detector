function _bark_noise_hybridmp($n,$b,$f,$noise,$offset,$fixed) {
 $n = $n|0;
 $b = $b|0;
 $f = $f|0;
 $noise = $noise|0;
 $offset = +$offset;
 $fixed = $fixed|0;
 var $$alloca_mul = 0, $$alloca_mul1 = 0, $$alloca_mul3 = 0, $$alloca_mul5 = 0, $$alloca_mul7 = 0, $$in = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0.0, $100 = 0, $101 = 0.0, $102 = 0.0, $103 = 0, $104 = 0.0, $105 = 0, $106 = 0.0, $107 = 0.0, $108 = 0, $109 = 0.0;
 var $11 = 0.0, $110 = 0, $111 = 0.0, $112 = 0.0, $113 = 0, $114 = 0.0, $115 = 0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0;
 var $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0.0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0, $143 = 0.0, $144 = 0, $145 = 0;
 var $146 = 0.0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0.0, $162 = 0.0, $163 = 0;
 var $164 = 0.0, $165 = 0, $166 = 0.0, $167 = 0.0, $168 = 0, $169 = 0.0, $17 = 0.0, $170 = 0, $171 = 0.0, $172 = 0.0, $173 = 0, $174 = 0.0, $175 = 0, $176 = 0.0, $177 = 0.0, $178 = 0, $179 = 0.0, $18 = 0.0, $180 = 0, $181 = 0.0;
 var $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0.0, $195 = 0.0, $196 = 0, $197 = 0.0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0.0, $200 = 0.0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0.0, $207 = 0, $208 = 0.0, $209 = 0.0, $21 = 0.0, $210 = 0, $211 = 0.0, $212 = 0, $213 = 0.0, $214 = 0.0, $215 = 0, $216 = 0.0, $217 = 0;
 var $218 = 0.0, $219 = 0.0, $22 = 0.0, $220 = 0, $221 = 0.0, $222 = 0, $223 = 0.0, $224 = 0.0, $225 = 0, $226 = 0.0, $227 = 0, $228 = 0.0, $229 = 0.0, $23 = 0.0, $230 = 0.0, $231 = 0.0, $232 = 0.0, $233 = 0.0, $234 = 0.0, $235 = 0.0;
 var $236 = 0.0, $237 = 0.0, $238 = 0.0, $239 = 0.0, $24 = 0.0, $240 = 0.0, $241 = 0.0, $242 = 0.0, $243 = 0, $244 = 0.0, $245 = 0, $246 = 0, $247 = 0.0, $248 = 0, $249 = 0.0, $25 = 0.0, $250 = 0.0, $251 = 0.0, $252 = 0.0, $253 = 0;
 var $254 = 0.0, $255 = 0, $256 = 0, $257 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0.0;
 var $59 = 0, $6 = 0.0, $60 = 0.0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0, $65 = 0.0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0.0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0;
 var $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0.0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0.0;
 var $95 = 0, $96 = 0.0, $97 = 0.0, $98 = 0, $99 = 0.0, $A$0$lcssa = 0.0, $A$1$lcssa = 0.0, $A$2$lcssa = 0.0, $A$3$lcssa = 0.0, $B$0$lcssa = 0.0, $B$1$lcssa = 0.0, $B$2$lcssa = 0.0, $B$3$lcssa = 0.0, $D$0$lcssa = 0.0, $D$1$lcssa = 0.0, $D$2$lcssa = 0.0, $D$3$lcssa = 0.0, $R$0 = 0.0, $R$1 = 0.0, $R$2 = 0.0;
 var $exitcond = 0, $exitcond71 = 0, $exitcond72 = 0, $exitcond73 = 0, $exitcond74 = 0, $i$048 = 0, $i$1$lcssa = 0, $i$135 = 0, $i$2$lcssa = 0, $i$227 = 0, $i$324 = 0, $i$4$lcssa = 0, $i$415 = 0, $i$5$lcssa = 0, $i$58 = 0, $i$66 = 0, $tN$043 = 0.0, $tX$044 = 0.0, $tXX$045 = 0.0, $tXY$047 = 0.0;
 var $tY$046 = 0.0, $x$049 = 0.0, $x$1$lcssa = 0.0, $x$136 = 0.0, $x$2$lcssa = 0.0, $x$228 = 0.0, $x$325 = 0.0, $x$4$lcssa = 0.0, $x$416 = 0.0, $x$5$lcssa = 0.0, $x$59 = 0.0, $x$67 = 0.0, $y$0 = 0.0, $y$1 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $n << 2;
 $$alloca_mul = $0;
 $1 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0;;
 $$alloca_mul1 = $0;
 $2 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0;;
 $$alloca_mul3 = $0;
 $3 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0;;
 $$alloca_mul5 = $0;
 $4 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul5)|0)+15)&-16)|0;;
 $$alloca_mul7 = $0;
 $5 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul7)|0)+15)&-16)|0;;
 $6 = +HEAPF32[$f>>2];
 $7 = $6 + $offset;
 $8 = $7 < 1.0;
 $y$0 = $8 ? 1.0 : $7;
 $9 = $y$0 * $y$0;
 $10 = $9 * 0.5;
 $11 = $10 * $y$0;
 HEAPF32[$1>>2] = $10;
 HEAPF32[$2>>2] = $10;
 HEAPF32[$3>>2] = 0.0;
 HEAPF32[$4>>2] = $11;
 HEAPF32[$5>>2] = 0.0;
 $12 = ($n|0)>(1);
 if ($12) {
  $i$048 = 1;$tN$043 = $10;$tX$044 = $10;$tXX$045 = 0.0;$tXY$047 = 0.0;$tY$046 = $11;$x$049 = 1.0;
  while(1) {
   $16 = (($f) + ($i$048<<2)|0);
   $17 = +HEAPF32[$16>>2];
   $18 = $17 + $offset;
   $19 = $18 < 1.0;
   $y$1 = $19 ? 1.0 : $18;
   $20 = $y$1 * $y$1;
   $21 = $20 + $tN$043;
   $22 = $20 * $x$049;
   $23 = $22 + $tX$044;
   $24 = $22 * $x$049;
   $25 = $24 + $tXX$045;
   $26 = $20 * $y$1;
   $27 = $26 + $tY$046;
   $28 = $22 * $y$1;
   $29 = $28 + $tXY$047;
   $30 = (($1) + ($i$048<<2)|0);
   HEAPF32[$30>>2] = $21;
   $31 = (($2) + ($i$048<<2)|0);
   HEAPF32[$31>>2] = $23;
   $32 = (($3) + ($i$048<<2)|0);
   HEAPF32[$32>>2] = $25;
   $33 = (($4) + ($i$048<<2)|0);
   HEAPF32[$33>>2] = $27;
   $34 = (($5) + ($i$048<<2)|0);
   HEAPF32[$34>>2] = $29;
   $35 = (($i$048) + 1)|0;
   $36 = $x$049 + 1.0;
   $exitcond74 = ($35|0)==($n|0);
   if ($exitcond74) {
    break;
   } else {
    $i$048 = $35;$tN$043 = $21;$tX$044 = $23;$tXX$045 = $25;$tXY$047 = $29;$tY$046 = $27;$x$049 = $36;
   }
  }
 }
 $13 = HEAP32[$b>>2]|0;
 $14 = $13 >> 16;
 $15 = ($14|0)>(-1);
 if ($15) {
  $38 = $13;$A$0$lcssa = 0.0;$B$0$lcssa = 0.0;$D$0$lcssa = 1.0;$i$1$lcssa = 0;$x$1$lcssa = 0.0;
 } else {
  $41 = $13;$45 = $14;$i$135 = 0;$x$136 = 0.0;
  while(1) {
   $40 = $41 & 65535;
   $42 = (($1) + ($40<<2)|0);
   $43 = +HEAPF32[$42>>2];
   $44 = (0 - ($45))|0;
   $46 = (($1) + ($44<<2)|0);
   $47 = +HEAPF32[$46>>2];
   $48 = $47 + $43;
   $49 = (($2) + ($40<<2)|0);
   $50 = +HEAPF32[$49>>2];
   $51 = (($2) + ($44<<2)|0);
   $52 = +HEAPF32[$51>>2];
   $53 = $50 - $52;
   $54 = (($3) + ($40<<2)|0);
   $55 = +HEAPF32[$54>>2];
   $56 = (($3) + ($44<<2)|0);
   $57 = +HEAPF32[$56>>2];
   $58 = $57 + $55;
   $59 = (($4) + ($40<<2)|0);
   $60 = +HEAPF32[$59>>2];
   $61 = (($4) + ($44<<2)|0);
   $62 = +HEAPF32[$61>>2];
   $63 = $62 + $60;
   $64 = (($5) + ($40<<2)|0);
   $65 = +HEAPF32[$64>>2];
   $66 = (($5) + ($44<<2)|0);
   $67 = +HEAPF32[$66>>2];
   $68 = $65 - $67;
   $69 = $63 * $58;
   $70 = $68 * $53;
   $71 = $69 - $70;
   $72 = $68 * $48;
   $73 = $63 * $53;
   $74 = $72 - $73;
   $75 = $58 * $48;
   $76 = $53 * $53;
   $77 = $75 - $76;
   $78 = $74 * $x$136;
   $79 = $78 + $71;
   $80 = $79 / $77;
   $81 = $80 < 0.0;
   $R$0 = $81 ? 0.0 : $80;
   $82 = $R$0 - $offset;
   $83 = (($noise) + ($i$135<<2)|0);
   HEAPF32[$83>>2] = $82;
   $84 = (($i$135) + 1)|0;
   $85 = $x$136 + 1.0;
   $86 = (($b) + ($84<<2)|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = $87 >> 16;
   $89 = ($88|0)>(-1);
   if ($89) {
    $38 = $87;$A$0$lcssa = $71;$B$0$lcssa = $74;$D$0$lcssa = $77;$i$1$lcssa = $84;$x$1$lcssa = $85;
    break;
   } else {
    $41 = $87;$45 = $88;$i$135 = $84;$x$136 = $85;
   }
  }
 }
 $37 = $38 & 65535;
 $39 = ($37|0)<($n|0);
 if ($39) {
  $$in = $38;$93 = $37;$i$227 = $i$1$lcssa;$x$228 = $x$1$lcssa;
  while(1) {
   $91 = $$in >> 16;
   $92 = (($1) + ($93<<2)|0);
   $94 = +HEAPF32[$92>>2];
   $95 = (($1) + ($91<<2)|0);
   $96 = +HEAPF32[$95>>2];
   $97 = $94 - $96;
   $98 = (($2) + ($93<<2)|0);
   $99 = +HEAPF32[$98>>2];
   $100 = (($2) + ($91<<2)|0);
   $101 = +HEAPF32[$100>>2];
   $102 = $99 - $101;
   $103 = (($3) + ($93<<2)|0);
   $104 = +HEAPF32[$103>>2];
   $105 = (($3) + ($91<<2)|0);
   $106 = +HEAPF32[$105>>2];
   $107 = $104 - $106;
   $108 = (($4) + ($93<<2)|0);
   $109 = +HEAPF32[$108>>2];
   $110 = (($4) + ($91<<2)|0);
   $111 = +HEAPF32[$110>>2];
   $112 = $109 - $111;
   $113 = (($5) + ($93<<2)|0);
   $114 = +HEAPF32[$113>>2];
   $115 = (($5) + ($91<<2)|0);
   $116 = +HEAPF32[$115>>2];
   $117 = $114 - $116;
   $118 = $112 * $107;
   $119 = $117 * $102;
   $120 = $118 - $119;
   $121 = $117 * $97;
   $122 = $112 * $102;
   $123 = $121 - $122;
   $124 = $107 * $97;
   $125 = $102 * $102;
   $126 = $124 - $125;
   $127 = $123 * $x$228;
   $128 = $127 + $120;
   $129 = $128 / $126;
   $130 = $129 < 0.0;
   $R$1 = $130 ? 0.0 : $129;
   $131 = $R$1 - $offset;
   $132 = (($noise) + ($i$227<<2)|0);
   HEAPF32[$132>>2] = $131;
   $133 = (($i$227) + 1)|0;
   $134 = $x$228 + 1.0;
   $135 = (($b) + ($133<<2)|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = $136 & 65535;
   $138 = ($137|0)<($n|0);
   if ($138) {
    $$in = $136;$93 = $137;$i$227 = $133;$x$228 = $134;
   } else {
    $A$1$lcssa = $120;$B$1$lcssa = $123;$D$1$lcssa = $126;$i$2$lcssa = $133;$x$2$lcssa = $134;
    break;
   }
  }
 } else {
  $A$1$lcssa = $A$0$lcssa;$B$1$lcssa = $B$0$lcssa;$D$1$lcssa = $D$0$lcssa;$i$2$lcssa = $i$1$lcssa;$x$2$lcssa = $x$1$lcssa;
 }
 $90 = ($i$2$lcssa|0)<($n|0);
 if ($90) {
  $i$324 = $i$2$lcssa;$x$325 = $x$2$lcssa;
  while(1) {
   $139 = $x$325 * $B$1$lcssa;
   $140 = $139 + $A$1$lcssa;
   $141 = $140 / $D$1$lcssa;
   $142 = $141 < 0.0;
   $R$2 = $142 ? 0.0 : $141;
   $143 = $R$2 - $offset;
   $144 = (($noise) + ($i$324<<2)|0);
   HEAPF32[$144>>2] = $143;
   $145 = (($i$324) + 1)|0;
   $146 = $x$325 + 1.0;
   $exitcond73 = ($145|0)==($n|0);
   if ($exitcond73) {
    break;
   } else {
    $i$324 = $145;$x$325 = $146;
   }
  }
 }
 $147 = ($fixed|0)<(1);
 if ($147) {
  STACKTOP = sp;return;
 }
 $148 = (($fixed|0) / 2)&-1;
 $149 = (($148) - ($fixed))|0;
 $150 = ($149|0)>(-1);
 if ($150) {
  $A$2$lcssa = $A$1$lcssa;$B$2$lcssa = $B$1$lcssa;$D$2$lcssa = $D$1$lcssa;$i$4$lcssa = 0;$x$4$lcssa = 0.0;
 } else {
  $151 = (($fixed) - ($148))|0;
  $156 = $148;$159 = $149;$i$415 = 0;$x$416 = 0.0;
  while(1) {
   $155 = (($1) + ($156<<2)|0);
   $157 = +HEAPF32[$155>>2];
   $158 = (0 - ($159))|0;
   $160 = (($1) + ($158<<2)|0);
   $161 = +HEAPF32[$160>>2];
   $162 = $161 + $157;
   $163 = (($2) + ($156<<2)|0);
   $164 = +HEAPF32[$163>>2];
   $165 = (($2) + ($158<<2)|0);
   $166 = +HEAPF32[$165>>2];
   $167 = $164 - $166;
   $168 = (($3) + ($156<<2)|0);
   $169 = +HEAPF32[$168>>2];
   $170 = (($3) + ($158<<2)|0);
   $171 = +HEAPF32[$170>>2];
   $172 = $171 + $169;
   $173 = (($4) + ($156<<2)|0);
   $174 = +HEAPF32[$173>>2];
   $175 = (($4) + ($158<<2)|0);
   $176 = +HEAPF32[$175>>2];
   $177 = $176 + $174;
   $178 = (($5) + ($156<<2)|0);
   $179 = +HEAPF32[$178>>2];
   $180 = (($5) + ($158<<2)|0);
   $181 = +HEAPF32[$180>>2];
   $182 = $179 - $181;
   $183 = $177 * $172;
   $184 = $182 * $167;
   $185 = $183 - $184;
   $186 = $182 * $162;
   $187 = $177 * $167;
   $188 = $186 - $187;
   $189 = $172 * $162;
   $190 = $167 * $167;
   $191 = $189 - $190;
   $192 = $188 * $x$416;
   $193 = $192 + $185;
   $194 = $193 / $191;
   $195 = $194 - $offset;
   $196 = (($noise) + ($i$415<<2)|0);
   $197 = +HEAPF32[$196>>2];
   $198 = $195 < $197;
   if ($198) {
    HEAPF32[$196>>2] = $195;
   }
   $199 = (($i$415) + 1)|0;
   $200 = $x$416 + 1.0;
   $201 = (($148) + ($199))|0;
   $202 = (($201) - ($fixed))|0;
   $exitcond72 = ($199|0)==($151|0);
   if ($exitcond72) {
    $A$2$lcssa = $185;$B$2$lcssa = $188;$D$2$lcssa = $191;$i$4$lcssa = $151;$x$4$lcssa = $200;
    break;
   } else {
    $156 = $201;$159 = $202;$i$415 = $199;$x$416 = $200;
   }
  }
 }
 $152 = (($i$4$lcssa) + ($148))|0;
 $153 = ($152|0)<($n|0);
 if ($153) {
  $154 = (($n) - ($148))|0;
  $$pn = $152;$i$58 = $i$4$lcssa;$x$59 = $x$4$lcssa;
  while(1) {
   $204 = (($$pn) - ($fixed))|0;
   $205 = (($1) + ($$pn<<2)|0);
   $206 = +HEAPF32[$205>>2];
   $207 = (($1) + ($204<<2)|0);
   $208 = +HEAPF32[$207>>2];
   $209 = $206 - $208;
   $210 = (($2) + ($$pn<<2)|0);
   $211 = +HEAPF32[$210>>2];
   $212 = (($2) + ($204<<2)|0);
   $213 = +HEAPF32[$212>>2];
   $214 = $211 - $213;
   $215 = (($3) + ($$pn<<2)|0);
   $216 = +HEAPF32[$215>>2];
   $217 = (($3) + ($204<<2)|0);
   $218 = +HEAPF32[$217>>2];
   $219 = $216 - $218;
   $220 = (($4) + ($$pn<<2)|0);
   $221 = +HEAPF32[$220>>2];
   $222 = (($4) + ($204<<2)|0);
   $223 = +HEAPF32[$222>>2];
   $224 = $221 - $223;
   $225 = (($5) + ($$pn<<2)|0);
   $226 = +HEAPF32[$225>>2];
   $227 = (($5) + ($204<<2)|0);
   $228 = +HEAPF32[$227>>2];
   $229 = $226 - $228;
   $230 = $224 * $219;
   $231 = $229 * $214;
   $232 = $230 - $231;
   $233 = $229 * $209;
   $234 = $224 * $214;
   $235 = $233 - $234;
   $236 = $219 * $209;
   $237 = $214 * $214;
   $238 = $236 - $237;
   $239 = $235 * $x$59;
   $240 = $239 + $232;
   $241 = $240 / $238;
   $242 = $241 - $offset;
   $243 = (($noise) + ($i$58<<2)|0);
   $244 = +HEAPF32[$243>>2];
   $245 = $242 < $244;
   if ($245) {
    HEAPF32[$243>>2] = $242;
   }
   $246 = (($i$58) + 1)|0;
   $247 = $x$59 + 1.0;
   $248 = (($246) + ($148))|0;
   $exitcond71 = ($246|0)==($154|0);
   if ($exitcond71) {
    $A$3$lcssa = $232;$B$3$lcssa = $235;$D$3$lcssa = $238;$i$5$lcssa = $154;$x$5$lcssa = $247;
    break;
   } else {
    $$pn = $248;$i$58 = $246;$x$59 = $247;
   }
  }
 } else {
  $A$3$lcssa = $A$2$lcssa;$B$3$lcssa = $B$2$lcssa;$D$3$lcssa = $D$2$lcssa;$i$5$lcssa = $i$4$lcssa;$x$5$lcssa = $x$4$lcssa;
 }
 $203 = ($i$5$lcssa|0)<($n|0);
 if ($203) {
  $i$66 = $i$5$lcssa;$x$67 = $x$5$lcssa;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $249 = $x$67 * $B$3$lcssa;
  $250 = $249 + $A$3$lcssa;
  $251 = $250 / $D$3$lcssa;
  $252 = $251 - $offset;
  $253 = (($noise) + ($i$66<<2)|0);
  $254 = +HEAPF32[$253>>2];
  $255 = $252 < $254;
  if ($255) {
   HEAPF32[$253>>2] = $252;
  }
  $256 = (($i$66) + 1)|0;
  $257 = $x$67 + 1.0;
  $exitcond = ($256|0)==($n|0);
  if ($exitcond) {
   break;
  } else {
   $i$66 = $256;$x$67 = $257;
  }
 }
 STACKTOP = sp;return;
}