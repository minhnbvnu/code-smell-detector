function __ve_amp($ve,$gi,$data,$bands,$filters) {
 $ve = $ve|0;
 $gi = $gi|0;
 $data = $data|0;
 $bands = $bands|0;
 $filters = $filters|0;
 var $$ = 0, $$2 = 0, $$3 = 0, $$3$us = 0, $$3$v = 0, $$3$v$us = 0, $$4 = 0.0, $$4$us = 0.0, $$5$us = 0, $$5$v$us = 0, $$6 = 0, $$6$us = 0, $$alloca_mul = 0, $$in724 = 0.0, $$lcssa48 = 0.0, $$phi$trans$insert = 0, $$pre = 0.0, $$pre$phiZ2D = 0, $$premin$0$us = 0.0, $$premin$0$us$lcssa = 0.0;
 var $$v = 0.0, $$v8 = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0.0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0.0, $110 = 0, $111 = 0.0, $112 = 0, $113 = 0;
 var $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0.0, $130 = 0, $131 = 0;
 var $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0.0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0.0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0.0, $157 = 0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0, $162 = 0, $163 = 0, $164 = 0.0, $165 = 0.0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0.0, $171 = 0, $172 = 0.0, $173 = 0, $174 = 0.0, $175 = 0.0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0.0, $182 = 0.0, $183 = 0, $184 = 0, $185 = 0, $186 = 0.0;
 var $187 = 0.0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0.0, $3 = 0.0, $30 = 0.0, $31 = 0, $32 = 0.0;
 var $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0.0, $67 = 0, $68 = 0, $69 = 0.0;
 var $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0.0, $92 = 0.0, $93 = 0, $94 = 0, $95 = 0, $96 = 0.0, $97 = 0.0, $98 = 0, $99 = 0, $acc$0$lcssa = 0.0, $acc$0$lcssa$us = 0.0, $acc$010 = 0.0, $acc$010$us = 0.0, $exitcond = 0, $exitcond34 = 0, $exitcond35 = 0;
 var $exitcond36 = 0, $i$028 = 0, $i$125 = 0, $i$211 = 0, $i$211$us = 0, $i$313$us = 0, $j$021 = 0, $j$021$us = 0, $p$112$us = 0, $penalty$0 = 0.0, $penalty$1 = 0.0, $premax$014$us = 0.0, $premin$015$us = 0.0, $ret$0$lcssa = 0, $ret$023 = 0, $ret$023$us = 0, $ret$1 = 0, $ret$1$us = 0, $ret$2 = 0, $ret$2$us = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($ve)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($ve)) + 12|0);
 $3 = +HEAPF32[$2>>2];
 $4 = $1 << 2;
 $$alloca_mul = $4;
 $5 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0;;
 $6 = ((($ve)) + 156|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)>(5);
 $9 = (($7|0) / 2)&-1;
 $$ = $8 ? $9 : 2;
 $10 = ((($gi)) + 60|0);
 $11 = +HEAPF32[$10>>2];
 $12 = (($9) + -2)|0;
 $13 = (+($12|0));
 $14 = $11 - $13;
 $15 = $14 < 0.0;
 $penalty$0 = $15 ? 0.0 : $14;
 $16 = $penalty$0 > $11;
 $penalty$1 = $16 ? $11 : $penalty$0;
 $17 = ($1|0)>(0);
 if ($17) {
  $18 = ((($ve)) + 36|0);
  $19 = HEAP32[$18>>2]|0;
  $i$028 = 0;
  while(1) {
   $20 = (($data) + ($i$028<<2)|0);
   $21 = +HEAPF32[$20>>2];
   $22 = (($19) + ($i$028<<2)|0);
   $23 = +HEAPF32[$22>>2];
   $24 = $23 * $21;
   $25 = (($5) + ($i$028<<2)|0);
   HEAPF32[$25>>2] = $24;
   $26 = (($i$028) + 1)|0;
   $exitcond34 = ($26|0)==($1|0);
   if ($exitcond34) {
    break;
   } else {
    $i$028 = $26;
   }
  }
 }
 $27 = ((($ve)) + 16|0);
 _mdct_forward($27,$5,$5);
 $28 = +HEAPF32[$5>>2];
 $29 = $28 * $28;
 $30 = $29;
 $31 = ((($5)) + 4|0);
 $32 = +HEAPF32[$31>>2];
 $33 = $32;
 $34 = $33 * $33;
 $35 = $34 * 0.69999999999999996;
 $36 = $35 + $30;
 $37 = ((($5)) + 8|0);
 $38 = +HEAPF32[$37>>2];
 $39 = $38;
 $40 = $39 * $39;
 $41 = $40 * 0.20000000000000001;
 $42 = $36 + $41;
 $43 = $42;
 $44 = ((($filters)) + 140|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ($45|0)==(0);
 if ($46) {
  $47 = ((($filters)) + 136|0);
  $48 = +HEAPF32[$47>>2];
  $49 = $48 + $43;
  $50 = ((($filters)) + 132|0);
  HEAPF32[$50>>2] = $49;
  HEAPF32[$47>>2] = $43;
  $$pre$phiZ2D = $50;$60 = $49;
 } else {
  $51 = ((($filters)) + 132|0);
  $52 = +HEAPF32[$51>>2];
  $53 = $52 + $43;
  HEAPF32[$51>>2] = $53;
  $54 = ((($filters)) + 136|0);
  $55 = +HEAPF32[$54>>2];
  $56 = $55 + $43;
  HEAPF32[$54>>2] = $56;
  $$pre$phiZ2D = $51;$60 = $53;
 }
 $57 = (((($filters)) + 72|0) + ($45<<2)|0);
 $58 = +HEAPF32[$57>>2];
 $59 = $60 - $58;
 HEAPF32[$$pre$phiZ2D>>2] = $59;
 HEAPF32[$57>>2] = $43;
 $61 = HEAP32[$44>>2]|0;
 $62 = (($61) + 1)|0;
 $63 = ($61|0)>(13);
 $$2 = $63 ? 0 : $62;
 HEAP32[$44>>2] = $$2;
 $64 = (($1|0) / 2)&-1;
 $65 = ($1|0)>(1);
 L10: do {
  if ($65) {
   $66 = $60 * 0.0625;
   $67 = (HEAPF32[tempDoublePtr>>2]=$66,HEAP32[tempDoublePtr>>2]|0);
   $68 = $67 & 2147483647;
   $69 = (+($68>>>0));
   $70 = $69 * 7.1771142984289327E-7;
   $71 = $70 + -764.6162109375;
   $72 = $71;
   $73 = $72 * 0.5;
   $74 = $73 + -15.0;
   $75 = $74;
   $$in724 = $75;$129 = $28;$i$125 = 0;
   while(1) {
    $128 = $129 * $129;
    $130 = $i$125 | 1;
    $131 = (($5) + ($130<<2)|0);
    $132 = +HEAPF32[$131>>2];
    $133 = $132 * $132;
    $134 = $133 + $128;
    $135 = (HEAPF32[tempDoublePtr>>2]=$134,HEAP32[tempDoublePtr>>2]|0);
    $136 = $135 & 2147483647;
    $137 = (+($136>>>0));
    $138 = $137 * 3.5885571492144663E-7;
    $139 = $138 + -382.30810546875;
    $140 = $139 < $$in724;
    $$v = $140 ? $$in724 : $139;
    $141 = $$v < $3;
    $$v8 = $141 ? $3 : $$v;
    $142 = $i$125 >> 1;
    $143 = (($5) + ($142<<2)|0);
    HEAPF32[$143>>2] = $$v8;
    $144 = (($i$125) + 2)|0;
    $145 = ($144|0)<($64|0);
    if (!($145)) {
     break L10;
    }
    $146 = $$in724 + -8.0;
    $$phi$trans$insert = (($5) + ($144<<2)|0);
    $$pre = +HEAPF32[$$phi$trans$insert>>2];
    $$in724 = $146;$129 = $$pre;$i$125 = $144;
   }
  }
 } while(0);
 $76 = ($$|0)>(0);
 if ($76) {
  $j$021$us = 0;$ret$023$us = 0;
 } else {
  $j$021 = 0;$ret$023 = 0;
  while(1) {
   $147 = (((($bands) + ($j$021<<4)|0)) + 4|0);
   $148 = HEAP32[$147>>2]|0;
   $149 = ($148|0)>(0);
   if ($149) {
    $150 = (($bands) + ($j$021<<4)|0);
    $151 = HEAP32[$150>>2]|0;
    $152 = (((($bands) + ($j$021<<4)|0)) + 8|0);
    $153 = HEAP32[$152>>2]|0;
    $acc$010 = 0.0;$i$211 = 0;
    while(1) {
     $154 = (($151) + ($i$211))|0;
     $155 = (($5) + ($154<<2)|0);
     $156 = +HEAPF32[$155>>2];
     $157 = (($153) + ($i$211<<2)|0);
     $158 = +HEAPF32[$157>>2];
     $159 = $158 * $156;
     $160 = $159 + $acc$010;
     $161 = (($i$211) + 1)|0;
     $162 = ($161|0)<($148|0);
     if ($162) {
      $acc$010 = $160;$i$211 = $161;
     } else {
      $acc$0$lcssa = $160;
      break;
     }
    }
   } else {
    $acc$0$lcssa = 0.0;
   }
   $163 = (((($bands) + ($j$021<<4)|0)) + 12|0);
   $164 = +HEAPF32[$163>>2];
   $165 = $164 * $acc$0$lcssa;
   $166 = (((($filters) + (($j$021*144)|0)|0)) + 68|0);
   $167 = HEAP32[$166>>2]|0;
   $168 = ($167|0)<(1);
   $$3$v = $168 ? 16 : -1;
   $$3 = (($$3$v) + ($167))|0;
   $169 = ((($filters) + (($j$021*144)|0)|0) + ($$3<<2)|0);
   $170 = +HEAPF32[$169>>2];
   $171 = $165 < $170;
   $172 = $171 ? $170 : $165;
   $173 = $165 > $170;
   $$4 = $173 ? $170 : $165;
   $174 = $$4 + -99999.0;
   $175 = $172 + 99999.0;
   $176 = ((($filters) + (($j$021*144)|0)|0) + ($167<<2)|0);
   HEAPF32[$176>>2] = $165;
   $177 = HEAP32[$166>>2]|0;
   $178 = (($177) + 1)|0;
   $179 = ($177|0)>(15);
   $$6 = $179 ? 0 : $178;
   HEAP32[$166>>2] = $$6;
   $180 = (((($gi)) + 4|0) + ($j$021<<2)|0);
   $181 = +HEAPF32[$180>>2];
   $182 = $181 + $penalty$1;
   $183 = $175 > $182;
   $184 = $ret$023 | 5;
   $ret$1 = $183 ? $184 : $ret$023;
   $185 = (((($gi)) + 32|0) + ($j$021<<2)|0);
   $186 = +HEAPF32[$185>>2];
   $187 = $186 - $penalty$1;
   $188 = $174 < $187;
   $189 = $ret$1 | 2;
   $ret$2 = $188 ? $189 : $ret$1;
   $190 = (($j$021) + 1)|0;
   $exitcond = ($190|0)==(7);
   if ($exitcond) {
    $ret$0$lcssa = $ret$2;
    break;
   } else {
    $j$021 = $190;$ret$023 = $ret$2;
   }
  }
  STACKTOP = sp;return ($ret$0$lcssa|0);
 }
 while(1) {
  $77 = (((($bands) + ($j$021$us<<4)|0)) + 4|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = ($78|0)>(0);
  if ($79) {
   $119 = (($bands) + ($j$021$us<<4)|0);
   $109 = HEAP32[$119>>2]|0;
   $120 = (((($bands) + ($j$021$us<<4)|0)) + 8|0);
   $113 = HEAP32[$120>>2]|0;
   $acc$010$us = 0.0;$i$211$us = 0;
   while(1) {
    $108 = (($109) + ($i$211$us))|0;
    $110 = (($5) + ($108<<2)|0);
    $111 = +HEAPF32[$110>>2];
    $112 = (($113) + ($i$211$us<<2)|0);
    $114 = +HEAPF32[$112>>2];
    $115 = $114 * $111;
    $116 = $115 + $acc$010$us;
    $117 = (($i$211$us) + 1)|0;
    $118 = ($117|0)<($78|0);
    if ($118) {
     $acc$010$us = $116;$i$211$us = $117;
    } else {
     $acc$0$lcssa$us = $116;
     break;
    }
   }
  } else {
   $acc$0$lcssa$us = 0.0;
  }
  $121 = (((($bands) + ($j$021$us<<4)|0)) + 12|0);
  $122 = +HEAPF32[$121>>2];
  $85 = $122 * $acc$0$lcssa$us;
  $87 = (((($filters) + (($j$021$us*144)|0)|0)) + 68|0);
  $84 = HEAP32[$87>>2]|0;
  $123 = ($84|0)<(1);
  $$3$v$us = $123 ? 16 : -1;
  $$3$us = (($$3$v$us) + ($84))|0;
  $124 = ((($filters) + (($j$021$us*144)|0)|0) + ($$3$us<<2)|0);
  $125 = +HEAPF32[$124>>2];
  $126 = $85 < $125;
  $82 = $126 ? $125 : $85;
  $127 = $85 > $125;
  $$4$us = $127 ? $125 : $85;
  $i$313$us = 0;$p$112$us = $$3$us;$premax$014$us = -99999.0;$premin$015$us = 99999.0;
  while(1) {
   $101 = ($p$112$us|0)<(1);
   $$5$v$us = $101 ? 16 : -1;
   $$5$us = (($$5$v$us) + ($p$112$us))|0;
   $102 = ((($filters) + (($j$021$us*144)|0)|0) + ($$5$us<<2)|0);
   $103 = +HEAPF32[$102>>2];
   $104 = $premax$014$us < $103;
   $105 = $104 ? $103 : $premax$014$us;
   $106 = $premin$015$us > $103;
   $$premin$0$us = $106 ? $103 : $premin$015$us;
   $107 = (($i$313$us) + 1)|0;
   $exitcond35 = ($107|0)==($$|0);
   if ($exitcond35) {
    $$lcssa48 = $105;$$premin$0$us$lcssa = $$premin$0$us;
    break;
   } else {
    $i$313$us = $107;$p$112$us = $$5$us;$premax$014$us = $105;$premin$015$us = $$premin$0$us;
   }
  }
  $80 = $$4$us - $$premin$0$us$lcssa;
  $81 = $82 - $$lcssa48;
  $83 = ((($filters) + (($j$021$us*144)|0)|0) + ($84<<2)|0);
  HEAPF32[$83>>2] = $85;
  $86 = HEAP32[$87>>2]|0;
  $88 = (($86) + 1)|0;
  $89 = ($86|0)>(15);
  $$6$us = $89 ? 0 : $88;
  HEAP32[$87>>2] = $$6$us;
  $90 = (((($gi)) + 4|0) + ($j$021$us<<2)|0);
  $91 = +HEAPF32[$90>>2];
  $92 = $91 + $penalty$1;
  $93 = $81 > $92;
  $94 = $ret$023$us | 5;
  $ret$1$us = $93 ? $94 : $ret$023$us;
  $95 = (((($gi)) + 32|0) + ($j$021$us<<2)|0);
  $96 = +HEAPF32[$95>>2];
  $97 = $96 - $penalty$1;
  $98 = $80 < $97;
  $99 = $ret$1$us | 2;
  $ret$2$us = $98 ? $99 : $ret$1$us;
  $100 = (($j$021$us) + 1)|0;
  $exitcond36 = ($100|0)==(7);
  if ($exitcond36) {
   $ret$0$lcssa = $ret$2$us;
   break;
  } else {
   $j$021$us = $100;$ret$023$us = $ret$2$us;
  }
 }
 STACKTOP = sp;return ($ret$0$lcssa|0);
}