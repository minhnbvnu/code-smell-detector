function _ZN21btConeTwistConstraint14calcAngleInfo2ERK11btTransformS2_RK11btMatrix3x3S5_(sp)
{
	var i7;
	var fp = sp>>2;
	var r0;
	var r1;
	var r2;
	var r3;
	var r4;
	var r5;
	var r6;
	var r7;
	var f0;
	var f1;
	var f2;
	var f3;
	var f4;
	var f5;
	var f6;
	var f7;
	var f8;
	var f9;
	var f10;
	var f11;
	var f12;
	var f13;
	var f14;
	var f15;
	var f16;
	var f17;
	var f18;
	var f19;
	var f20;
	var f21;
	var f22;
	var f23;
	var f24;
	var f25;
	var f26;
	var f27;
	var f28;
	var f29;
	var f30;
var __label__ = 0;
	i7 = sp + -384;var g0 = i7>>2; // save stack
	r0 = heap32[(fp)];
	r1 = r0 >> 2;
	heap32[(r1+123)] = 0;
	r2 = 0;
	heap32[(r1+122)] = 0;
	r3 = heap32[(fp+1)];
	r4 = heap32[(fp+2)];
	heap8[r0+513] = r2;
	heap8[r0+514] = r2;
	r2 = heapU8[r0+540];
	if(r2 ==0) //_LBB587_7
{
__label__ = 6;
}
else{
	r2 = heapU8[r0+515];
	if(r2 !=0) //_LBB587_7
{
__label__ = 6;
}
else{
	f0 = heapFloat[(r1+136)];
	f1 = heapFloat[(r1+137)];
	f2 = heapFloat[(r1+138)];
	f3 = f0*f0;
	f4 = f1*f1;
	f5 = heapFloat[(r1+139)];
	f3 = f3+f4;
	f4 = f2*f2;
	f3 = f3+f4;
	f4 = f5*f5;
	f6 =                         2;
	f3 = f3+f4;
	r4 = r4 >> 2;
	f3 = f6/f3;
	f4 = f2*f3;
	f6 = f1*f3;
	f3 = f0*f3;
	f7 = heapFloat[(r4)];
	heapFloat[(fp+-48)] = f7;
	f7 = heapFloat[(r1+89)];
	heapFloat[(fp+-64)] = f7;
	f7 = heapFloat[(r1+88)];
	heapFloat[(fp+-66)] = f7;
	f8 = heapFloat[(r4+1)];
	heapFloat[(fp+-49)] = f8;
	f9 = heapFloat[(r1+93)];
	heapFloat[(fp+-65)] = f9;
	f7 = heapFloat[(r1+92)];
	heapFloat[(fp+-67)] = f7;
	f8 = heapFloat[(r1+90)];
	heapFloat[(fp+-54)] = f8;
	f9 = heapFloat[(r1+94)];
	heapFloat[(fp+-55)] = f9;
	f2 = f2*f4;
	f10 = f0*f3;
	f11 = f1*f6;
	f12 = heapFloat[(fp+-66)];
	f7 = heapFloat[(fp+-48)];
	f13 = f12*f7;
	f7 = heapFloat[(fp+-67)];
	f8 = heapFloat[(fp+-49)];
	f14 = f7*f8;
	f15 = heapFloat[(fp+-64)];
	f7 = heapFloat[(fp+-48)];
	f16 = f15*f7;
	f9 = heapFloat[(fp+-65)];
	f17 = f9*f8;
	f18 = heapFloat[(r4+2)];
	heapFloat[(fp+-83)] = f18;
	f19 = heapFloat[(r1+97)];
	heapFloat[(fp+-80)] = f19;
	f20 = heapFloat[(r1+96)];
	heapFloat[(fp+-81)] = f20;
	r3 = r3 >> 2;
	f21 = heapFloat[(r1+98)];
	heapFloat[(fp+-77)] = f21;
	f22 = f11+f2;
	f23 =                         1;
	heapFloat[(fp+-76)] = f23;
	f2 = f10+f2;
	f24 = f0*f6;
	f25 = f5*f4;
	f13 = f13+f14;
	f14 = f20*f18;
	f16 = f16+f17;
	f17 = f19*f18;
	f8 = heapFloat[(fp+-54)];
	f26 = f8*f7;
	f9 = heapFloat[(fp+-55)];
	f8 = heapFloat[(fp+-49)];
	f27 = f9*f8;
	f22 = f23-f22;
	heapFloat[(fp+-78)] = f22;
	f13 = f13+f14;
	heapFloat[(fp+-50)] = f13;
	f14 = f24-f25;
	heapFloat[(fp+-52)] = f14;
	f24 = f24+f25;
	heapFloat[(fp+-79)] = f24;
	f16 = f16+f17;
	heapFloat[(fp+-51)] = f16;
	f2 = f23-f2;
	heapFloat[(fp+-53)] = f2;
	f0 = f0*f4;
	f6 = f5*f6;
	f1 = f1*f4;
	f3 = f5*f3;
	f4 = f26+f27;
	f5 = f21*f18;
	f2 = heapFloat[(r3)];
	heapFloat[(fp+-40)] = f2;
	f7 = heapFloat[(r1+73)];
	f8 = heapFloat[(r1+72)];
	f2 = heapFloat[(r3+1)];
	heapFloat[(fp+-41)] = f2;
	f9 = heapFloat[(r1+77)];
	f12 = heapFloat[(r1+76)];
	f13 = heapFloat[(r4+4)];
	heapFloat[(fp+-59)] = f13;
	f14 = heapFloat[(r4+5)];
	heapFloat[(fp+-60)] = f14;
	f15 = heapFloat[(r3+4)];
	heapFloat[(fp+-68)] = f15;
	f16 = heapFloat[(r3+5)];
	heapFloat[(fp+-69)] = f16;
	f17 = heapFloat[(r1+74)];
	f18 = heapFloat[(r1+78)];
	f19 = f0+f6;
	heapFloat[(fp+-56)] = f19;
	f20 = f1-f3;
	heapFloat[(fp+-58)] = f20;
	f10 = f10+f11;
	f2 = heapFloat[(fp+-40)];
	f11 = f8*f2;
	f2 = heapFloat[(fp+-41)];
	f21 = f12*f2;
	f13 = heapFloat[(fp+-50)];
	f23 = f22*f13;
	f16 = heapFloat[(fp+-51)];
	f25 = f24*f16;
	f0 = f0-f6;
	heapFloat[(fp+-61)] = f0;
	f4 = f4+f5;
	heapFloat[(fp+-57)] = f4;
	f1 = f1+f3;
	heapFloat[(fp+-62)] = f1;
	f2 = heapFloat[(fp+-40)];
	f3 = f7*f2;
	f2 = heapFloat[(fp+-41)];
	f5 = f9*f2;
	f14 = heapFloat[(fp+-52)];
	f6 = f14*f13;
	f2 = heapFloat[(fp+-53)];
	f26 = f2*f16;
	f0 = heapFloat[(r3+2)];
	heapFloat[(fp+-71)] = f0;
	f1 = heapFloat[(r1+81)];
	f2 = heapFloat[(r1+80)];
	f4 = heapFloat[(r3+8)];
	heapFloat[(fp+-38)] = f4;
	f13 = heapFloat[(r3+9)];
	heapFloat[(fp+-39)] = f13;
	f14 = heapFloat[(r4+6)];
	heapFloat[(fp+-37)] = f14;
	f15 = heapFloat[(r3+6)];
	heapFloat[(fp+-70)] = f15;
	f0 = heapFloat[(r1+82)];
	heapFloat[(fp+-82)] = f0;
	f4 = heapFloat[(fp+-76)];
	f10 = f4-f10;
	heapFloat[(fp+-63)] = f10;
	f14 = heapFloat[(fp+-66)];
	f13 = heapFloat[(fp+-59)];
	f15 = f14*f13;
	f16 = heapFloat[(fp+-67)];
	f14 = heapFloat[(fp+-60)];
	f19 = f16*f14;
	f20 = heapFloat[(fp+-64)];
	f22 = f20*f13;
	f24 = heapFloat[(fp+-65)];
	f27 = f24*f14;
	f28 = heapFloat[(fp+-68)];
	f29 = f8*f28;
	f16 = heapFloat[(fp+-69)];
	f30 = f12*f16;
	f0 = f7*f28;
	f4 = f9*f16;
	f11 = f11+f21;
	heapFloat[(fp+-42)] = f11;
	f21 = heapFloat[(fp+-71)];
	f10 = f2*f21;
	heapFloat[(fp+-43)] = f10;
	f10 = f23+f25;
	heapFloat[(fp+-44)] = f10;
	f13 = heapFloat[(fp+-61)];
	f11 = heapFloat[(fp+-57)];
	f14 = f13*f11;
	f3 = f3+f5;
	f5 = f1*f21;
	f6 = f6+f26;
	f16 = heapFloat[(fp+-62)];
	f20 = f16*f11;
	f23 = heapFloat[(fp+-40)];
	f24 = f17*f23;
	f25 = heapFloat[(fp+-41)];
	f26 = f18*f25;
	f28 = heapFloat[(fp+-56)];
	f13 = heapFloat[(fp+-50)];
	f10 = f28*f13;
	f11 = heapFloat[(fp+-58)];
	f16 = heapFloat[(fp+-51)];
	f11 = f11*f16;
	f13 = heapFloat[(r3+10)];
	heapFloat[(fp+-72)] = f13;
	f15 = f15+f19;
	f13 = heapFloat[(fp+-81)];
	f19 = heapFloat[(fp+-37)];
	f13 = f13*f19;
	f22 = f22+f27;
	f19 = heapFloat[(fp+-80)];
	f27 = heapFloat[(fp+-37)];
	f16 = f19*f27;
	f19 = heapFloat[(fp+-54)];
	f21 = heapFloat[(fp+-59)];
	f19 = f19*f21;
	f21 = heapFloat[(fp+-55)];
	f23 = heapFloat[(fp+-60)];
	f21 = f21*f23;
	f23 = heapFloat[(fp+-38)];
	f8 = f8*f23;
	f23 = heapFloat[(fp+-39)];
	f12 = f12*f23;
	f23 = heapFloat[(fp+-38)];
	f7 = f7*f23;
	f23 = heapFloat[(fp+-39)];
	f9 = f9*f23;
	f29 = f29+f30;
	f30 = heapFloat[(fp+-70)];
	f23 = f2*f30;
	f0 = f0+f4;
	f4 = f1*f30;
	f28 = heapFloat[(fp+-68)];
	f25 = f17*f28;
	f27 = heapFloat[(fp+-69)];
	f27 = f18*f27;
	f28 = heapFloat[(fp+-42)];
	f30 = heapFloat[(fp+-43)];
	f28 = f28+f30;
	f30 = heapFloat[(fp+-44)];
	f14 = f30+f14;
	heapFloat[(fp+-73)] = f14;
	f3 = f3+f5;
	f5 = f6+f20;
	heapFloat[(fp+-42)] = f5;
	f6 = f24+f26;
	f20 = heapFloat[(fp+-82)];
	f14 = heapFloat[(fp+-71)];
	f24 = f20*f14;
	f10 = f10+f11;
	f26 = heapFloat[(fp+-63)];
	f11 = heapFloat[(fp+-57)];
	f30 = f26*f11;
	f5 = f15+f13;
	heapFloat[(fp+-44)] = f5;
	f5 = f22+f16;
	heapFloat[(fp+-45)] = f5;
	f11 = f29+f23;
	f0 = f0+f4;
	f4 = f19+f21;
	f21 = heapFloat[(fp+-77)];
	f13 = heapFloat[(fp+-37)];
	f14 = f21*f13;
	f8 = f8+f12;
	f13 = heapFloat[(fp+-72)];
	f2 = f2*f13;
	f7 = f7+f9;
	f1 = f1*f13;
	f23 = heapFloat[(fp+-38)];
	f9 = f17*f23;
	f23 = heapFloat[(fp+-39)];
	f12 = f18*f23;
	f15 = f25+f27;
	f16 = heapFloat[(fp+-70)];
	f17 = f20*f16;
	f18 = heapFloat[(fp+-73)];
	f19 = f28*f18;
	f5 = heapFloat[(fp+-42)];
	f22 = f3*f5;
	f6 = f6+f24;
	f10 = f10+f30;
	heapFloat[(fp+-43)] = f10;
	f4 = f4+f14;
	heapFloat[(fp+-74)] = f4;
	f14 = heapFloat[(r1+84)];
	f24 = heapFloat[(r1+85)];
	f25 = heapFloat[(r1+86)];
	f4 = heapFloat[(r4+8)];
	heapFloat[(fp+-46)] = f4;
	f5 = heapFloat[(r1+100)];
	heapFloat[(fp+-85)] = f5;
	f4 = heapFloat[(r4+9)];
	heapFloat[(fp+-47)] = f4;
	f5 = heapFloat[(r1+101)];
	heapFloat[(fp+-86)] = f5;
	f10 = heapFloat[(r4+10)];
	heapFloat[(fp+-75)] = f10;
	f13 = heapFloat[(r1+102)];
	heapFloat[(fp+-84)] = f13;
	f2 = f8+f2;
	f1 = f7+f1;
	f7 = f15+f17;
	f8 = heapFloat[(fp+-78)];
	f5 = heapFloat[(fp+-44)];
	f15 = f8*f5;
	f16 = heapFloat[(fp+-79)];
	f5 = heapFloat[(fp+-45)];
	f17 = f16*f5;
	f18 = heapFloat[(fp+-52)];
	f5 = heapFloat[(fp+-44)];
	f20 = f18*f5;
	f21 = heapFloat[(fp+-53)];
	f5 = heapFloat[(fp+-45)];
	f23 = f21*f5;
	f9 = f9+f12;
	f12 = heapFloat[(fp+-82)];
	f13 = heapFloat[(fp+-72)];
	f12 = f12*f13;
	f18 = heapFloat[(fp+-73)];
	f26 = f11*f18;
	f5 = heapFloat[(fp+-42)];
	f27 = f0*f5;
	f19 = f19+f22;
	f10 = heapFloat[(fp+-43)];
	f22 = f6*f10;
	f29 = heapFloat[(r3+14)];
	heapFloat[(fp+-82)] = f29;
	f30 = heapFloat[(r3+13)];
	heapFloat[(fp+-87)] = f30;
	f4 = heapFloat[(r3+12)];
	heapFloat[(fp+-89)] = f4;
	f4 = heapFloat[(r4+14)];
	heapFloat[(fp+-88)] = f4;
	f4 = heapFloat[(r4+13)];
	heapFloat[(fp+-90)] = f4;
	f4 = heapFloat[(r4+12)];
	heapFloat[(fp+-91)] = f4;
	r3 = sp + -128;
	f9 = f9+f12;
	f12 = heapFloat[(fp+-66)];
	f4 = heapFloat[(fp+-46)];
	f12 = f12*f4;
	f4 = heapFloat[(fp+-67)];
	f5 = heapFloat[(fp+-47)];
	f4 = f4*f5;
	f5 = heapFloat[(fp+-64)];
	f8 = heapFloat[(fp+-46)];
	f5 = f5*f8;
	f8 = heapFloat[(fp+-65)];
	f10 = heapFloat[(fp+-47)];
	f8 = f8*f10;
	f15 = f15+f17;
	f13 = heapFloat[(fp+-61)];
	f17 = heapFloat[(fp+-74)];
	f10 = f13*f17;
	f20 = f20+f23;
	f16 = heapFloat[(fp+-62)];
	f23 = f16*f17;
	f13 = heapFloat[(fp+-56)];
	f16 = heapFloat[(fp+-44)];
	f13 = f13*f16;
	f16 = heapFloat[(fp+-58)];
	f17 = heapFloat[(fp+-45)];
	f16 = f16*f17;
	f17 = f2*f18;
	f18 = heapFloat[(fp+-42)];
	f18 = f1*f18;
	f26 = f26+f27;
	f27 = heapFloat[(fp+-43)];
	f21 = f7*f27;
	f19 = f19+f22;
	f10 = f15+f10;
	f15 = f20+f23;
	r4 = r3 >> 2;
	f20 = heapFloat[(fp+-40)];
	f20 = f20*f14;
	f22 = heapFloat[(fp+-41)];
	f22 = f22*f24;
	f4 = f12+f4;
	f12 = heapFloat[(fp+-81)];
	f23 = heapFloat[(fp+-75)];
	f12 = f12*f23;
	f5 = f5+f8;
	f8 = heapFloat[(fp+-80)];
	f8 = f8*f23;
	f23 = heapFloat[(fp+-54)];
	f27 = heapFloat[(fp+-46)];
	f23 = f23*f27;
	f27 = heapFloat[(fp+-55)];
	f29 = heapFloat[(fp+-47)];
	f27 = f27*f29;
	f13 = f13+f16;
	f16 = heapFloat[(fp+-63)];
	f29 = heapFloat[(fp+-74)];
	f16 = f16*f29;
	f17 = f17+f18;
	f18 = heapFloat[(fp+-43)];
	f18 = f9*f18;
	f21 = f26+f21;
	heapFloat[(fp+-32)] = f19;
	f4 = f4+f12;
	f5 = f5+f8;
	f8 = f13+f16;
	f12 = f20+f22;
	f13 = heapFloat[(fp+-71)];
	f13 = f13*f25;
	f16 = heapFloat[(fp+-68)];
	f16 = f16*f14;
	f19 = heapFloat[(fp+-69)];
	f19 = f19*f24;
	f20 = f23+f27;
	f22 = heapFloat[(fp+-77)];
	f23 = heapFloat[(fp+-75)];
	f22 = f22*f23;
	f26 = f28*f10;
	f27 = f3*f15;
	f17 = f17+f18;
	heapFloat[(r4+1)] = f21;
	f18 = f20+f22;
	f12 = f12+f13;
	heapFloat[(r4+2)] = f17;
	f13 = f16+f19;
	f16 = heapFloat[(fp+-70)];
	f16 = f16*f25;
	f17 = heapFloat[(fp+-38)];
	f14 = f17*f14;
	f17 = heapFloat[(fp+-39)];
	f17 = f17*f24;
	f19 = heapFloat[(fp+-78)];
	f19 = f19*f4;
	f20 = heapFloat[(fp+-79)];
	f20 = f20*f5;
	f21 = heapFloat[(fp+-52)];
	f21 = f21*f4;
	f22 = heapFloat[(fp+-53)];
	f22 = f22*f5;
	f24 = f11*f10;
	f23 = f0*f15;
	f26 = f26+f27;
	f27 = f6*f8;
	f29 = heapFloat[(fp+-89)];
	f12 = f12+f29;
	f13 = f13+f16;
	f14 = f14+f17;
	f16 = heapFloat[(fp+-72)];
	f16 = f16*f25;
	f17 = f19+f20;
	f19 = heapFloat[(fp+-61)];
	f19 = f19*f18;
	f20 = f21+f22;
	f21 = heapFloat[(fp+-62)];
	f21 = f21*f18;
	f22 = heapFloat[(fp+-56)];
	f22 = f22*f4;
	f25 = heapFloat[(fp+-58)];
	f25 = f25*f5;
	f29 = f2*f10;
	f30 = f1*f15;
	f23 = f24+f23;
	f24 = f7*f8;
	f26 = f26+f27;
	heap32[(r4+3)] = 0;
	f12 = -f12;
	f27 = heapFloat[(fp+-87)];
	f13 = f13+f27;
	f17 = f17+f19;
	f19 = f20+f21;
	f14 = f14+f16;
	f16 = f22+f25;
	f20 = heapFloat[(fp+-63)];
	f20 = f20*f18;
	f21 = f29+f30;
	f22 = f9*f8;
	f23 = f23+f24;
	heapFloat[(r4+4)] = f26;
	f29 = heapFloat[(fp+-82)];
	f14 = f14+f29;
	f16 = f16+f20;
	f20 = f28*f12;
	f24 = f11*f13;
	f25 = f3*f12;
	f26 = f0*f13;
	f27 = f28*f17;
	f3 = f3*f19;
	f21 = f21+f22;
	heapFloat[(r4+5)] = f23;
	f22 =                         0;
	heapFloat[(r4+6)] = f21;
	f20 = f20-f24;
	f21 = f2*f14;
	f23 = f25-f26;
	f24 = f1*f14;
	f12 = f6*f12;
	f13 = f7*f13;
	f25 = heapFloat[(fp+-48)];
	f26 = heapFloat[(fp+-85)];
	f25 = f25*f26;
	f28 = heapFloat[(fp+-49)];
	f29 = heapFloat[(fp+-86)];
	f28 = f28*f29;
	f11 = f11*f17;
	f0 = f0*f19;
	f3 = f27+f3;
	f6 = f6*f16;
	f20 = f20-f21;
	f21 = f23-f24;
	f23 = heapFloat[(fp+-59)];
	f23 = f23*f26;
	f24 = heapFloat[(fp+-60)];
	f24 = f24*f29;
	f12 = f12-f13;
	f13 = f9*f14;
	f14 = heapFloat[(fp+-50)];
	f14 = f14*f22;
	f27 = heapFloat[(fp+-51)];
	f27 = f27*f22;
	f25 = f25+f28;
	f28 = heapFloat[(fp+-83)];
	f30 = heapFloat[(fp+-84)];
	f28 = f28*f30;
	f2 = f2*f17;
	f1 = f1*f19;
	f0 = f11+f0;
	f7 = f7*f16;
	f3 = f3+f6;
	heap32[(r4+7)] = 0;
	f6 = f12-f13;
	f11 = f25+f28;
	f12 = heapFloat[(fp+-46)];
	f12 = f12*f26;
	f13 = heapFloat[(fp+-47)];
	f13 = f13*f29;
	f25 = heapFloat[(fp+-44)];
	f25 = f25*f22;
	f26 = heapFloat[(fp+-45)];
	f26 = f26*f22;
	f23 = f23+f24;
	f24 = heapFloat[(fp+-37)];
	f24 = f24*f30;
	f28 = heapFloat[(fp+-73)];
	f28 = f28*f20;
	f29 = heapFloat[(fp+-42)];
	f29 = f29*f21;
	f14 = f14+f27;
	f27 = heapFloat[(fp+-57)];
	f27 = f27*f22;
	f1 = f2+f1;
	f2 = f9*f16;
	f0 = f0+f7;
	heapFloat[(r4+8)] = f3;
	f3 = f23+f24;
	f4 = f4*f22;
	f5 = f5*f22;
	f7 = f12+f13;
	f23 = heapFloat[(fp+-75)];
	f9 = f23*f30;
	f10 = f10*f20;
	f12 = f15*f21;
	f13 = f25+f26;
	f15 = heapFloat[(fp+-74)];
	f15 = f15*f22;
	f23 = f28+f29;
	f24 = heapFloat[(fp+-43)];
	f24 = f24*f6;
	f14 = f14+f27;
	f25 = heapFloat[(fp+-91)];
	f11 = f11+f25;
	f1 = f1+f2;
	heapFloat[(r4+9)] = f0;
	f0 = f7+f9;
	heapFloat[(r4+10)] = f1;
	f1 = f17*f20;
	f2 = f19*f21;
	f4 = f4+f5;
	f5 = f18*f22;
	f7 = f10+f12;
	f8 = f8*f6;
	f9 = f13+f15;
	f10 = heapFloat[(fp+-90)];
	f3 = f3+f10;
	f10 = f23+f24;
	f11 = f14+f11;
	f1 = f1+f2;
	f2 = f16*f6;
	f4 = f4+f5;
	f5 = heapFloat[(fp+-88)];
	f0 = f0+f5;
	f5 = f7+f8;
	f3 = f9+f3;
	f6 = f10+f11;
	heap32[(r4+11)] = 0;
	f1 = f1+f2;
	f0 = f4+f0;
	f2 = f5+f3;
	heapFloat[(r4+12)] = f6;
	f0 = f1+f0;
	heapFloat[(r4+13)] = f2;
	heapFloat[(r4+14)] = f0;
	heap32[(r4+15)] = 0;
	r4 = sp + -144;
	heap32[(g0)] = r3;
	heap32[(g0+1)] = r4;
	_ZNK11btMatrix3x311getRotationER12btQuaternion(i7);
	r3 = r4 >> 2;
	f0 = heapFloat[(r3+2)];
	f1 = heapFloat[(r3+1)];
	f2 = heapFloat[(fp+-36)];
	heapFloat[(r1+112)] = f2;
	heapFloat[(r1+113)] = f1;
	heapFloat[(r1+114)] = f0;
	heap32[(r1+115)] = 0;
	f2 = f2*f2;
	f1 = f1*f1;
	f1 = f2+f1;
	f0 = f0*f0;
	f0 = f1+f0;
	heapFloat[(g0)] = f0;
	sqrtf(i7);
	f4 = heapFloat[(fp+-76)];
	f0 = f4/f_g0;
	f1 = heapFloat[(r1+112)];
	f1 = f1*f0;
	heapFloat[(r1+112)] = f1;
	f1 = heapFloat[(r1+113)];
	f1 = f1*f0;
	heapFloat[(r1+113)] = f1;
	f1 = heapFloat[(r1+114)];
	f0 = f1*f0;
	heapFloat[(r1+114)] = f0;
	f0 = heapFloat[(r3+3)];
	f1 =                        -1;
	f0 = f0 < f1 ? f1 : f0;
	f0 = f0 > f4 ? f4 : f0;
	heapFloat[(g0)] = f0;
	acosf(i7);
	f0 = f_g0+f_g0;
	heapFloat[(r1+123)] = f0;
	if(f0 <f22) //_LBB587_4
{
	f0 = -f0;
}
	f1 =   1.1920928955078125e-007;
	if(f0 <f1) //_LBB587_83
{
__label__ = 72;
}
else{
	r1 = 1;
	heap8[r0+514] = r1;
	return;
}
}
}
_8: do {
if (__label__ == 6){
	r2 = heap32[(fp+3)];
	r5 = heap32[(fp+4)];
	r6 = sp + -64;
	r7 = (r0 + 288)|0;
	heap32[(g0)] = r7;
	heap32[(g0+1)] = r6;
	_ZNK11btMatrix3x311getRotationER12btQuaternion(i7);
	r7 = sp + -48;
	heap32[(g0)] = r3;
	heap32[(g0+1)] = r7;
	_ZNK11btMatrix3x311getRotationER12btQuaternion(i7);
	r7 = r7 >> 2;
	r6 = r6 >> 2;
	f0 = heapFloat[(r7+3)];
	f1 = heapFloat[(r6+3)];
	f2 = heapFloat[(fp+-12)];
	f3 = heapFloat[(fp+-16)];
	f4 = heapFloat[(r7+1)];
	f5 = heapFloat[(r6+1)];
	f6 = heapFloat[(r7+2)];
	f7 = heapFloat[(r6+2)];
	r6 = sp + -32;
	r7 = (r0 + 352)|0;
	heap32[(g0)] = r7;
	heap32[(g0+1)] = r6;
	_ZNK11btMatrix3x311getRotationER12btQuaternion(i7);
	r7 = sp + -16;
	heap32[(g0)] = r4;
	heap32[(g0+1)] = r7;
	_ZNK11btMatrix3x311getRotationER12btQuaternion(i7);
	r6 = r6 >> 2;
	r7 = r7 >> 2;
	f8 = heapFloat[(r7+3)];
	f9 = heapFloat[(r6+3)];
	f10 = heapFloat[(fp+-4)];
	f11 = heapFloat[(r6+1)];
	f12 = heapFloat[(r7+1)];
	f13 = heapFloat[(fp+-8)];
	f14 = heapFloat[(r6+2)];
	f15 = heapFloat[(r7+2)];
	f16 = f8*f9;
	f17 = f10*f13;
	f18 = f0*f3;
	f19 = f2*f1;
	f20 = f0*f1;
	f21 = f2*f3;
	f22 = f8*f13;
	f23 = f10*f9;
	f24 = f8*f11;
	f25 = f12*f9;
	f26 = f0*f5;
	f27 = f4*f1;
	f16 = f16-f17;
	f17 = f12*f11;
	f18 = f18+f19;
	f19 = f4*f7;
	f20 = f20-f21;
	f21 = f4*f5;
	f22 = f22+f23;
	f23 = f12*f14;
	f0 = f0*f7;
	f1 = f6*f1;
	f24 = f24+f25;
	f25 = f15*f13;
	f26 = f26+f27;
	f27 = f6*f3;
	f8 = f8*f14;
	f9 = f15*f9;
	f16 = f16-f17;
	f17 = f15*f14;
	f18 = f18+f19;
	f19 = f6*f5;
	f20 = f20-f21;
	f6 = f6*f7;
	f21 = f22+f23;
	f15 = f15*f11;
	f0 = f0+f1;
	f1 = f2*f5;
	f5 = f24+f25;
	f14 = f10*f14;
	f22 = f26+f27;
	f2 = f2*f7;
	f7 = f8+f9;
	f8 = f10*f11;
	f9 = f21-f15;
	heapFloat[(fp+-46)] = f9;
	f10 = f18-f19;
	heapFloat[(fp+-49)] = f10;
	f5 = f5-f14;
	heapFloat[(fp+-45)] = f5;
	f6 = f20-f6;
	heapFloat[(fp+-52)] = f6;
	f11 = f16-f17;
	heapFloat[(fp+-48)] = f11;
	f2 = f22-f2;
	heapFloat[(fp+-50)] = f2;
	f0 = f0+f1;
	f1 = f4*f3;
	f3 = f7+f8;
	f4 = f12*f13;
	f3 = f3-f4;
	heapFloat[(fp+-47)] = f3;
	f0 = f0-f1;
	heapFloat[(fp+-51)] = f0;
	f1 = f11*f2;
	f4 = f6*f5;
	f7 = f11*f6;
	f8 = f10*f9;
	f12 = f11*f10;
	f13 = f6*f9;
	f1 = f1-f4;
	f4 = f10*f3;
	f7 = f7+f8;
	f8 = f2*f5;
	f11 = f11*f0;
	f6 = f6*f3;
	f12 = f12-f13;
	f13 = f0*f5;
	f1 = f1-f4;
	f4 = f0*f9;
	f7 = f7+f8;
	f0 = f0*f3;
	f6 = f11-f6;
	f8 = f2*f9;
	f11 = f12-f13;
	f2 = f2*f3;
	f2 = f11+f2;
	f1 = f1+f4;
	f4 =                         0;
	f0 = f7+f0;
	f6 = f6-f8;
	f7 = f10*f5;
	f6 = f6+f7;
	f7 = f1*f4;
	f8 = -f2;
	f10 = f0*f4;
	f11 = f2*f4;
	f12 = f10+f6;
	f8 = f8-f7;
	f13 = f6*f4;
	f7 = f0+f7;
	f8 = f8-f13;
	f7 = f7-f13;
	f12 = f12-f11;
	f10 = f10+f11;
	f10 = f10-f1;
	f11 = f7*f0;
	f13 = f8*f2;
	f14 = f12*f0;
	f15 = f8*f1;
	f11 = f11-f13;
	f13 = f12*f6;
	f14 = f14-f15;
	f15 = f10*f2;
	f16 = f10*f0;
	f8 = f8*f6;
	f11 = f11-f13;
	f10 = f10*f1;
	f13 = f14-f15;
	f14 = f7*f6;
	f8 = f16-f8;
	f7 = f7*f1;
	f10 = f11+f10;
	f11 = f13+f14;
	f7 = f8-f7;
	f8 = f12*f2;
	f7 = f7+f8;
	f8 = f10*f10;
	f12 = f11*f11;
	f8 = f8+f12;
	f12 = f7*f7;
	f8 = f8+f12;
	heapFloat[(g0)] = f8;
	f8 =                         1;
	sqrtf(i7);
	f12 = f8/f_g0;
	f11 = f11*f12;
	f7 = f7*f12;
	f10 = f10*f12;
	f12 = f11*f4;
	f13 = f7*f4;
	f14 = f10+f12;
	f14 = f14+f13;
	f3 = -f3;
	heapFloat[(fp+-43)] = f3;
	f3 = -f5;
	heapFloat[(fp+-44)] = f3;
	f3 = -f9;
	heapFloat[(fp+-42)] = f3;
	f3 =      -0.99999988079071045;
	if(f14 >=f3) //_LBB587_9
{
	f3 = f14+f8;
	f3 = f3+f3;
	heapFloat[(g0)] = f3;
	sqrtf(i7);
	f10 = f10*f4;
	f5 =                       0.5;
	f11 = f11-f10;
	f9 = f8/f_g0;
	f7 = f10-f7;
	f13 = f13-f12;
	f12 = f_g0*f5;
	f11 = f11*f9;
	f10 = f7*f9;
	f7 = f13*f9;
}
else{
	f7 =                        -0;
	f10 =                         1;
	f11 =                         0;
	f12 = f11;
}
	f3 = f7*f7;
	f5 = f10*f10;
	f3 = f3+f5;
	f5 = f11*f11;
	f3 = f3+f5;
	f5 = f12*f12;
	f3 = f3+f5;
	heapFloat[(g0)] = f3;
	sqrtf(i7);
	f3 = f_g0;
	if(f3 !=f4) //_LBB587_12
{
	f3 = f8/f3;
	f5 = f12*f3;
	f7 = f7*f3;
	f9 = f10*f3;
	f3 = f11*f3;
	f10 = f5*f1;
	f11 = f0*f9;
	f12 = f5*f2;
	f13 = f0*f7;
	f14 = f5*f6;
	f15 = f0*f3;
	f10 = f10-f11;
	f11 = f2*f3;
	f12 = f12-f13;
	f13 = f6*f9;
	f0 = f5*f0;
	f16 = f2*f7;
	f14 = f14-f15;
	f15 = f1*f7;
	f10 = f10-f11;
	f11 = f6*f7;
	f12 = f12-f13;
	f13 = f1*f3;
	f10 = f10+f11;
	f11 = f12+f13;
	f0 = f0+f16;
	f1 = f1*f9;
	f12 = f14-f15;
	f2 = f2*f9;
	f2 = f12+f2;
	f12 = f11*f11;
	f13 = f10*f10;
	f0 = f0+f1;
	f1 = f6*f3;
	f0 = f0+f1;
	f1 = f12+f13;
	f6 = f2*f2;
	f1 = f1+f6;
	f6 = f0*f0;
	f1 = f1+f6;
	heapFloat[(g0)] = f1;
	sqrtf(i7);
	f1 = f_g0;
	if(f1 !=f4) //_LBB587_14
{
	f1 = f8/f1;
	f6 = heapFloat[(r1+108)];
	heapFloat[(fp+-40)] = f6;
	f12 = heapFloat[(r1+111)];
	f11 = f11*f1;
	heapFloat[(fp+-37)] = f11;
	f10 = f10*f1;
	heapFloat[(fp+-38)] = f10;
	f2 = f2*f1;
	heapFloat[(fp+-39)] = f2;
	f0 = f0*f1;
	heapFloat[(fp+-41)] = f0;
	if(f6 <f12) //_LBB587_33
{
__label__ = 27;
}
else{
	f0 = heapFloat[(r1+109)];
	if(f0 <f12) //_LBB587_33
{
__label__ = 27;
}
else{
	f12 =                        -1;
	f12 = f5 < f12 ? f12 : f5;
	f12 = f12 > f8 ? f8 : f12;
	heapFloat[(g0)] = f12;
	acosf(i7);
	f12 = f_g0+f_g0;
	f0 =   1.1920928955078125e-007;
	if(f12 >f0) //_LBB587_18
{
	f4 = f7*f7;
	f0 = f9*f9;
	f4 = f4+f0;
	f0 = f3*f3;
	f4 = f4+f0;
	heapFloat[(g0)] = f4;
	f4 =                         1;
	sqrtf(i7);
	f0 = f4/f_g0;
	f1 = f9*f0;
	f2 = f7*f0;
	f0 = f3*f0;
	f3 = f1; //fstod f1, f3
	f3 = Math.abs(f3);
	f5 =   1.1920928955078125e-007;
	if(f3 >f5) //_LBB587_20
{
	f3 = heapFloat[(r1+109)];
	f5 = heapFloat[(r1+108)];
	f6 = f0*f0;
	f7 = f1*f1;
	f6 = f6/f7;
	f5 = f5*f5;
	f3 = f3*f3;
	f5 = f6/f5;
	f3 = f4/f3;
	f4 = f6+f4;
	f3 = f5+f3;
	f4 = f4/f3;
	heapFloat[(g0)] = f4;
	sqrtf(i7);
	f4 = f_g0;
}
else{
	f4 = heapFloat[(r1+108)];
}
}
	f3 = heapFloat[(r1+104)];
	f5 = f3*f4;
	if(f5 >=f12) //_LBB587_67
{
__label__ = 58;
}
else{
	r3 = 1;
	heap8[r0+514] = r3;
if(!(f12 >=f4)) //_LBB587_24
{
	f6 =       0.99999988079071045;
	if(f3 <f6) //_LBB587_25
{
	f8 = f12-f5;
	f3 = f4-f5;
	f8 = f8/f3;
}
}
	f12 = f12-f5;
	heapFloat[(r1+129)] = f8;
	f3 = f1; //fstod f1, f3
	heapFloat[(r1+123)] = f12;
	f12 = Math.abs(f3);
	f3 =   1.1920928955078125e-007;
	if(f12 >f3) //_LBB587_28
{
	f0 = -f0;
	f12 = heapFloat[(r1+109)];
	f3 = heapFloat[(r1+108)];
	f12 = f12/f3;
	f3 = f0/f1;
	f12 = f12*f3;
	f12 = f12*f1;
	f12 = f12; //fstod f12, f12
	f12 = Math.abs(f12);
	f12 = f12; //fdtos f12, f12
	f3 =                         0;
	if(f0 <=f3) //_LBB587_30
{
	f12 = -f12;
}
	f0 = f2*f2;
	f3 = f1*f1;
	f0 = f0+f3;
	f3 = f12*f12;
	f0 = f0+f3;
	heapFloat[(g0)] = f0;
	f0 =                         1;
	sqrtf(i7);
	f0 = f0/f_g0;
	f12 = -f12;
	f2 = f2*f0;
	f1 = f1*f0;
	f0 = f0*f12;
}
	f12 = -f2;
	f3 = -f1;
	f4 = heapFloat[(fp+-46)];
	f5 = f2*f4;
	f6 = heapFloat[(fp+-45)];
	f7 = f6*f1;
	f8 = heapFloat[(fp+-48)];
	f12 = f8*f12;
	f9 = f6*f0;
	f10 = -f0;
	f5 = f5+f7;
	f7 = heapFloat[(fp+-47)];
	f11 = f7*f0;
	f12 = f12-f9;
	f9 = f7*f1;
	f3 = f8*f3;
	f7 = f7*f2;
	f12 = f12+f9;
	f5 = f5+f11;
	f3 = f3-f7;
	f0 = f4*f0;
	f7 = f8*f10;
	f1 = f4*f1;
	f0 = f3+f0;
	f3 = heapFloat[(fp+-42)];
	f4 = f5*f3;
	f9 = f12*f8;
	f1 = f7-f1;
	f2 = f6*f2;
	f1 = f1+f2;
	f2 = heapFloat[(fp+-44)];
	f6 = f5*f2;
	f7 = f0*f8;
	f4 = f4+f9;
	f9 = heapFloat[(fp+-43)];
	f10 = f0*f9;
	f5 = f5*f9;
	f8 = f1*f8;
	f6 = f6+f7;
	f7 = f1*f3;
	f4 = f4+f10;
	f1 = f1*f2;
	f1 = f4-f1;
	f4 = f5+f8;
	f2 = f12*f2;
	f5 = f6+f7;
	f12 = f12*f9;
	f2 = f4+f2;
	f0 = f0*f3;
	f12 = f5-f12;
	heapFloat[(r1+112)] = f1;
	f0 = f2-f0;
	heapFloat[(r1+113)] = f12;
	heapFloat[(r1+114)] = f0;
	heap32[(r1+115)] = 0;
	heap32[(r1+131)] = 0;
	heap32[(r1+132)] = 0;
	heap32[(r1+133)] = 0;
	r3 = r2 >> 2;
	heap32[(r1+134)] = 0;
	r4 = r5 >> 2;
	f2 = heapFloat[(r3+1)];
	f3 = heapFloat[(r3+5)];
	f4 = heapFloat[(r3)];
	f5 = heapFloat[(r3+4)];
	f6 = heapFloat[(r4+1)];
	f7 = heapFloat[(r4+5)];
	f8 = heapFloat[(r4)];
	f9 = heapFloat[(r4+4)];
	f10 = heapFloat[(r3+2)];
	f11 = heapFloat[(r3+6)];
	f13 = heapFloat[(r3+9)];
	f14 = heapFloat[(r3+8)];
	f15 = heapFloat[(r4+2)];
	f16 = heapFloat[(r4+6)];
	f17 = heapFloat[(r4+9)];
	f18 = heapFloat[(r4+8)];
	f4 = f4*f1;
	f5 = f5*f12;
	f2 = f2*f1;
	f3 = f3*f12;
	f8 = f8*f1;
	f9 = f9*f12;
	f6 = f6*f1;
	f7 = f7*f12;
	f19 = heapFloat[(r3+10)];
	f20 = heapFloat[(r4+10)];
	f4 = f4+f5;
	f5 = f14*f0;
	f2 = f2+f3;
	f3 = f13*f0;
	f10 = f10*f1;
	f11 = f11*f12;
	f8 = f8+f9;
	f9 = f18*f0;
	f6 = f6+f7;
	f7 = f17*f0;
	f13 = f15*f1;
	f14 = f16*f12;
	f4 = f4+f5;
	f2 = f2+f3;
	f3 = f8+f9;
	f5 = f6+f7;
	f6 = f10+f11;
	f7 = f19*f0;
	f8 = f13+f14;
	f9 = f20*f0;
	f6 = f6+f7;
	f7 = f8+f9;
	f4 = f1*f4;
	f2 = f12*f2;
	f1 = f1*f3;
	f12 = f12*f5;
	f2 = f4+f2;
	f3 = f0*f6;
	f12 = f1+f12;
	f0 = f0*f7;
	f1 = f2+f3;
	f12 = f12+f0;
	f0 =                         1;
	f12 = f1+f12;
	f12 = f0/f12;
	heapFloat[(r1+120)] = f12;
__label__ = 58;
}
}
}
_37: do {
if (__label__ == 27){
	r4 = r4 >> 2;
	r3 = r3 >> 2;
	f0 = heapFloat[(r1+72)];
	f1 = heapFloat[(r3)];
	f2 = heapFloat[(r1+73)];
	f3 = heapFloat[(r3+4)];
	f4 = heapFloat[(r1+74)];
	f5 = heapFloat[(r1+76)];
	f6 = heapFloat[(r3+1)];
	f7 = heapFloat[(r1+77)];
	f8 = heapFloat[(r3+5)];
	f9 = heapFloat[(r1+78)];
	f10 = heapFloat[(r4)];
	f11 = heapFloat[(r1+88)];
	f13 = heapFloat[(r4+4)];
	heapFloat[(fp+-55)] = f13;
	f14 = heapFloat[(r4+1)];
	f15 = heapFloat[(r1+92)];
	f13 = heapFloat[(r4+5)];
	heapFloat[(fp+-56)] = f13;
	f16 = heapFloat[(r3+8)];
	f17 = heapFloat[(r3+9)];
	f18 = heapFloat[(r4+8)];
	heapFloat[(fp+-53)] = f18;
	f19 = heapFloat[(r4+9)];
	heapFloat[(fp+-54)] = f19;
	f13 = f1*f0;
	heapFloat[(fp+-57)] = f13;
	f13 = f6*f5;
	heapFloat[(fp+-61)] = f13;
	f18 = f3*f0;
	heapFloat[(fp+-59)] = f18;
	f13 = f8*f5;
	heapFloat[(fp+-62)] = f13;
	f18 = heapFloat[(r1+80)];
	f19 = heapFloat[(r3+2)];
	f20 = heapFloat[(r1+81)];
	f21 = heapFloat[(r3+6)];
	f22 = heapFloat[(r1+82)];
	f23 = f1*f2;
	f24 = f6*f7;
	f25 = f3*f2;
	f26 = f8*f7;
	f10 = f10*f11;
	heapFloat[(fp+-60)] = f10;
	f10 = f14*f15;
	heapFloat[(fp+-63)] = f10;
	f10 = heapFloat[(r4+2)];
	heapFloat[(fp+-64)] = f10;
	f13 = heapFloat[(r1+96)];
	f14 = heapFloat[(r4+6)];
	heapFloat[(fp+-58)] = f14;
	f1 = f1*f4;
	f6 = f6*f9;
	f27 = heapFloat[(fp+-55)];
	f27 = f27*f11;
	f28 = heapFloat[(fp+-56)];
	f28 = f28*f15;
	f3 = f3*f4;
	f8 = f8*f9;
	f29 = heapFloat[(r3+10)];
	f30 = heapFloat[(r4+10)];
	heapFloat[(fp+-55)] = f30;
	f10 = heapFloat[(fp+-57)];
	f14 = heapFloat[(fp+-61)];
	f10 = f10+f14;
	heapFloat[(fp+-56)] = f10;
	f14 = f19*f18;
	f10 = heapFloat[(fp+-59)];
	f30 = heapFloat[(fp+-62)];
	f10 = f10+f30;
	f30 = f21*f18;
	f0 = f16*f0;
	heapFloat[(fp+-57)] = f0;
	f0 = f17*f5;
	heapFloat[(fp+-59)] = f0;
	f5 = f23+f24;
	f23 = f19*f20;
	f24 = f25+f26;
	f25 = f21*f20;
	f2 = f16*f2;
	f7 = f17*f7;
	f26 = heapFloat[(fp+-60)];
	f0 = heapFloat[(fp+-63)];
	f0 = f26+f0;
	f26 = heapFloat[(fp+-64)];
	f26 = f26*f13;
	f1 = f1+f6;
	f6 = f19*f22;
	f19 = f27+f28;
	f27 = heapFloat[(fp+-58)];
	f27 = f27*f13;
	f3 = f3+f8;
	f8 = f21*f22;
	f21 = heapFloat[(fp+-53)];
	f11 = f21*f11;
	f21 = heapFloat[(fp+-54)];
	f15 = f21*f15;
	f4 = f16*f4;
	f9 = f17*f9;
	f16 = heapFloat[(fp+-56)];
	f14 = f16+f14;
	f0 = f0+f26;
	f5 = f5+f23;
	f1 = f1+f6;
	f6 = f10+f30;
	f10 = f19+f27;
	f16 = f24+f25;
	f3 = f3+f8;
	f8 = heapFloat[(fp+-57)];
	f17 = heapFloat[(fp+-59)];
	f8 = f8+f17;
	f17 = f29*f18;
	f2 = f2+f7;
	f7 = f29*f20;
	f11 = f11+f15;
	f30 = heapFloat[(fp+-55)];
	f13 = f30*f13;
	f4 = f4+f9;
	f9 = f29*f22;
	f8 = f8+f17;
	f11 = f11+f13;
	f2 = f2+f7;
	f4 = f4+f9;
	f7 = f0*f5;
	f9 = f10*f16;
	f13 = f0*f1;
	f15 = f10*f3;
	f7 = f7+f9;
	f9 = f11*f2;
	f13 = f13+f15;
	f15 = f11*f4;
	f7 = f7+f9;
	f9 = f13+f15;
	f13 = heapFloat[(fp+-40)];
if(!(f13 >=f12)) //_LBB587_44
{
	f13 = heapFloat[(r1+109)];
if(!(f13 >=f12)) //_LBB587_44
{
	f1 =                         0;
	if(f7 <f1) //_LBB587_37
{
	f7 = -f7;
}
	f2 =   1.1920928955078125e-007;
if(!(f7 >=f2)) //_LBB587_43
{
	if(f9 <f1) //_LBB587_41
{
	f9 = -f9;
}
	if(f9 <f2) //_LBB587_67
{
break _37;
}
}
	f1 = f10*f8;
	f2 = f11*f6;
	f1 = f1-f2;
	r3 = 1;
	f2 = f11*f14;
	f3 = f0*f8;
	f2 = f2-f3;
	f0 = f0*f6;
	f3 = f10*f14;
	f1 = -f1;
	heap8[r0+514] = r3;
	f0 = f0-f3;
	f2 = -f2;
	heapFloat[(r1+112)] = f1;
	f0 = -f0;
	heapFloat[(r1+113)] = f2;
	heapFloat[(r1+114)] = f0;
	heap32[(r1+115)] = 0;
break _37;
}
}
	f13 = f0*f14;
	f15 = f10*f6;
	f13 = f13+f15;
	f15 = f11*f8;
	f13 = f13+f15;
	f15 = heapFloat[(fp+-40)];
_52: do {
	if(f15 >=f12) //_LBB587_56
{
	f15 =                         0;
	if(f9 <f15) //_LBB587_58
{
	f17 = -f9;
}
else{
	f17 = f9;
}
	f18 =   1.1920928955078125e-007;
	if(f17 <f18) //_LBB587_49
{
break _52;
}
else{
	r3 = 1;
	heap8[r0+514] = r3;
	f17 = heapFloat[(fp+-40)];
	if(f17 <f12) //_LBB587_49
{
break _52;
}
else{
	heapFloat[(g0)] = f7;
	heapFloat[(g0+1)] = f13;
	atan2f(i7);
	f9 = f_g0;
	f12 = heapFloat[(r1+108)];
	if(f12 >=f9) //_LBB587_63
{
	f17 = -f12;
	if(f9 <f17) //_LBB587_65
{
	heapFloat[(g0)] = f12;
	cosf(i7);
	f13 = f_g0;
	f7 = heapFloat[(r1+108)];
	heapFloat[(g0)] = f7;
	sinf(i7);
	f7 = -f_g0;
	f9 =                         0;
}
else{
	f9 = f15;
}
}
else{
	heapFloat[(g0)] = f12;
	cosf(i7);
	f13 = f_g0;
	f9 = heapFloat[(r1+108)];
	heapFloat[(g0)] = f9;
	f9 =                         0;
	sinf(i7);
	f7 = f_g0;
}
}
}
}
else{
	f15 =                         0;
	if(f7 <f15) //_LBB587_47
{
	f17 = -f7;
}
else{
	f17 = f7;
}
	f18 =   1.1920928955078125e-007;
	if(f17 >=f18) //_LBB587_50
{
	r3 = 1;
	heap8[r0+514] = r3;
	f17 = heapFloat[(r1+109)];
if(!(f17 <f12)) //_LBB587_49
{
	heapFloat[(g0)] = f9;
	heapFloat[(g0+1)] = f13;
	atan2f(i7);
	f7 = f_g0;
	f12 = heapFloat[(r1+109)];
	if(f12 >=f7) //_LBB587_53
{
	f17 = -f12;
	if(f7 <f17) //_LBB587_55
{
	heapFloat[(g0)] = f12;
	cosf(i7);
	f13 = f_g0;
	f7 = heapFloat[(r1+109)];
	heapFloat[(g0)] = f7;
	sinf(i7);
	f9 = -f_g0;
	f7 =                         0;
}
else{
	f7 = f15;
}
}
else{
	heapFloat[(g0)] = f12;
	cosf(i7);
	f13 = f_g0;
	f7 = heapFloat[(r1+109)];
	heapFloat[(g0)] = f7;
	f7 =                         0;
	sinf(i7);
	f9 = f_g0;
}
}
}
}
} while(0);
	f12 = f14*f13;
	f5 = f5*f7;
	f6 = f6*f13;
	f14 = f16*f7;
	f5 = f12+f5;
	f1 = f1*f9;
	f6 = f6+f14;
	f3 = f3*f9;
	f8 = f8*f13;
	f2 = f2*f7;
	f1 = f5+f1;
	f3 = f6+f3;
	f2 = f8+f2;
	f4 = f4*f9;
	f2 = f2+f4;
	f4 = f1*f1;
	f5 = f3*f3;
	f4 = f4+f5;
	f5 = f2*f2;
	f4 = f4+f5;
	heapFloat[(g0)] = f4;
	f4 =                         1;
	sqrtf(i7);
	f5 = f4/f_g0;
	f2 = f2*f5;
	f3 = f3*f5;
	f1 = f1*f5;
	f5 = f10*f2;
	f6 = f11*f3;
	f5 = f5-f6;
	f6 = f11*f1;
	f2 = f0*f2;
	f2 = f6-f2;
	f6 = -f5;
	f0 = f0*f3;
	f1 = f10*f1;
	f0 = f0-f1;
	f1 = -f2;
	heapFloat[(r1+112)] = f6;
	f3 = -f0;
	heapFloat[(r1+113)] = f1;
	heapFloat[(r1+114)] = f3;
	heap32[(r1+115)] = 0;
	f1 = f5*f5;
	f2 = f2*f2;
	f1 = f1+f2;
	f0 = f0*f0;
	f0 = f1+f0;
	heapFloat[(g0)] = f0;
	sqrtf(i7);
	heapFloat[(r1+123)] = f_g0;
	f0 = heapFloat[(r1+112)];
	f1 = heapFloat[(r1+113)];
	f2 = heapFloat[(r1+114)];
	f0 = f0*f0;
	f1 = f1*f1;
	f0 = f0+f1;
	f1 = f2*f2;
	f0 = f0+f1;
	heapFloat[(g0)] = f0;
	sqrtf(i7);
	f0 = f4/f_g0;
	f1 = heapFloat[(r1+112)];
	f1 = f1*f0;
	heapFloat[(r1+112)] = f1;
	f1 = heapFloat[(r1+113)];
	f1 = f1*f0;
	heapFloat[(r1+113)] = f1;
	f1 = heapFloat[(r1+114)];
	f0 = f1*f0;
	heapFloat[(r1+114)] = f0;
}
} while(0);
	f0 = heapFloat[(r1+110)];
	f1 =                         0;
	if(f0 <f1) //_LBB587_82
{
	heap32[(r1+125)] = 0;
break _8;
}
else{
	f0 =                        -1;
	f1 = heapFloat[(fp+-41)];
	f1 = f1 < f0 ? f0 : f1;
	f2 =                         1;
	f1 = f1 > f2 ? f2 : f1;
	heapFloat[(g0)] = f1;
	acosf(i7);
	f1 = f_g0+f_g0;
	heapFloat[(r1+125)] = f1;
	f3 =        3.1415927410125732;
	if(f1 >f3) //_LBB587_70
{
	f1 = heapFloat[(fp+-41)];
	f1 = -f1;
	f1 = f1 < f0 ? f0 : f1;
	f0 =                         1;
	f1 = f1 > f0 ? f0 : f1;
	heapFloat[(g0)] = f1;
	acosf(i7);
	f0 = heapFloat[(fp+-39)];
	f0 = -f0;
	heapFloat[(fp+-39)] = f0;
	f0 = heapFloat[(fp+-38)];
	f0 = -f0;
	heapFloat[(fp+-38)] = f0;
	f0 = heapFloat[(fp+-37)];
	f0 = -f0;
	heapFloat[(fp+-37)] = f0;
	f1 = f_g0+f_g0;
	heapFloat[(r1+125)] = f1;
}
	f0 =   1.1920928955078125e-007;
	if(f1 >f0) //_LBB587_73
{
	f1 = heapFloat[(fp+-37)];
	f0 = f1*f1;
	f3 = heapFloat[(fp+-38)];
	f4 = f3*f3;
	f0 = f0+f4;
	f4 = heapFloat[(fp+-39)];
	f5 = f4*f4;
	f0 = f0+f5;
	heapFloat[(g0)] = f0;
	f0 =                         1;
	sqrtf(i7);
	f0 = f0/f_g0;
	f1 = f1*f0;
	heapFloat[(fp+-37)] = f1;
	f3 = f3*f0;
	heapFloat[(fp+-38)] = f3;
	f4 = f4*f0;
	heapFloat[(fp+-39)] = f4;
	f1 = heapFloat[(r1+125)];
}
	f0 = heapFloat[(r1+110)];
	f3 = heapFloat[(r1+104)];
	f4 = f0*f3;
if(!(f1 <=f4)) //_LBB587_80
{
	r3 = 1;
	heap8[r0+513] = r3;
	if(f1 >=f0) //_LBB587_77
{
__label__ = 66;
}
else{
	f5 =       0.99999988079071045;
	if(f3 <f5) //_LBB587_78
{
	f3 = f1-f4;
	f0 = f0-f4;
	f0 = f3/f0;
__label__ = 68;
}
else{
__label__ = 66;
}
}
if (__label__ == 66){
	f0 = f2;
}
	f3 = heapFloat[(fp+-37)];
	f5 = -f3;
	f6 = heapFloat[(fp+-38)];
	f7 = -f6;
	f8 = heapFloat[(fp+-46)];
	f9 = f3*f8;
	f10 = heapFloat[(fp+-45)];
	f11 = f10*f6;
	f12 = heapFloat[(fp+-48)];
	f5 = f12*f5;
	f13 = heapFloat[(fp+-39)];
	f14 = f10*f13;
	f15 = -f13;
	f9 = f9+f11;
	f11 = heapFloat[(fp+-47)];
	f16 = f11*f13;
	f5 = f5-f14;
	f14 = f11*f6;
	f7 = f12*f7;
	f11 = f11*f3;
	f5 = f5+f14;
	f9 = f9+f16;
	f7 = f7-f11;
	f11 = f8*f13;
	f13 = f12*f15;
	f6 = f8*f6;
	f7 = f7+f11;
	f8 = heapFloat[(fp+-42)];
	f11 = f9*f8;
	f14 = f5*f12;
	f6 = f13-f6;
	f3 = f10*f3;
	f3 = f6+f3;
	f6 = heapFloat[(fp+-44)];
	f10 = f9*f6;
	f13 = f7*f12;
	f11 = f11+f14;
	f14 = heapFloat[(fp+-43)];
	f15 = f7*f14;
	f9 = f9*f14;
	f12 = f3*f12;
	f10 = f10+f13;
	f13 = f3*f8;
	f11 = f11+f15;
	f3 = f3*f6;
	f1 = f1-f4;
	heapFloat[(r1+130)] = f0;
	f0 = f9+f12;
	f4 = f5*f6;
	f6 = f10+f13;
	f5 = f5*f14;
	f3 = f11-f3;
	heapFloat[(r1+124)] = f1;
	f0 = f0+f4;
	f1 = f7*f8;
	f4 = f6-f5;
	heapFloat[(r1+116)] = f3;
	f0 = f0-f1;
	heapFloat[(r1+117)] = f4;
	heapFloat[(r1+118)] = f0;
	r2 = r2 >> 2;
	heap32[(r1+119)] = 0;
	r3 = r5 >> 2;
	f1 = heapFloat[(r2+1)];
	f5 = heapFloat[(r2+5)];
	f6 = heapFloat[(r2)];
	f7 = heapFloat[(r2+4)];
	f8 = heapFloat[(r3+1)];
	f9 = heapFloat[(r3+5)];
	f10 = heapFloat[(r3)];
	f11 = heapFloat[(r3+4)];
	f12 = heapFloat[(r2+2)];
	f13 = heapFloat[(r2+6)];
	f14 = heapFloat[(r2+9)];
	f15 = heapFloat[(r2+8)];
	f16 = heapFloat[(r3+2)];
	f17 = heapFloat[(r3+6)];
	f18 = heapFloat[(r3+9)];
	f19 = heapFloat[(r3+8)];
	f6 = f6*f3;
	f7 = f7*f4;
	f1 = f1*f3;
	f5 = f5*f4;
	f10 = f10*f3;
	f11 = f11*f4;
	f8 = f8*f3;
	f9 = f9*f4;
	f20 = heapFloat[(r2+10)];
	f21 = heapFloat[(r3+10)];
	f6 = f6+f7;
	f7 = f15*f0;
	f1 = f1+f5;
	f5 = f14*f0;
	f12 = f12*f3;
	f13 = f13*f4;
	f10 = f10+f11;
	f11 = f19*f0;
	f8 = f8+f9;
	f9 = f18*f0;
	f14 = f16*f3;
	f15 = f17*f4;
	f6 = f6+f7;
	f1 = f1+f5;
	f5 = f10+f11;
	f7 = f8+f9;
	f8 = f12+f13;
	f9 = f20*f0;
	f10 = f14+f15;
	f11 = f21*f0;
	f8 = f8+f9;
	f9 = f10+f11;
	f6 = f3*f6;
	f1 = f4*f1;
	f3 = f3*f5;
	f4 = f4*f7;
	f1 = f6+f1;
	f5 = f0*f8;
	f3 = f3+f4;
	f0 = f0*f9;
	f1 = f1+f5;
	f0 = f3+f0;
	f0 = f1+f0;
	f0 = f2/f0;
	heapFloat[(r1+121)] = f0;
}
	r0 = heapU8[r0+514];
	if(r0 ==0) //_LBB587_83
{
break _8;
}
else{
	f0 = heapFloat[(fp+-37)];
	f1 = -f0;
	f2 = heapFloat[(fp+-38)];
	f3 = -f2;
	f4 = heapFloat[(fp+-52)];
	f1 = f4*f1;
	f6 = heapFloat[(fp+-39)];
	f5 = heapFloat[(fp+-50)];
	f7 = f5*f6;
	f8 = heapFloat[(fp+-49)];
	f9 = f0*f8;
	f10 = f5*f2;
	f11 = -f6;
	f1 = f1-f7;
	f7 = heapFloat[(fp+-51)];
	f12 = f7*f2;
	f9 = f9+f10;
	f10 = f7*f6;
	f3 = f4*f3;
	f13 = f7*f0;
	f1 = f1+f12;
	f9 = f9+f10;
	f3 = f3-f13;
	f6 = f8*f6;
	f10 = f4*f11;
	f2 = f8*f2;
	f3 = f3+f6;
	f6 = f1*f4;
	f11 = f9*f8;
	f2 = f10-f2;
	f0 = f5*f0;
	f0 = f2+f0;
	f2 = f3*f4;
	f10 = f9*f5;
	f6 = f6-f11;
	f11 = f3*f7;
	f4 = f0*f4;
	f9 = f9*f7;
	f2 = f2-f10;
	f10 = f0*f8;
	f6 = f6-f11;
	f0 = f0*f5;
	f0 = f6+f0;
	f4 = f4-f9;
	f5 = f1*f5;
	f2 = f2-f10;
	f1 = f1*f7;
	f4 = f4-f5;
	f3 = f3*f8;
	f1 = f2+f1;
	heapFloat[(r1+131)] = f0;
	f0 = f4+f3;
	heapFloat[(r1+132)] = f1;
	heapFloat[(r1+133)] = f0;
	heap32[(r1+134)] = 0;
	return;
}
}
}
}
	r0 = _2E_str584;
	r1 = _2E_str685;
	heap32[(g0)] = r0;
	heap32[(g0+1)] = r1;
	heap32[(g0+2)] = 188;
	_assert(i7);
}
} while(0);
	return;
}